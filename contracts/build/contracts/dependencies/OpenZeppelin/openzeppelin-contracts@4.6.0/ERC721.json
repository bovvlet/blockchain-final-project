{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "name_",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "symbol_",
          "type": "string"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "0": "/home/john/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.6.0/contracts/token/ERC721/ERC721.sol",
    "1": "/home/john/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.6.0/contracts/token/ERC721/IERC721.sol",
    "10": "/home/john/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.6.0/contracts/utils/introspection/IERC165.sol",
    "2": "/home/john/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.6.0/contracts/token/ERC721/IERC721Receiver.sol",
    "4": "/home/john/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.6.0/contracts/token/ERC721/extensions/IERC721Metadata.sol",
    "5": "/home/john/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.6.0/contracts/utils/Address.sol",
    "6": "/home/john/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.6.0/contracts/utils/Context.sol",
    "8": "/home/john/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.6.0/contracts/utils/Strings.sol",
    "9": "/home/john/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.6.0/contracts/utils/introspection/ERC165.sol"
  },
  "ast": {
    "absolutePath": "/home/john/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.6.0/contracts/token/ERC721/ERC721.sol",
    "exportedSymbols": {
      "Address": [
        1836
      ],
      "Context": [
        1858
      ],
      "ERC165": [
        2085
      ],
      "ERC721": [
        1380
      ],
      "IERC165": [
        2097
      ],
      "IERC721": [
        1496
      ],
      "IERC721Metadata": [
        1541
      ],
      "IERC721Receiver": [
        1514
      ],
      "Strings": [
        2061
      ]
    },
    "id": 1381,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 516,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "107:23:0"
      },
      {
        "absolutePath": "/home/john/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.6.0/contracts/token/ERC721/IERC721.sol",
        "file": "./IERC721.sol",
        "id": 517,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1381,
        "sourceUnit": 1497,
        "src": "132:23:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/john/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.6.0/contracts/token/ERC721/IERC721Receiver.sol",
        "file": "./IERC721Receiver.sol",
        "id": 518,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1381,
        "sourceUnit": 1515,
        "src": "156:31:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/john/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.6.0/contracts/token/ERC721/extensions/IERC721Metadata.sol",
        "file": "./extensions/IERC721Metadata.sol",
        "id": 519,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1381,
        "sourceUnit": 1542,
        "src": "188:42:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/john/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.6.0/contracts/utils/Address.sol",
        "file": "../../utils/Address.sol",
        "id": 520,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1381,
        "sourceUnit": 1837,
        "src": "231:33:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/john/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.6.0/contracts/utils/Context.sol",
        "file": "../../utils/Context.sol",
        "id": 521,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1381,
        "sourceUnit": 1859,
        "src": "265:33:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/john/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.6.0/contracts/utils/Strings.sol",
        "file": "../../utils/Strings.sol",
        "id": 522,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1381,
        "sourceUnit": 2062,
        "src": "299:33:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/john/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.6.0/contracts/utils/introspection/ERC165.sol",
        "file": "../../utils/introspection/ERC165.sol",
        "id": 523,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1381,
        "sourceUnit": 2086,
        "src": "333:46:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 525,
              "name": "Context",
              "nameLocations": [
                "647:7:0"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1858,
              "src": "647:7:0"
            },
            "id": 526,
            "nodeType": "InheritanceSpecifier",
            "src": "647:7:0"
          },
          {
            "baseName": {
              "id": 527,
              "name": "ERC165",
              "nameLocations": [
                "656:6:0"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2085,
              "src": "656:6:0"
            },
            "id": 528,
            "nodeType": "InheritanceSpecifier",
            "src": "656:6:0"
          },
          {
            "baseName": {
              "id": 529,
              "name": "IERC721",
              "nameLocations": [
                "664:7:0"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1496,
              "src": "664:7:0"
            },
            "id": 530,
            "nodeType": "InheritanceSpecifier",
            "src": "664:7:0"
          },
          {
            "baseName": {
              "id": 531,
              "name": "IERC721Metadata",
              "nameLocations": [
                "673:15:0"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1541,
              "src": "673:15:0"
            },
            "id": 532,
            "nodeType": "InheritanceSpecifier",
            "src": "673:15:0"
          }
        ],
        "canonicalName": "ERC721",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 524,
          "nodeType": "StructuredDocumentation",
          "src": "381:246:0",
          "text": " @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\n the Metadata extension, but not including the Enumerable extension, which is available separately as\n {ERC721Enumerable}."
        },
        "fullyImplemented": true,
        "id": 1380,
        "linearizedBaseContracts": [
          1380,
          1541,
          1496,
          2085,
          2097,
          1858
        ],
        "name": "ERC721",
        "nameLocation": "637:6:0",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "global": false,
            "id": 535,
            "libraryName": {
              "id": 533,
              "name": "Address",
              "nameLocations": [
                "701:7:0"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1836,
              "src": "701:7:0"
            },
            "nodeType": "UsingForDirective",
            "src": "695:26:0",
            "typeName": {
              "id": 534,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "713:7:0",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            }
          },
          {
            "global": false,
            "id": 538,
            "libraryName": {
              "id": 536,
              "name": "Strings",
              "nameLocations": [
                "732:7:0"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2061,
              "src": "732:7:0"
            },
            "nodeType": "UsingForDirective",
            "src": "726:26:0",
            "typeName": {
              "id": 537,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "744:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "constant": false,
            "id": 540,
            "mutability": "mutable",
            "name": "_name",
            "nameLocation": "791:5:0",
            "nodeType": "VariableDeclaration",
            "scope": 1380,
            "src": "776:20:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 539,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "776:6:0",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 542,
            "mutability": "mutable",
            "name": "_symbol",
            "nameLocation": "838:7:0",
            "nodeType": "VariableDeclaration",
            "scope": 1380,
            "src": "823:22:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 541,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "823:6:0",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 546,
            "mutability": "mutable",
            "name": "_owners",
            "nameLocation": "934:7:0",
            "nodeType": "VariableDeclaration",
            "scope": 1380,
            "src": "898:43:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
              "typeString": "mapping(uint256 => address)"
            },
            "typeName": {
              "id": 545,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 543,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "906:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "898:27:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                "typeString": "mapping(uint256 => address)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 544,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "917:7:0",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 550,
            "mutability": "mutable",
            "name": "_balances",
            "nameLocation": "1028:9:0",
            "nodeType": "VariableDeclaration",
            "scope": 1380,
            "src": "992:45:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 549,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 547,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1000:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "992:27:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 548,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1011:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 554,
            "mutability": "mutable",
            "name": "_tokenApprovals",
            "nameLocation": "1129:15:0",
            "nodeType": "VariableDeclaration",
            "scope": 1380,
            "src": "1093:51:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
              "typeString": "mapping(uint256 => address)"
            },
            "typeName": {
              "id": 553,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 551,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1101:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "1093:27:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                "typeString": "mapping(uint256 => address)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 552,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1112:7:0",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 560,
            "mutability": "mutable",
            "name": "_operatorApprovals",
            "nameLocation": "1252:18:0",
            "nodeType": "VariableDeclaration",
            "scope": 1380,
            "src": "1199:71:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
              "typeString": "mapping(address => mapping(address => bool))"
            },
            "typeName": {
              "id": 559,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 555,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1207:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1199:44:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
                "typeString": "mapping(address => mapping(address => bool))"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 558,
                "keyName": "",
                "keyNameLocation": "-1:-1:-1",
                "keyType": {
                  "id": 556,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1226:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "nodeType": "Mapping",
                "src": "1218:24:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                  "typeString": "mapping(address => bool)"
                },
                "valueName": "",
                "valueNameLocation": "-1:-1:-1",
                "valueType": {
                  "id": 557,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "1237:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                }
              }
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 576,
              "nodeType": "Block",
              "src": "1446:57:0",
              "statements": [
                {
                  "expression": {
                    "id": 570,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 568,
                      "name": "_name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 540,
                      "src": "1456:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 569,
                      "name": "name_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 563,
                      "src": "1464:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "1456:13:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 571,
                  "nodeType": "ExpressionStatement",
                  "src": "1456:13:0"
                },
                {
                  "expression": {
                    "id": 574,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 572,
                      "name": "_symbol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 542,
                      "src": "1479:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 573,
                      "name": "symbol_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 565,
                      "src": "1489:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "1479:17:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 575,
                  "nodeType": "ExpressionStatement",
                  "src": "1479:17:0"
                }
              ]
            },
            "documentation": {
              "id": 561,
              "nodeType": "StructuredDocumentation",
              "src": "1277:108:0",
              "text": " @dev Initializes the contract by setting a `name` and a `symbol` to the token collection."
            },
            "id": 577,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 566,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 563,
                  "mutability": "mutable",
                  "name": "name_",
                  "nameLocation": "1416:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 577,
                  "src": "1402:19:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 562,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1402:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 565,
                  "mutability": "mutable",
                  "name": "symbol_",
                  "nameLocation": "1437:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 577,
                  "src": "1423:21:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 564,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1423:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1401:44:0"
            },
            "returnParameters": {
              "id": 567,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1446:0:0"
            },
            "scope": 1380,
            "src": "1390:113:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              2084,
              2096
            ],
            "body": {
              "id": 607,
              "nodeType": "Block",
              "src": "1678:192:0",
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 605,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "id": 600,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "commonType": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        },
                        "id": 593,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 588,
                          "name": "interfaceId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 580,
                          "src": "1707:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "arguments": [
                              {
                                "id": 590,
                                "name": "IERC721",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1496,
                                "src": "1727:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC721_$1496_$",
                                  "typeString": "type(contract IERC721)"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_type$_t_contract$_IERC721_$1496_$",
                                  "typeString": "type(contract IERC721)"
                                }
                              ],
                              "id": 589,
                              "name": "type",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -27,
                              "src": "1722:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                "typeString": "function () pure"
                              }
                            },
                            "id": 591,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1722:13:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_meta_type_t_contract$_IERC721_$1496",
                              "typeString": "type(contract IERC721)"
                            }
                          },
                          "id": 592,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "1736:11:0",
                          "memberName": "interfaceId",
                          "nodeType": "MemberAccess",
                          "src": "1722:25:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "src": "1707:40:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "||",
                      "rightExpression": {
                        "commonType": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        },
                        "id": 599,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 594,
                          "name": "interfaceId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 580,
                          "src": "1763:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "arguments": [
                              {
                                "id": 596,
                                "name": "IERC721Metadata",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1541,
                                "src": "1783:15:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC721Metadata_$1541_$",
                                  "typeString": "type(contract IERC721Metadata)"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_type$_t_contract$_IERC721Metadata_$1541_$",
                                  "typeString": "type(contract IERC721Metadata)"
                                }
                              ],
                              "id": 595,
                              "name": "type",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -27,
                              "src": "1778:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                "typeString": "function () pure"
                              }
                            },
                            "id": 597,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1778:21:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_meta_type_t_contract$_IERC721Metadata_$1541",
                              "typeString": "type(contract IERC721Metadata)"
                            }
                          },
                          "id": 598,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "1800:11:0",
                          "memberName": "interfaceId",
                          "nodeType": "MemberAccess",
                          "src": "1778:33:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "src": "1763:48:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "src": "1707:104:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "||",
                    "rightExpression": {
                      "arguments": [
                        {
                          "id": 603,
                          "name": "interfaceId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 580,
                          "src": "1851:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        ],
                        "expression": {
                          "id": 601,
                          "name": "super",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -25,
                          "src": "1827:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_super$_ERC721_$1380_$",
                            "typeString": "type(contract super ERC721)"
                          }
                        },
                        "id": 602,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1833:17:0",
                        "memberName": "supportsInterface",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2084,
                        "src": "1827:23:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
                          "typeString": "function (bytes4) view returns (bool)"
                        }
                      },
                      "id": 604,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1827:36:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "1707:156:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 587,
                  "id": 606,
                  "nodeType": "Return",
                  "src": "1688:175:0"
                }
              ]
            },
            "documentation": {
              "id": 578,
              "nodeType": "StructuredDocumentation",
              "src": "1509:56:0",
              "text": " @dev See {IERC165-supportsInterface}."
            },
            "functionSelector": "01ffc9a7",
            "id": 608,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "supportsInterface",
            "nameLocation": "1579:17:0",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 584,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 582,
                  "name": "ERC165",
                  "nameLocations": [
                    "1646:6:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2085,
                  "src": "1646:6:0"
                },
                {
                  "id": 583,
                  "name": "IERC165",
                  "nameLocations": [
                    "1654:7:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2097,
                  "src": "1654:7:0"
                }
              ],
              "src": "1637:25:0"
            },
            "parameters": {
              "id": 581,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 580,
                  "mutability": "mutable",
                  "name": "interfaceId",
                  "nameLocation": "1604:11:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 608,
                  "src": "1597:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 579,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "1597:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1596:20:0"
            },
            "returnParameters": {
              "id": 587,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 586,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 608,
                  "src": "1672:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 585,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1672:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1671:6:0"
            },
            "scope": 1380,
            "src": "1570:300:0",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1421
            ],
            "body": {
              "id": 631,
              "nodeType": "Block",
              "src": "2010:124:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 623,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 618,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 611,
                          "src": "2028:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 621,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2045:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 620,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2037:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 619,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2037:7:0",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 622,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2037:10:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2028:19:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a2062616c616e636520717565727920666f7220746865207a65726f2061646472657373",
                        "id": 624,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2049:44:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7395d4d3901c50cdfcab223d072f9aa36241df5d883e62cbf147ee1b05a9e6ba",
                          "typeString": "literal_string \"ERC721: balance query for the zero address\""
                        },
                        "value": "ERC721: balance query for the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7395d4d3901c50cdfcab223d072f9aa36241df5d883e62cbf147ee1b05a9e6ba",
                          "typeString": "literal_string \"ERC721: balance query for the zero address\""
                        }
                      ],
                      "id": 617,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2020:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 625,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2020:74:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 626,
                  "nodeType": "ExpressionStatement",
                  "src": "2020:74:0"
                },
                {
                  "expression": {
                    "baseExpression": {
                      "id": 627,
                      "name": "_balances",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 550,
                      "src": "2111:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 629,
                    "indexExpression": {
                      "id": 628,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 611,
                      "src": "2121:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2111:16:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 616,
                  "id": 630,
                  "nodeType": "Return",
                  "src": "2104:23:0"
                }
              ]
            },
            "documentation": {
              "id": 609,
              "nodeType": "StructuredDocumentation",
              "src": "1876:48:0",
              "text": " @dev See {IERC721-balanceOf}."
            },
            "functionSelector": "70a08231",
            "id": 632,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "balanceOf",
            "nameLocation": "1938:9:0",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 613,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1983:8:0"
            },
            "parameters": {
              "id": 612,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 611,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "1956:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 632,
                  "src": "1948:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 610,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1948:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1947:15:0"
            },
            "returnParameters": {
              "id": 616,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 615,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 632,
                  "src": "2001:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 614,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2001:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2000:9:0"
            },
            "scope": 1380,
            "src": "1929:205:0",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1429
            ],
            "body": {
              "id": 659,
              "nodeType": "Block",
              "src": "2272:154:0",
              "statements": [
                {
                  "assignments": [
                    642
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 642,
                      "mutability": "mutable",
                      "name": "owner",
                      "nameLocation": "2290:5:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 659,
                      "src": "2282:13:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 641,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2282:7:0",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 646,
                  "initialValue": {
                    "baseExpression": {
                      "id": 643,
                      "name": "_owners",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 546,
                      "src": "2298:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                        "typeString": "mapping(uint256 => address)"
                      }
                    },
                    "id": 645,
                    "indexExpression": {
                      "id": 644,
                      "name": "tokenId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 635,
                      "src": "2306:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2298:16:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2282:32:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 653,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 648,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 642,
                          "src": "2332:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 651,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2349:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 650,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2341:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 649,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2341:7:0",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 652,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2341:10:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2332:19:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a206f776e657220717565727920666f72206e6f6e6578697374656e7420746f6b656e",
                        "id": 654,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2353:43:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7481f3df2a424c0755a1ad2356614e9a5a358d461ea2eae1f89cb21cbad00397",
                          "typeString": "literal_string \"ERC721: owner query for nonexistent token\""
                        },
                        "value": "ERC721: owner query for nonexistent token"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7481f3df2a424c0755a1ad2356614e9a5a358d461ea2eae1f89cb21cbad00397",
                          "typeString": "literal_string \"ERC721: owner query for nonexistent token\""
                        }
                      ],
                      "id": 647,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2324:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 655,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2324:73:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 656,
                  "nodeType": "ExpressionStatement",
                  "src": "2324:73:0"
                },
                {
                  "expression": {
                    "id": 657,
                    "name": "owner",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 642,
                    "src": "2414:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 640,
                  "id": 658,
                  "nodeType": "Return",
                  "src": "2407:12:0"
                }
              ]
            },
            "documentation": {
              "id": 633,
              "nodeType": "StructuredDocumentation",
              "src": "2140:46:0",
              "text": " @dev See {IERC721-ownerOf}."
            },
            "functionSelector": "6352211e",
            "id": 660,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "ownerOf",
            "nameLocation": "2200:7:0",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 637,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2245:8:0"
            },
            "parameters": {
              "id": 636,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 635,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "2216:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 660,
                  "src": "2208:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 634,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2208:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2207:17:0"
            },
            "returnParameters": {
              "id": 640,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 639,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 660,
                  "src": "2263:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 638,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2263:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2262:9:0"
            },
            "scope": 1380,
            "src": "2191:235:0",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1526
            ],
            "body": {
              "id": 669,
              "nodeType": "Block",
              "src": "2557:29:0",
              "statements": [
                {
                  "expression": {
                    "id": 667,
                    "name": "_name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 540,
                    "src": "2574:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "functionReturnParameters": 666,
                  "id": 668,
                  "nodeType": "Return",
                  "src": "2567:12:0"
                }
              ]
            },
            "documentation": {
              "id": 661,
              "nodeType": "StructuredDocumentation",
              "src": "2432:51:0",
              "text": " @dev See {IERC721Metadata-name}."
            },
            "functionSelector": "06fdde03",
            "id": 670,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "name",
            "nameLocation": "2497:4:0",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 663,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2524:8:0"
            },
            "parameters": {
              "id": 662,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2501:2:0"
            },
            "returnParameters": {
              "id": 666,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 665,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 670,
                  "src": "2542:13:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 664,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2542:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2541:15:0"
            },
            "scope": 1380,
            "src": "2488:98:0",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1532
            ],
            "body": {
              "id": 679,
              "nodeType": "Block",
              "src": "2721:31:0",
              "statements": [
                {
                  "expression": {
                    "id": 677,
                    "name": "_symbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 542,
                    "src": "2738:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "functionReturnParameters": 676,
                  "id": 678,
                  "nodeType": "Return",
                  "src": "2731:14:0"
                }
              ]
            },
            "documentation": {
              "id": 671,
              "nodeType": "StructuredDocumentation",
              "src": "2592:53:0",
              "text": " @dev See {IERC721Metadata-symbol}."
            },
            "functionSelector": "95d89b41",
            "id": 680,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "symbol",
            "nameLocation": "2659:6:0",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 673,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2688:8:0"
            },
            "parameters": {
              "id": 672,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2665:2:0"
            },
            "returnParameters": {
              "id": 676,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 675,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 680,
                  "src": "2706:13:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 674,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2706:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2705:15:0"
            },
            "scope": 1380,
            "src": "2650:102:0",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1540
            ],
            "body": {
              "id": 721,
              "nodeType": "Block",
              "src": "2906:241:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 691,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 683,
                            "src": "2932:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 690,
                          "name": "_exists",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 953,
                          "src": "2924:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (uint256) view returns (bool)"
                          }
                        },
                        "id": 692,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2924:16:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732314d657461646174613a2055524920717565727920666f72206e6f6e6578697374656e7420746f6b656e",
                        "id": 693,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2942:49:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb",
                          "typeString": "literal_string \"ERC721Metadata: URI query for nonexistent token\""
                        },
                        "value": "ERC721Metadata: URI query for nonexistent token"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb",
                          "typeString": "literal_string \"ERC721Metadata: URI query for nonexistent token\""
                        }
                      ],
                      "id": 689,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2916:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 694,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2916:76:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 695,
                  "nodeType": "ExpressionStatement",
                  "src": "2916:76:0"
                },
                {
                  "assignments": [
                    697
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 697,
                      "mutability": "mutable",
                      "name": "baseURI",
                      "nameLocation": "3017:7:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 721,
                      "src": "3003:21:0",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 696,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "3003:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 700,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 698,
                      "name": "_baseURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 731,
                      "src": "3027:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_string_memory_ptr_$",
                        "typeString": "function () view returns (string memory)"
                      }
                    },
                    "id": 699,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3027:10:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3003:34:0"
                },
                {
                  "expression": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 707,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "arguments": [
                            {
                              "id": 703,
                              "name": "baseURI",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 697,
                              "src": "3060:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            ],
                            "id": 702,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "3054:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                              "typeString": "type(bytes storage pointer)"
                            },
                            "typeName": {
                              "id": 701,
                              "name": "bytes",
                              "nodeType": "ElementaryTypeName",
                              "src": "3054:5:0",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 704,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3054:14:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        },
                        "id": 705,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3069:6:0",
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "src": "3054:21:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 706,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3078:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "3054:25:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "hexValue": "",
                      "id": 718,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "string",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3138:2:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                        "typeString": "literal_string \"\""
                      },
                      "value": ""
                    },
                    "id": 719,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "3054:86:0",
                    "trueExpression": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 712,
                              "name": "baseURI",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 697,
                              "src": "3106:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            },
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "expression": {
                                  "id": 713,
                                  "name": "tokenId",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 683,
                                  "src": "3115:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 714,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "3123:8:0",
                                "memberName": "toString",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1943,
                                "src": "3115:16:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$attached_to$_t_uint256_$",
                                  "typeString": "function (uint256) pure returns (string memory)"
                                }
                              },
                              "id": 715,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3115:18:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              },
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            ],
                            "expression": {
                              "id": 710,
                              "name": "abi",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -1,
                              "src": "3089:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_abi",
                                "typeString": "abi"
                              }
                            },
                            "id": 711,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "3093:12:0",
                            "memberName": "encodePacked",
                            "nodeType": "MemberAccess",
                            "src": "3089:16:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                              "typeString": "function () pure returns (bytes memory)"
                            }
                          },
                          "id": 716,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3089:45:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        ],
                        "id": 709,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "3082:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                          "typeString": "type(string storage pointer)"
                        },
                        "typeName": {
                          "id": 708,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "3082:6:0",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 717,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3082:53:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "functionReturnParameters": 688,
                  "id": 720,
                  "nodeType": "Return",
                  "src": "3047:93:0"
                }
              ]
            },
            "documentation": {
              "id": 681,
              "nodeType": "StructuredDocumentation",
              "src": "2758:55:0",
              "text": " @dev See {IERC721Metadata-tokenURI}."
            },
            "functionSelector": "c87b56dd",
            "id": 722,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "tokenURI",
            "nameLocation": "2827:8:0",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 685,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2873:8:0"
            },
            "parameters": {
              "id": 684,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 683,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "2844:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 722,
                  "src": "2836:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 682,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2836:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2835:17:0"
            },
            "returnParameters": {
              "id": 688,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 687,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 722,
                  "src": "2891:13:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 686,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2891:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2890:15:0"
            },
            "scope": 1380,
            "src": "2818:329:0",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 730,
              "nodeType": "Block",
              "src": "3455:26:0",
              "statements": [
                {
                  "expression": {
                    "hexValue": "",
                    "id": 728,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "3472:2:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                      "typeString": "literal_string \"\""
                    },
                    "value": ""
                  },
                  "functionReturnParameters": 727,
                  "id": 729,
                  "nodeType": "Return",
                  "src": "3465:9:0"
                }
              ]
            },
            "documentation": {
              "id": 723,
              "nodeType": "StructuredDocumentation",
              "src": "3153:231:0",
              "text": " @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n by default, can be overridden in child contracts."
            },
            "id": 731,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_baseURI",
            "nameLocation": "3398:8:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 724,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3406:2:0"
            },
            "returnParameters": {
              "id": 727,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 726,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 731,
                  "src": "3440:13:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 725,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3440:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3439:15:0"
            },
            "scope": 1380,
            "src": "3389:92:0",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "baseFunctions": [
              1469
            ],
            "body": {
              "id": 773,
              "nodeType": "Block",
              "src": "3608:331:0",
              "statements": [
                {
                  "assignments": [
                    741
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 741,
                      "mutability": "mutable",
                      "name": "owner",
                      "nameLocation": "3626:5:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 773,
                      "src": "3618:13:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 740,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "3618:7:0",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 746,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 744,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 736,
                        "src": "3649:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 742,
                        "name": "ERC721",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1380,
                        "src": "3634:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC721_$1380_$",
                          "typeString": "type(contract ERC721)"
                        }
                      },
                      "id": 743,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3641:7:0",
                      "memberName": "ownerOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 660,
                      "src": "3634:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                        "typeString": "function (uint256) view returns (address)"
                      }
                    },
                    "id": 745,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3634:23:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3618:39:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 750,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 748,
                          "name": "to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 734,
                          "src": "3675:2:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "id": 749,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 741,
                          "src": "3681:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "3675:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a20617070726f76616c20746f2063757272656e74206f776e6572",
                        "id": 751,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3688:35:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942",
                          "typeString": "literal_string \"ERC721: approval to current owner\""
                        },
                        "value": "ERC721: approval to current owner"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942",
                          "typeString": "literal_string \"ERC721: approval to current owner\""
                        }
                      ],
                      "id": 747,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3667:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 752,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3667:57:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 753,
                  "nodeType": "ExpressionStatement",
                  "src": "3667:57:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 764,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 758,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 755,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1848,
                              "src": "3756:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 756,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3756:12:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 757,
                            "name": "owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 741,
                            "src": "3772:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "3756:21:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "arguments": [
                            {
                              "id": 760,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 741,
                              "src": "3798:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 761,
                                "name": "_msgSender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1848,
                                "src": "3805:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                  "typeString": "function () view returns (address)"
                                }
                              },
                              "id": 762,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3805:12:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 759,
                            "name": "isApprovedForAll",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 830,
                            "src": "3781:16:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
                              "typeString": "function (address,address) view returns (bool)"
                            }
                          },
                          "id": 763,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3781:37:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "3756:62:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a20617070726f76652063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f76656420666f7220616c6c",
                        "id": 765,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3832:58:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6d83cef3e0cb19b8320a9c5feb26b56bbb08f152a8e61b12eca3302d8d68b23d",
                          "typeString": "literal_string \"ERC721: approve caller is not owner nor approved for all\""
                        },
                        "value": "ERC721: approve caller is not owner nor approved for all"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6d83cef3e0cb19b8320a9c5feb26b56bbb08f152a8e61b12eca3302d8d68b23d",
                          "typeString": "literal_string \"ERC721: approve caller is not owner nor approved for all\""
                        }
                      ],
                      "id": 754,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3735:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 766,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3735:165:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 767,
                  "nodeType": "ExpressionStatement",
                  "src": "3735:165:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 769,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 734,
                        "src": "3920:2:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 770,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 736,
                        "src": "3924:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 768,
                      "name": "_approve",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1263,
                      "src": "3911:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 771,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3911:21:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 772,
                  "nodeType": "ExpressionStatement",
                  "src": "3911:21:0"
                }
              ]
            },
            "documentation": {
              "id": 732,
              "nodeType": "StructuredDocumentation",
              "src": "3487:46:0",
              "text": " @dev See {IERC721-approve}."
            },
            "functionSelector": "095ea7b3",
            "id": 774,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "approve",
            "nameLocation": "3547:7:0",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 738,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3599:8:0"
            },
            "parameters": {
              "id": 737,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 734,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "3563:2:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 774,
                  "src": "3555:10:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 733,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3555:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 736,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "3575:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 774,
                  "src": "3567:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 735,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3567:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3554:29:0"
            },
            "returnParameters": {
              "id": 739,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3608:0:0"
            },
            "scope": 1380,
            "src": "3538:401:0",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1485
            ],
            "body": {
              "id": 794,
              "nodeType": "Block",
              "src": "4085:132:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 785,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 777,
                            "src": "4111:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 784,
                          "name": "_exists",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 953,
                          "src": "4103:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (uint256) view returns (bool)"
                          }
                        },
                        "id": 786,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4103:16:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a20617070726f76656420717565727920666f72206e6f6e6578697374656e7420746f6b656e",
                        "id": 787,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4121:46:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9291e0f44949204f2e9b40e6be090924979d6047b2365868f4e9f027722eb89d",
                          "typeString": "literal_string \"ERC721: approved query for nonexistent token\""
                        },
                        "value": "ERC721: approved query for nonexistent token"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9291e0f44949204f2e9b40e6be090924979d6047b2365868f4e9f027722eb89d",
                          "typeString": "literal_string \"ERC721: approved query for nonexistent token\""
                        }
                      ],
                      "id": 783,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4095:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 788,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4095:73:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 789,
                  "nodeType": "ExpressionStatement",
                  "src": "4095:73:0"
                },
                {
                  "expression": {
                    "baseExpression": {
                      "id": 790,
                      "name": "_tokenApprovals",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 554,
                      "src": "4186:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                        "typeString": "mapping(uint256 => address)"
                      }
                    },
                    "id": 792,
                    "indexExpression": {
                      "id": 791,
                      "name": "tokenId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 777,
                      "src": "4202:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "4186:24:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 782,
                  "id": 793,
                  "nodeType": "Return",
                  "src": "4179:31:0"
                }
              ]
            },
            "documentation": {
              "id": 775,
              "nodeType": "StructuredDocumentation",
              "src": "3945:50:0",
              "text": " @dev See {IERC721-getApproved}."
            },
            "functionSelector": "081812fc",
            "id": 795,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getApproved",
            "nameLocation": "4009:11:0",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 779,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4058:8:0"
            },
            "parameters": {
              "id": 778,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 777,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "4029:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 795,
                  "src": "4021:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 776,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4021:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4020:17:0"
            },
            "returnParameters": {
              "id": 782,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 781,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 795,
                  "src": "4076:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 780,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4076:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4075:9:0"
            },
            "scope": 1380,
            "src": "4000:217:0",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1477
            ],
            "body": {
              "id": 811,
              "nodeType": "Block",
              "src": "4368:69:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 805,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1848,
                          "src": "4397:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 806,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4397:12:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 807,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 798,
                        "src": "4411:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 808,
                        "name": "approved",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 800,
                        "src": "4421:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 804,
                      "name": "_setApprovalForAll",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1295,
                      "src": "4378:18:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
                        "typeString": "function (address,address,bool)"
                      }
                    },
                    "id": 809,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4378:52:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 810,
                  "nodeType": "ExpressionStatement",
                  "src": "4378:52:0"
                }
              ]
            },
            "documentation": {
              "id": 796,
              "nodeType": "StructuredDocumentation",
              "src": "4223:56:0",
              "text": " @dev See {IERC721-setApprovalForAll}."
            },
            "functionSelector": "a22cb465",
            "id": 812,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setApprovalForAll",
            "nameLocation": "4293:17:0",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 802,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4359:8:0"
            },
            "parameters": {
              "id": 801,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 798,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "4319:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 812,
                  "src": "4311:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 797,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4311:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 800,
                  "mutability": "mutable",
                  "name": "approved",
                  "nameLocation": "4334:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 812,
                  "src": "4329:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 799,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4329:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4310:33:0"
            },
            "returnParameters": {
              "id": 803,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4368:0:0"
            },
            "scope": 1380,
            "src": "4284:153:0",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1495
            ],
            "body": {
              "id": 829,
              "nodeType": "Block",
              "src": "4606:59:0",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "baseExpression": {
                        "id": 823,
                        "name": "_operatorApprovals",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 560,
                        "src": "4623:18:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
                          "typeString": "mapping(address => mapping(address => bool))"
                        }
                      },
                      "id": 825,
                      "indexExpression": {
                        "id": 824,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 815,
                        "src": "4642:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "4623:25:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                        "typeString": "mapping(address => bool)"
                      }
                    },
                    "id": 827,
                    "indexExpression": {
                      "id": 826,
                      "name": "operator",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 817,
                      "src": "4649:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "4623:35:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 822,
                  "id": 828,
                  "nodeType": "Return",
                  "src": "4616:42:0"
                }
              ]
            },
            "documentation": {
              "id": 813,
              "nodeType": "StructuredDocumentation",
              "src": "4443:55:0",
              "text": " @dev See {IERC721-isApprovedForAll}."
            },
            "functionSelector": "e985e9c5",
            "id": 830,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isApprovedForAll",
            "nameLocation": "4512:16:0",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 819,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4582:8:0"
            },
            "parameters": {
              "id": 818,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 815,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "4537:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 830,
                  "src": "4529:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 814,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4529:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 817,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "4552:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 830,
                  "src": "4544:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 816,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4544:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4528:33:0"
            },
            "returnParameters": {
              "id": 822,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 821,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 830,
                  "src": "4600:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 820,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4600:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4599:6:0"
            },
            "scope": 1380,
            "src": "4503:162:0",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1461
            ],
            "body": {
              "id": 856,
              "nodeType": "Block",
              "src": "4846:211:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 843,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1848,
                              "src": "4935:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 844,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4935:12:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 845,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 837,
                            "src": "4949:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 842,
                          "name": "_isApprovedOrOwner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 994,
                          "src": "4916:18:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,uint256) view returns (bool)"
                          }
                        },
                        "id": 846,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4916:41:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a207472616e736665722063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564",
                        "id": 847,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4959:51:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c8682f3ad98807db59a6ec6bb812b72fed0a66e3150fa8239699ee83885247f2",
                          "typeString": "literal_string \"ERC721: transfer caller is not owner nor approved\""
                        },
                        "value": "ERC721: transfer caller is not owner nor approved"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c8682f3ad98807db59a6ec6bb812b72fed0a66e3150fa8239699ee83885247f2",
                          "typeString": "literal_string \"ERC721: transfer caller is not owner nor approved\""
                        }
                      ],
                      "id": 841,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4908:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 848,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4908:103:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 849,
                  "nodeType": "ExpressionStatement",
                  "src": "4908:103:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 851,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 833,
                        "src": "5032:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 852,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 835,
                        "src": "5038:2:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 853,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 837,
                        "src": "5042:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 850,
                      "name": "_transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1239,
                      "src": "5022:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 854,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5022:28:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 855,
                  "nodeType": "ExpressionStatement",
                  "src": "5022:28:0"
                }
              ]
            },
            "documentation": {
              "id": 831,
              "nodeType": "StructuredDocumentation",
              "src": "4671:51:0",
              "text": " @dev See {IERC721-transferFrom}."
            },
            "functionSelector": "23b872dd",
            "id": 857,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transferFrom",
            "nameLocation": "4736:12:0",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 839,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4837:8:0"
            },
            "parameters": {
              "id": 838,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 833,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "4766:4:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 857,
                  "src": "4758:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 832,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4758:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 835,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "4788:2:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 857,
                  "src": "4780:10:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 834,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4780:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 837,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "4808:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 857,
                  "src": "4800:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 836,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4800:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4748:73:0"
            },
            "returnParameters": {
              "id": 840,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4846:0:0"
            },
            "scope": 1380,
            "src": "4727:330:0",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1451
            ],
            "body": {
              "id": 875,
              "nodeType": "Block",
              "src": "5246:56:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 869,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 860,
                        "src": "5273:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 870,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 862,
                        "src": "5279:2:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 871,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 864,
                        "src": "5283:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "",
                        "id": 872,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5292:2:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "id": 868,
                      "name": "safeTransferFrom",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        876,
                        906
                      ],
                      "referencedDeclaration": 906,
                      "src": "5256:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,uint256,bytes memory)"
                      }
                    },
                    "id": 873,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5256:39:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 874,
                  "nodeType": "ExpressionStatement",
                  "src": "5256:39:0"
                }
              ]
            },
            "documentation": {
              "id": 858,
              "nodeType": "StructuredDocumentation",
              "src": "5063:55:0",
              "text": " @dev See {IERC721-safeTransferFrom}."
            },
            "functionSelector": "42842e0e",
            "id": 876,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "safeTransferFrom",
            "nameLocation": "5132:16:0",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 866,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "5237:8:0"
            },
            "parameters": {
              "id": 865,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 860,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "5166:4:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 876,
                  "src": "5158:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 859,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5158:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 862,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "5188:2:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 876,
                  "src": "5180:10:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 861,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5180:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 864,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "5208:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 876,
                  "src": "5200:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 863,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5200:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5148:73:0"
            },
            "returnParameters": {
              "id": 867,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5246:0:0"
            },
            "scope": 1380,
            "src": "5123:179:0",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1441
            ],
            "body": {
              "id": 905,
              "nodeType": "Block",
              "src": "5519:169:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 891,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1848,
                              "src": "5556:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 892,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5556:12:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 893,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 883,
                            "src": "5570:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 890,
                          "name": "_isApprovedOrOwner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 994,
                          "src": "5537:18:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,uint256) view returns (bool)"
                          }
                        },
                        "id": 894,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5537:41:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a207472616e736665722063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564",
                        "id": 895,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5580:51:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c8682f3ad98807db59a6ec6bb812b72fed0a66e3150fa8239699ee83885247f2",
                          "typeString": "literal_string \"ERC721: transfer caller is not owner nor approved\""
                        },
                        "value": "ERC721: transfer caller is not owner nor approved"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c8682f3ad98807db59a6ec6bb812b72fed0a66e3150fa8239699ee83885247f2",
                          "typeString": "literal_string \"ERC721: transfer caller is not owner nor approved\""
                        }
                      ],
                      "id": 889,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5529:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 896,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5529:103:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 897,
                  "nodeType": "ExpressionStatement",
                  "src": "5529:103:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 899,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 879,
                        "src": "5656:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 900,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 881,
                        "src": "5662:2:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 901,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 883,
                        "src": "5666:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 902,
                        "name": "_data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 885,
                        "src": "5675:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 898,
                      "name": "_safeTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 935,
                      "src": "5642:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,uint256,bytes memory)"
                      }
                    },
                    "id": 903,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5642:39:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 904,
                  "nodeType": "ExpressionStatement",
                  "src": "5642:39:0"
                }
              ]
            },
            "documentation": {
              "id": 877,
              "nodeType": "StructuredDocumentation",
              "src": "5308:55:0",
              "text": " @dev See {IERC721-safeTransferFrom}."
            },
            "functionSelector": "b88d4fde",
            "id": 906,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "safeTransferFrom",
            "nameLocation": "5377:16:0",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 887,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "5510:8:0"
            },
            "parameters": {
              "id": 886,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 879,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "5411:4:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 906,
                  "src": "5403:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 878,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5403:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 881,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "5433:2:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 906,
                  "src": "5425:10:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 880,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5425:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 883,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "5453:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 906,
                  "src": "5445:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 882,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5445:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 885,
                  "mutability": "mutable",
                  "name": "_data",
                  "nameLocation": "5483:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 906,
                  "src": "5470:18:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 884,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "5470:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5393:101:0"
            },
            "returnParameters": {
              "id": 888,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5519:0:0"
            },
            "scope": 1380,
            "src": "5368:320:0",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 934,
              "nodeType": "Block",
              "src": "6691:166:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 919,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 909,
                        "src": "6711:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 920,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 911,
                        "src": "6717:2:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 921,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 913,
                        "src": "6721:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 918,
                      "name": "_transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1239,
                      "src": "6701:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 922,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6701:28:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 923,
                  "nodeType": "ExpressionStatement",
                  "src": "6701:28:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 926,
                            "name": "from",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 909,
                            "src": "6770:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 927,
                            "name": "to",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 911,
                            "src": "6776:2:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 928,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 913,
                            "src": "6780:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 929,
                            "name": "_data",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 915,
                            "src": "6789:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 925,
                          "name": "_checkOnERC721Received",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1357,
                          "src": "6747:22:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
                            "typeString": "function (address,address,uint256,bytes memory) returns (bool)"
                          }
                        },
                        "id": 930,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6747:48:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e746572",
                        "id": 931,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6797:52:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
                          "typeString": "literal_string \"ERC721: transfer to non ERC721Receiver implementer\""
                        },
                        "value": "ERC721: transfer to non ERC721Receiver implementer"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
                          "typeString": "literal_string \"ERC721: transfer to non ERC721Receiver implementer\""
                        }
                      ],
                      "id": 924,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6739:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 932,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6739:111:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 933,
                  "nodeType": "ExpressionStatement",
                  "src": "6739:111:0"
                }
              ]
            },
            "documentation": {
              "id": 907,
              "nodeType": "StructuredDocumentation",
              "src": "5694:851:0",
              "text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n `_data` is additional data, it has no specified format and it is sent in call to `to`.\n This internal function is equivalent to {safeTransferFrom}, and can be used to e.g.\n implement alternative mechanisms to perform token transfer, such as signature-based.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
            },
            "id": 935,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_safeTransfer",
            "nameLocation": "6559:13:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 916,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 909,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "6590:4:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 935,
                  "src": "6582:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 908,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6582:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 911,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "6612:2:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 935,
                  "src": "6604:10:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 910,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6604:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 913,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "6632:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 935,
                  "src": "6624:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 912,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6624:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 915,
                  "mutability": "mutable",
                  "name": "_data",
                  "nameLocation": "6662:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 935,
                  "src": "6649:18:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 914,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "6649:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6572:101:0"
            },
            "returnParameters": {
              "id": 917,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6691:0:0"
            },
            "scope": 1380,
            "src": "6550:307:0",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 952,
              "nodeType": "Block",
              "src": "7231:54:0",
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 950,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "baseExpression": {
                        "id": 943,
                        "name": "_owners",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 546,
                        "src": "7248:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                          "typeString": "mapping(uint256 => address)"
                        }
                      },
                      "id": 945,
                      "indexExpression": {
                        "id": 944,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 938,
                        "src": "7256:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "7248:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 948,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7276:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 947,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "7268:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 946,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "7268:7:0",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 949,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7268:10:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "7248:30:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 942,
                  "id": 951,
                  "nodeType": "Return",
                  "src": "7241:37:0"
                }
              ]
            },
            "documentation": {
              "id": 936,
              "nodeType": "StructuredDocumentation",
              "src": "6863:292:0",
              "text": " @dev Returns whether `tokenId` exists.\n Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\n Tokens start existing when they are minted (`_mint`),\n and stop existing when they are burned (`_burn`)."
            },
            "id": 953,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_exists",
            "nameLocation": "7169:7:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 939,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 938,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "7185:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 953,
                  "src": "7177:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 937,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7177:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7176:17:0"
            },
            "returnParameters": {
              "id": 942,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 941,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 953,
                  "src": "7225:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 940,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "7225:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7224:6:0"
            },
            "scope": 1380,
            "src": "7160:125:0",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 993,
              "nodeType": "Block",
              "src": "7542:245:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 965,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 958,
                            "src": "7568:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 964,
                          "name": "_exists",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 953,
                          "src": "7560:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (uint256) view returns (bool)"
                          }
                        },
                        "id": 966,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7560:16:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a206f70657261746f7220717565727920666f72206e6f6e6578697374656e7420746f6b656e",
                        "id": 967,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7578:46:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5797d1ccb08b83980dd0c07ea40d8f6a64d35fff736a19bdd17522954cb0899c",
                          "typeString": "literal_string \"ERC721: operator query for nonexistent token\""
                        },
                        "value": "ERC721: operator query for nonexistent token"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5797d1ccb08b83980dd0c07ea40d8f6a64d35fff736a19bdd17522954cb0899c",
                          "typeString": "literal_string \"ERC721: operator query for nonexistent token\""
                        }
                      ],
                      "id": 963,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7552:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 968,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7552:73:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 969,
                  "nodeType": "ExpressionStatement",
                  "src": "7552:73:0"
                },
                {
                  "assignments": [
                    971
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 971,
                      "mutability": "mutable",
                      "name": "owner",
                      "nameLocation": "7643:5:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 993,
                      "src": "7635:13:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 970,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "7635:7:0",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 976,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 974,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 958,
                        "src": "7666:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 972,
                        "name": "ERC721",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1380,
                        "src": "7651:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC721_$1380_$",
                          "typeString": "type(contract ERC721)"
                        }
                      },
                      "id": 973,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "7658:7:0",
                      "memberName": "ownerOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 660,
                      "src": "7651:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                        "typeString": "function (uint256) view returns (address)"
                      }
                    },
                    "id": 975,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7651:23:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7635:39:0"
                },
                {
                  "expression": {
                    "components": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 990,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 984,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "id": 979,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 977,
                              "name": "spender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 956,
                              "src": "7692:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "id": 978,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 971,
                              "src": "7703:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "src": "7692:16:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "||",
                          "rightExpression": {
                            "arguments": [
                              {
                                "id": 981,
                                "name": "owner",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 971,
                                "src": "7729:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "id": 982,
                                "name": "spender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 956,
                                "src": "7736:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 980,
                              "name": "isApprovedForAll",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 830,
                              "src": "7712:16:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
                                "typeString": "function (address,address) view returns (bool)"
                              }
                            },
                            "id": 983,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7712:32:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "7692:52:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 989,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [
                              {
                                "id": 986,
                                "name": "tokenId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 958,
                                "src": "7760:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 985,
                              "name": "getApproved",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 795,
                              "src": "7748:11:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                                "typeString": "function (uint256) view returns (address)"
                              }
                            },
                            "id": 987,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7748:20:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 988,
                            "name": "spender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 956,
                            "src": "7772:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "7748:31:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "7692:87:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "id": 991,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "7691:89:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 962,
                  "id": 992,
                  "nodeType": "Return",
                  "src": "7684:96:0"
                }
              ]
            },
            "documentation": {
              "id": 954,
              "nodeType": "StructuredDocumentation",
              "src": "7291:147:0",
              "text": " @dev Returns whether `spender` is allowed to manage `tokenId`.\n Requirements:\n - `tokenId` must exist."
            },
            "id": 994,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_isApprovedOrOwner",
            "nameLocation": "7452:18:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 959,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 956,
                  "mutability": "mutable",
                  "name": "spender",
                  "nameLocation": "7479:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 994,
                  "src": "7471:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 955,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7471:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 958,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "7496:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 994,
                  "src": "7488:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 957,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7488:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7470:34:0"
            },
            "returnParameters": {
              "id": 962,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 961,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 994,
                  "src": "7536:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 960,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "7536:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7535:6:0"
            },
            "scope": 1380,
            "src": "7443:344:0",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1008,
              "nodeType": "Block",
              "src": "8182:43:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1003,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 997,
                        "src": "8202:2:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1004,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 999,
                        "src": "8206:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "",
                        "id": 1005,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8215:2:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "id": 1002,
                      "name": "_safeMint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1009,
                        1038
                      ],
                      "referencedDeclaration": 1038,
                      "src": "8192:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,uint256,bytes memory)"
                      }
                    },
                    "id": 1006,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8192:26:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1007,
                  "nodeType": "ExpressionStatement",
                  "src": "8192:26:0"
                }
              ]
            },
            "documentation": {
              "id": 995,
              "nodeType": "StructuredDocumentation",
              "src": "7793:319:0",
              "text": " @dev Safely mints `tokenId` and transfers it to `to`.\n Requirements:\n - `tokenId` must not exist.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
            },
            "id": 1009,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_safeMint",
            "nameLocation": "8126:9:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1000,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 997,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "8144:2:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1009,
                  "src": "8136:10:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 996,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8136:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 999,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "8156:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1009,
                  "src": "8148:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 998,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8148:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8135:29:0"
            },
            "returnParameters": {
              "id": 1001,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8182:0:0"
            },
            "scope": 1380,
            "src": "8117:108:0",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1037,
              "nodeType": "Block",
              "src": "8561:196:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1020,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1012,
                        "src": "8577:2:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1021,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1014,
                        "src": "8581:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1019,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1104,
                      "src": "8571:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 1022,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8571:18:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1023,
                  "nodeType": "ExpressionStatement",
                  "src": "8571:18:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 1028,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "8651:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 1027,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "8643:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 1026,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "8643:7:0",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 1029,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8643:10:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 1030,
                            "name": "to",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1012,
                            "src": "8655:2:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 1031,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1014,
                            "src": "8659:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 1032,
                            "name": "_data",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1016,
                            "src": "8668:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 1025,
                          "name": "_checkOnERC721Received",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1357,
                          "src": "8620:22:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
                            "typeString": "function (address,address,uint256,bytes memory) returns (bool)"
                          }
                        },
                        "id": 1033,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8620:54:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e746572",
                        "id": 1034,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8688:52:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
                          "typeString": "literal_string \"ERC721: transfer to non ERC721Receiver implementer\""
                        },
                        "value": "ERC721: transfer to non ERC721Receiver implementer"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
                          "typeString": "literal_string \"ERC721: transfer to non ERC721Receiver implementer\""
                        }
                      ],
                      "id": 1024,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8599:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1035,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8599:151:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1036,
                  "nodeType": "ExpressionStatement",
                  "src": "8599:151:0"
                }
              ]
            },
            "documentation": {
              "id": 1010,
              "nodeType": "StructuredDocumentation",
              "src": "8231:210:0",
              "text": " @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n forwarded in {IERC721Receiver-onERC721Received} to contract recipients."
            },
            "id": 1038,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_safeMint",
            "nameLocation": "8455:9:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1017,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1012,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "8482:2:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1038,
                  "src": "8474:10:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1011,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8474:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1014,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "8502:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1038,
                  "src": "8494:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1013,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8494:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1016,
                  "mutability": "mutable",
                  "name": "_data",
                  "nameLocation": "8532:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1038,
                  "src": "8519:18:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 1015,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "8519:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8464:79:0"
            },
            "returnParameters": {
              "id": 1018,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8561:0:0"
            },
            "scope": 1380,
            "src": "8446:311:0",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1103,
              "nodeType": "Block",
              "src": "9140:366:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1052,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1047,
                          "name": "to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1041,
                          "src": "9158:2:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 1050,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9172:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 1049,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "9164:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 1048,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "9164:7:0",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1051,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9164:10:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "9158:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a206d696e7420746f20746865207a65726f2061646472657373",
                        "id": 1053,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9176:34:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6",
                          "typeString": "literal_string \"ERC721: mint to the zero address\""
                        },
                        "value": "ERC721: mint to the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6",
                          "typeString": "literal_string \"ERC721: mint to the zero address\""
                        }
                      ],
                      "id": 1046,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "9150:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1054,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9150:61:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1055,
                  "nodeType": "ExpressionStatement",
                  "src": "9150:61:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1060,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "9229:17:0",
                        "subExpression": {
                          "arguments": [
                            {
                              "id": 1058,
                              "name": "tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1043,
                              "src": "9238:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1057,
                            "name": "_exists",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 953,
                            "src": "9230:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (uint256) view returns (bool)"
                            }
                          },
                          "id": 1059,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9230:16:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a20746f6b656e20616c7265616479206d696e746564",
                        "id": 1061,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9248:30:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57",
                          "typeString": "literal_string \"ERC721: token already minted\""
                        },
                        "value": "ERC721: token already minted"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57",
                          "typeString": "literal_string \"ERC721: token already minted\""
                        }
                      ],
                      "id": 1056,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "9221:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1062,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9221:58:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1063,
                  "nodeType": "ExpressionStatement",
                  "src": "9221:58:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 1067,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9319:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 1066,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9311:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1065,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "9311:7:0",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1068,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9311:10:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1069,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1041,
                        "src": "9323:2:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1070,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1043,
                        "src": "9327:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1064,
                      "name": "_beforeTokenTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1368,
                      "src": "9290:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 1071,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9290:45:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1072,
                  "nodeType": "ExpressionStatement",
                  "src": "9290:45:0"
                },
                {
                  "expression": {
                    "id": 1077,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1073,
                        "name": "_balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 550,
                        "src": "9346:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 1075,
                      "indexExpression": {
                        "id": 1074,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1041,
                        "src": "9356:2:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "9346:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 1076,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "9363:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "9346:18:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1078,
                  "nodeType": "ExpressionStatement",
                  "src": "9346:18:0"
                },
                {
                  "expression": {
                    "id": 1083,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1079,
                        "name": "_owners",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 546,
                        "src": "9374:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                          "typeString": "mapping(uint256 => address)"
                        }
                      },
                      "id": 1081,
                      "indexExpression": {
                        "id": 1080,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1043,
                        "src": "9382:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "9374:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1082,
                      "name": "to",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1041,
                      "src": "9393:2:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "9374:21:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1084,
                  "nodeType": "ExpressionStatement",
                  "src": "9374:21:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 1088,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9428:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 1087,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9420:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1086,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "9420:7:0",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1089,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9420:10:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1090,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1041,
                        "src": "9432:2:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1091,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1043,
                        "src": "9436:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1085,
                      "name": "Transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1395,
                      "src": "9411:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 1092,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9411:33:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1093,
                  "nodeType": "EmitStatement",
                  "src": "9406:38:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 1097,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9483:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 1096,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9475:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1095,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "9475:7:0",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1098,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9475:10:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1099,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1041,
                        "src": "9487:2:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1100,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1043,
                        "src": "9491:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1094,
                      "name": "_afterTokenTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1379,
                      "src": "9455:19:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 1101,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9455:44:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1102,
                  "nodeType": "ExpressionStatement",
                  "src": "9455:44:0"
                }
              ]
            },
            "documentation": {
              "id": 1039,
              "nodeType": "StructuredDocumentation",
              "src": "8763:311:0",
              "text": " @dev Mints `tokenId` and transfers it to `to`.\n WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n Requirements:\n - `tokenId` must not exist.\n - `to` cannot be the zero address.\n Emits a {Transfer} event."
            },
            "id": 1104,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_mint",
            "nameLocation": "9088:5:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1044,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1041,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "9102:2:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1104,
                  "src": "9094:10:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1040,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9094:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1043,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "9114:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1104,
                  "src": "9106:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1042,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9106:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9093:29:0"
            },
            "returnParameters": {
              "id": 1045,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9140:0:0"
            },
            "scope": 1380,
            "src": "9079:427:0",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1163,
              "nodeType": "Block",
              "src": "9772:357:0",
              "statements": [
                {
                  "assignments": [
                    1111
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1111,
                      "mutability": "mutable",
                      "name": "owner",
                      "nameLocation": "9790:5:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 1163,
                      "src": "9782:13:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1110,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "9782:7:0",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1116,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 1114,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1107,
                        "src": "9813:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 1112,
                        "name": "ERC721",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1380,
                        "src": "9798:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC721_$1380_$",
                          "typeString": "type(contract ERC721)"
                        }
                      },
                      "id": 1113,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "9805:7:0",
                      "memberName": "ownerOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 660,
                      "src": "9798:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                        "typeString": "function (uint256) view returns (address)"
                      }
                    },
                    "id": 1115,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9798:23:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9782:39:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1118,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1111,
                        "src": "9853:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 1121,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9868:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 1120,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9860:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1119,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "9860:7:0",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1122,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9860:10:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1123,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1107,
                        "src": "9872:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1117,
                      "name": "_beforeTokenTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1368,
                      "src": "9832:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 1124,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9832:48:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1125,
                  "nodeType": "ExpressionStatement",
                  "src": "9832:48:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 1129,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9935:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 1128,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9927:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1127,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "9927:7:0",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1130,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9927:10:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1131,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1107,
                        "src": "9939:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1126,
                      "name": "_approve",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1263,
                      "src": "9918:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 1132,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9918:29:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1133,
                  "nodeType": "ExpressionStatement",
                  "src": "9918:29:0"
                },
                {
                  "expression": {
                    "id": 1138,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1134,
                        "name": "_balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 550,
                        "src": "9958:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 1136,
                      "indexExpression": {
                        "id": 1135,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1111,
                        "src": "9968:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "9958:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 1137,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "9978:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "9958:21:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1139,
                  "nodeType": "ExpressionStatement",
                  "src": "9958:21:0"
                },
                {
                  "expression": {
                    "id": 1143,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "delete",
                    "prefix": true,
                    "src": "9989:23:0",
                    "subExpression": {
                      "baseExpression": {
                        "id": 1140,
                        "name": "_owners",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 546,
                        "src": "9996:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                          "typeString": "mapping(uint256 => address)"
                        }
                      },
                      "id": 1142,
                      "indexExpression": {
                        "id": 1141,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1107,
                        "src": "10004:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "9996:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1144,
                  "nodeType": "ExpressionStatement",
                  "src": "9989:23:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 1146,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1111,
                        "src": "10037:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 1149,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "10052:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 1148,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "10044:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1147,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "10044:7:0",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1150,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10044:10:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1151,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1107,
                        "src": "10056:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1145,
                      "name": "Transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1395,
                      "src": "10028:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 1152,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10028:36:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1153,
                  "nodeType": "EmitStatement",
                  "src": "10023:41:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1155,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1111,
                        "src": "10095:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 1158,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "10110:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 1157,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "10102:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1156,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "10102:7:0",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1159,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10102:10:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1160,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1107,
                        "src": "10114:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1154,
                      "name": "_afterTokenTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1379,
                      "src": "10075:19:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 1161,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10075:47:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1162,
                  "nodeType": "ExpressionStatement",
                  "src": "10075:47:0"
                }
              ]
            },
            "documentation": {
              "id": 1105,
              "nodeType": "StructuredDocumentation",
              "src": "9512:206:0",
              "text": " @dev Destroys `tokenId`.\n The approval is cleared when the token is burned.\n Requirements:\n - `tokenId` must exist.\n Emits a {Transfer} event."
            },
            "id": 1164,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_burn",
            "nameLocation": "9732:5:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1108,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1107,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "9746:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1164,
                  "src": "9738:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1106,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9738:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9737:17:0"
            },
            "returnParameters": {
              "id": 1109,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9772:0:0"
            },
            "scope": 1380,
            "src": "9723:406:0",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1238,
              "nodeType": "Block",
              "src": "10562:496:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1180,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 1177,
                              "name": "tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1171,
                              "src": "10595:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 1175,
                              "name": "ERC721",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1380,
                              "src": "10580:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_ERC721_$1380_$",
                                "typeString": "type(contract ERC721)"
                              }
                            },
                            "id": 1176,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "10587:7:0",
                            "memberName": "ownerOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 660,
                            "src": "10580:14:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                              "typeString": "function (uint256) view returns (address)"
                            }
                          },
                          "id": 1178,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10580:23:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 1179,
                          "name": "from",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1167,
                          "src": "10607:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "10580:31:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a207472616e736665722066726f6d20696e636f7272656374206f776e6572",
                        "id": 1181,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10613:39:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48",
                          "typeString": "literal_string \"ERC721: transfer from incorrect owner\""
                        },
                        "value": "ERC721: transfer from incorrect owner"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48",
                          "typeString": "literal_string \"ERC721: transfer from incorrect owner\""
                        }
                      ],
                      "id": 1174,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "10572:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1182,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10572:81:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1183,
                  "nodeType": "ExpressionStatement",
                  "src": "10572:81:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1190,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1185,
                          "name": "to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1169,
                          "src": "10671:2:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 1188,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "10685:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 1187,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "10677:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 1186,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "10677:7:0",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1189,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10677:10:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "10671:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a207472616e7366657220746f20746865207a65726f2061646472657373",
                        "id": 1191,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10689:38:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4",
                          "typeString": "literal_string \"ERC721: transfer to the zero address\""
                        },
                        "value": "ERC721: transfer to the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4",
                          "typeString": "literal_string \"ERC721: transfer to the zero address\""
                        }
                      ],
                      "id": 1184,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "10663:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1192,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10663:65:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1193,
                  "nodeType": "ExpressionStatement",
                  "src": "10663:65:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1195,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1167,
                        "src": "10760:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1196,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1169,
                        "src": "10766:2:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1197,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1171,
                        "src": "10770:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1194,
                      "name": "_beforeTokenTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1368,
                      "src": "10739:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 1198,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10739:39:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1199,
                  "nodeType": "ExpressionStatement",
                  "src": "10739:39:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 1203,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "10857:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 1202,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "10849:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1201,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "10849:7:0",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1204,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10849:10:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1205,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1171,
                        "src": "10861:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1200,
                      "name": "_approve",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1263,
                      "src": "10840:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 1206,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10840:29:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1207,
                  "nodeType": "ExpressionStatement",
                  "src": "10840:29:0"
                },
                {
                  "expression": {
                    "id": 1212,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1208,
                        "name": "_balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 550,
                        "src": "10880:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 1210,
                      "indexExpression": {
                        "id": 1209,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1167,
                        "src": "10890:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "10880:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 1211,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "10899:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "10880:20:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1213,
                  "nodeType": "ExpressionStatement",
                  "src": "10880:20:0"
                },
                {
                  "expression": {
                    "id": 1218,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1214,
                        "name": "_balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 550,
                        "src": "10910:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 1216,
                      "indexExpression": {
                        "id": 1215,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1169,
                        "src": "10920:2:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "10910:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 1217,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "10927:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "10910:18:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1219,
                  "nodeType": "ExpressionStatement",
                  "src": "10910:18:0"
                },
                {
                  "expression": {
                    "id": 1224,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1220,
                        "name": "_owners",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 546,
                        "src": "10938:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                          "typeString": "mapping(uint256 => address)"
                        }
                      },
                      "id": 1222,
                      "indexExpression": {
                        "id": 1221,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1171,
                        "src": "10946:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "10938:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1223,
                      "name": "to",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1169,
                      "src": "10957:2:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "10938:21:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1225,
                  "nodeType": "ExpressionStatement",
                  "src": "10938:21:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 1227,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1167,
                        "src": "10984:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1228,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1169,
                        "src": "10990:2:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1229,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1171,
                        "src": "10994:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1226,
                      "name": "Transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1395,
                      "src": "10975:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 1230,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10975:27:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1231,
                  "nodeType": "EmitStatement",
                  "src": "10970:32:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1233,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1167,
                        "src": "11033:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1234,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1169,
                        "src": "11039:2:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1235,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1171,
                        "src": "11043:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1232,
                      "name": "_afterTokenTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1379,
                      "src": "11013:19:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 1236,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11013:38:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1237,
                  "nodeType": "ExpressionStatement",
                  "src": "11013:38:0"
                }
              ]
            },
            "documentation": {
              "id": 1165,
              "nodeType": "StructuredDocumentation",
              "src": "10135:313:0",
              "text": " @dev Transfers `tokenId` from `from` to `to`.\n  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n Requirements:\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n Emits a {Transfer} event."
            },
            "id": 1239,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_transfer",
            "nameLocation": "10462:9:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1172,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1167,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "10489:4:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1239,
                  "src": "10481:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1166,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10481:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1169,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "10511:2:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1239,
                  "src": "10503:10:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1168,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10503:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1171,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "10531:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1239,
                  "src": "10523:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1170,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10523:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10471:73:0"
            },
            "returnParameters": {
              "id": 1173,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10562:0:0"
            },
            "scope": 1380,
            "src": "10453:605:0",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1262,
              "nodeType": "Block",
              "src": "11233:107:0",
              "statements": [
                {
                  "expression": {
                    "id": 1251,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1247,
                        "name": "_tokenApprovals",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 554,
                        "src": "11243:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                          "typeString": "mapping(uint256 => address)"
                        }
                      },
                      "id": 1249,
                      "indexExpression": {
                        "id": 1248,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1244,
                        "src": "11259:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "11243:24:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1250,
                      "name": "to",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1242,
                      "src": "11270:2:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "11243:29:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1252,
                  "nodeType": "ExpressionStatement",
                  "src": "11243:29:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 1256,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1244,
                            "src": "11311:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 1254,
                            "name": "ERC721",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1380,
                            "src": "11296:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_ERC721_$1380_$",
                              "typeString": "type(contract ERC721)"
                            }
                          },
                          "id": 1255,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "11303:7:0",
                          "memberName": "ownerOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 660,
                          "src": "11296:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                            "typeString": "function (uint256) view returns (address)"
                          }
                        },
                        "id": 1257,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11296:23:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1258,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1242,
                        "src": "11321:2:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1259,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1244,
                        "src": "11325:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1253,
                      "name": "Approval",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1404,
                      "src": "11287:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 1260,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11287:46:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1261,
                  "nodeType": "EmitStatement",
                  "src": "11282:51:0"
                }
              ]
            },
            "documentation": {
              "id": 1240,
              "nodeType": "StructuredDocumentation",
              "src": "11064:100:0",
              "text": " @dev Approve `to` to operate on `tokenId`\n Emits a {Approval} event."
            },
            "id": 1263,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_approve",
            "nameLocation": "11178:8:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1245,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1242,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "11195:2:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1263,
                  "src": "11187:10:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1241,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11187:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1244,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "11207:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1263,
                  "src": "11199:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1243,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11199:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11186:29:0"
            },
            "returnParameters": {
              "id": 1246,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11233:0:0"
            },
            "scope": 1380,
            "src": "11169:171:0",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1294,
              "nodeType": "Block",
              "src": "11598:184:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1276,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1274,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1266,
                          "src": "11616:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "id": 1275,
                          "name": "operator",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1268,
                          "src": "11625:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "11616:17:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a20617070726f766520746f2063616c6c6572",
                        "id": 1277,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11635:27:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05",
                          "typeString": "literal_string \"ERC721: approve to caller\""
                        },
                        "value": "ERC721: approve to caller"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05",
                          "typeString": "literal_string \"ERC721: approve to caller\""
                        }
                      ],
                      "id": 1273,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "11608:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1278,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11608:55:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1279,
                  "nodeType": "ExpressionStatement",
                  "src": "11608:55:0"
                },
                {
                  "expression": {
                    "id": 1286,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 1280,
                          "name": "_operatorApprovals",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 560,
                          "src": "11673:18:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
                            "typeString": "mapping(address => mapping(address => bool))"
                          }
                        },
                        "id": 1283,
                        "indexExpression": {
                          "id": 1281,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1266,
                          "src": "11692:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "11673:25:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 1284,
                      "indexExpression": {
                        "id": 1282,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1268,
                        "src": "11699:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "11673:35:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1285,
                      "name": "approved",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1270,
                      "src": "11711:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "11673:46:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1287,
                  "nodeType": "ExpressionStatement",
                  "src": "11673:46:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 1289,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1266,
                        "src": "11749:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1290,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1268,
                        "src": "11756:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1291,
                        "name": "approved",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1270,
                        "src": "11766:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1288,
                      "name": "ApprovalForAll",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1413,
                      "src": "11734:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
                        "typeString": "function (address,address,bool)"
                      }
                    },
                    "id": 1292,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11734:41:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1293,
                  "nodeType": "EmitStatement",
                  "src": "11729:46:0"
                }
              ]
            },
            "documentation": {
              "id": 1264,
              "nodeType": "StructuredDocumentation",
              "src": "11346:124:0",
              "text": " @dev Approve `operator` to operate on all of `owner` tokens\n Emits a {ApprovalForAll} event."
            },
            "id": 1295,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_setApprovalForAll",
            "nameLocation": "11484:18:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1271,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1266,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "11520:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1295,
                  "src": "11512:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1265,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11512:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1268,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "11543:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1295,
                  "src": "11535:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1267,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11535:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1270,
                  "mutability": "mutable",
                  "name": "approved",
                  "nameLocation": "11566:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1295,
                  "src": "11561:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1269,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "11561:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11502:78:0"
            },
            "returnParameters": {
              "id": 1272,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11598:0:0"
            },
            "scope": 1380,
            "src": "11475:307:0",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1356,
              "nodeType": "Block",
              "src": "12491:622:0",
              "statements": [
                {
                  "condition": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 1309,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1300,
                        "src": "12505:2:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 1310,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "12508:10:0",
                      "memberName": "isContract",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1559,
                      "src": "12505:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$attached_to$_t_address_$",
                        "typeString": "function (address) view returns (bool)"
                      }
                    },
                    "id": 1311,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12505:15:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 1354,
                    "nodeType": "Block",
                    "src": "13071:36:0",
                    "statements": [
                      {
                        "expression": {
                          "hexValue": "74727565",
                          "id": 1352,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "13092:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "functionReturnParameters": 1308,
                        "id": 1353,
                        "nodeType": "Return",
                        "src": "13085:11:0"
                      }
                    ]
                  },
                  "id": 1355,
                  "nodeType": "IfStatement",
                  "src": "12501:606:0",
                  "trueBody": {
                    "id": 1351,
                    "nodeType": "Block",
                    "src": "12522:543:0",
                    "statements": [
                      {
                        "clauses": [
                          {
                            "block": {
                              "id": 1331,
                              "nodeType": "Block",
                              "src": "12637:91:0",
                              "statements": [
                                {
                                  "expression": {
                                    "commonType": {
                                      "typeIdentifier": "t_bytes4",
                                      "typeString": "bytes4"
                                    },
                                    "id": 1329,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "id": 1325,
                                      "name": "retval",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1323,
                                      "src": "12662:6:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes4",
                                        "typeString": "bytes4"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "==",
                                    "rightExpression": {
                                      "expression": {
                                        "expression": {
                                          "id": 1326,
                                          "name": "IERC721Receiver",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1514,
                                          "src": "12672:15:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_type$_t_contract$_IERC721Receiver_$1514_$",
                                            "typeString": "type(contract IERC721Receiver)"
                                          }
                                        },
                                        "id": 1327,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "memberLocation": "12688:16:0",
                                        "memberName": "onERC721Received",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 1513,
                                        "src": "12672:32:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$",
                                          "typeString": "function IERC721Receiver.onERC721Received(address,address,uint256,bytes calldata) returns (bytes4)"
                                        }
                                      },
                                      "id": 1328,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "memberLocation": "12705:8:0",
                                      "memberName": "selector",
                                      "nodeType": "MemberAccess",
                                      "src": "12672:41:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes4",
                                        "typeString": "bytes4"
                                      }
                                    },
                                    "src": "12662:51:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "functionReturnParameters": 1308,
                                  "id": 1330,
                                  "nodeType": "Return",
                                  "src": "12655:58:0"
                                }
                              ]
                            },
                            "errorName": "",
                            "id": 1332,
                            "nodeType": "TryCatchClause",
                            "parameters": {
                              "id": 1324,
                              "nodeType": "ParameterList",
                              "parameters": [
                                {
                                  "constant": false,
                                  "id": 1323,
                                  "mutability": "mutable",
                                  "name": "retval",
                                  "nameLocation": "12629:6:0",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 1332,
                                  "src": "12622:13:0",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes4",
                                    "typeString": "bytes4"
                                  },
                                  "typeName": {
                                    "id": 1322,
                                    "name": "bytes4",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "12622:6:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes4",
                                      "typeString": "bytes4"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "src": "12621:15:0"
                            },
                            "src": "12613:115:0"
                          },
                          {
                            "block": {
                              "id": 1348,
                              "nodeType": "Block",
                              "src": "12757:298:0",
                              "statements": [
                                {
                                  "condition": {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 1339,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "expression": {
                                        "id": 1336,
                                        "name": "reason",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1334,
                                        "src": "12779:6:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bytes_memory_ptr",
                                          "typeString": "bytes memory"
                                        }
                                      },
                                      "id": 1337,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberLocation": "12786:6:0",
                                      "memberName": "length",
                                      "nodeType": "MemberAccess",
                                      "src": "12779:13:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "==",
                                    "rightExpression": {
                                      "hexValue": "30",
                                      "id": 1338,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "12796:1:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      },
                                      "value": "0"
                                    },
                                    "src": "12779:18:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "falseBody": {
                                    "id": 1346,
                                    "nodeType": "Block",
                                    "src": "12906:135:0",
                                    "statements": [
                                      {
                                        "AST": {
                                          "nativeSrc": "12937:86:0",
                                          "nodeType": "YulBlock",
                                          "src": "12937:86:0",
                                          "statements": [
                                            {
                                              "expression": {
                                                "arguments": [
                                                  {
                                                    "arguments": [
                                                      {
                                                        "kind": "number",
                                                        "nativeSrc": "12974:2:0",
                                                        "nodeType": "YulLiteral",
                                                        "src": "12974:2:0",
                                                        "type": "",
                                                        "value": "32"
                                                      },
                                                      {
                                                        "name": "reason",
                                                        "nativeSrc": "12978:6:0",
                                                        "nodeType": "YulIdentifier",
                                                        "src": "12978:6:0"
                                                      }
                                                    ],
                                                    "functionName": {
                                                      "name": "add",
                                                      "nativeSrc": "12970:3:0",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "12970:3:0"
                                                    },
                                                    "nativeSrc": "12970:15:0",
                                                    "nodeType": "YulFunctionCall",
                                                    "src": "12970:15:0"
                                                  },
                                                  {
                                                    "arguments": [
                                                      {
                                                        "name": "reason",
                                                        "nativeSrc": "12993:6:0",
                                                        "nodeType": "YulIdentifier",
                                                        "src": "12993:6:0"
                                                      }
                                                    ],
                                                    "functionName": {
                                                      "name": "mload",
                                                      "nativeSrc": "12987:5:0",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "12987:5:0"
                                                    },
                                                    "nativeSrc": "12987:13:0",
                                                    "nodeType": "YulFunctionCall",
                                                    "src": "12987:13:0"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "revert",
                                                  "nativeSrc": "12963:6:0",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "12963:6:0"
                                                },
                                                "nativeSrc": "12963:38:0",
                                                "nodeType": "YulFunctionCall",
                                                "src": "12963:38:0"
                                              },
                                              "nativeSrc": "12963:38:0",
                                              "nodeType": "YulExpressionStatement",
                                              "src": "12963:38:0"
                                            }
                                          ]
                                        },
                                        "evmVersion": "istanbul",
                                        "externalReferences": [
                                          {
                                            "declaration": 1334,
                                            "isOffset": false,
                                            "isSlot": false,
                                            "src": "12978:6:0",
                                            "valueSize": 1
                                          },
                                          {
                                            "declaration": 1334,
                                            "isOffset": false,
                                            "isSlot": false,
                                            "src": "12993:6:0",
                                            "valueSize": 1
                                          }
                                        ],
                                        "id": 1345,
                                        "nodeType": "InlineAssembly",
                                        "src": "12928:95:0"
                                      }
                                    ]
                                  },
                                  "id": 1347,
                                  "nodeType": "IfStatement",
                                  "src": "12775:266:0",
                                  "trueBody": {
                                    "id": 1344,
                                    "nodeType": "Block",
                                    "src": "12799:101:0",
                                    "statements": [
                                      {
                                        "expression": {
                                          "arguments": [
                                            {
                                              "hexValue": "4552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e746572",
                                              "id": 1341,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "kind": "string",
                                              "lValueRequested": false,
                                              "nodeType": "Literal",
                                              "src": "12828:52:0",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
                                                "typeString": "literal_string \"ERC721: transfer to non ERC721Receiver implementer\""
                                              },
                                              "value": "ERC721: transfer to non ERC721Receiver implementer"
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
                                                "typeString": "literal_string \"ERC721: transfer to non ERC721Receiver implementer\""
                                              }
                                            ],
                                            "id": 1340,
                                            "name": "revert",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [
                                              -19,
                                              -19
                                            ],
                                            "referencedDeclaration": -19,
                                            "src": "12821:6:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                                              "typeString": "function (string memory) pure"
                                            }
                                          },
                                          "id": 1342,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "kind": "functionCall",
                                          "lValueRequested": false,
                                          "nameLocations": [],
                                          "names": [],
                                          "nodeType": "FunctionCall",
                                          "src": "12821:60:0",
                                          "tryCall": false,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                          }
                                        },
                                        "id": 1343,
                                        "nodeType": "ExpressionStatement",
                                        "src": "12821:60:0"
                                      }
                                    ]
                                  }
                                }
                              ]
                            },
                            "errorName": "",
                            "id": 1349,
                            "nodeType": "TryCatchClause",
                            "parameters": {
                              "id": 1335,
                              "nodeType": "ParameterList",
                              "parameters": [
                                {
                                  "constant": false,
                                  "id": 1334,
                                  "mutability": "mutable",
                                  "name": "reason",
                                  "nameLocation": "12749:6:0",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 1349,
                                  "src": "12736:19:0",
                                  "stateVariable": false,
                                  "storageLocation": "memory",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes"
                                  },
                                  "typeName": {
                                    "id": 1333,
                                    "name": "bytes",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "12736:5:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes_storage_ptr",
                                      "typeString": "bytes"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "src": "12735:21:0"
                            },
                            "src": "12729:326:0"
                          }
                        ],
                        "externalCall": {
                          "arguments": [
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 1316,
                                "name": "_msgSender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1848,
                                "src": "12577:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                  "typeString": "function () view returns (address)"
                                }
                              },
                              "id": 1317,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "12577:12:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1318,
                              "name": "from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1298,
                              "src": "12591:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1319,
                              "name": "tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1302,
                              "src": "12597:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 1320,
                              "name": "_data",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1304,
                              "src": "12606:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 1313,
                                  "name": "to",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1300,
                                  "src": "12556:2:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 1312,
                                "name": "IERC721Receiver",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1514,
                                "src": "12540:15:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC721Receiver_$1514_$",
                                  "typeString": "type(contract IERC721Receiver)"
                                }
                              },
                              "id": 1314,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "12540:19:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC721Receiver_$1514",
                                "typeString": "contract IERC721Receiver"
                              }
                            },
                            "id": 1315,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "12560:16:0",
                            "memberName": "onERC721Received",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1513,
                            "src": "12540:36:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
                              "typeString": "function (address,address,uint256,bytes memory) external returns (bytes4)"
                            }
                          },
                          "id": 1321,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12540:72:0",
                          "tryCall": true,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "id": 1350,
                        "nodeType": "TryStatement",
                        "src": "12536:519:0"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 1296,
              "nodeType": "StructuredDocumentation",
              "src": "11788:542:0",
              "text": " @dev Internal function to invoke {IERC721Receiver-onERC721Received} on a target address.\n The call is not executed if the target address is not a contract.\n @param from address representing the previous owner of the given token ID\n @param to target address that will receive the tokens\n @param tokenId uint256 ID of the token to be transferred\n @param _data bytes optional data to send along with the call\n @return bool whether the call correctly returned the expected magic value"
            },
            "id": 1357,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_checkOnERC721Received",
            "nameLocation": "12344:22:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1305,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1298,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "12384:4:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1357,
                  "src": "12376:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1297,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12376:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1300,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "12406:2:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1357,
                  "src": "12398:10:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1299,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12398:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1302,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "12426:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1357,
                  "src": "12418:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1301,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12418:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1304,
                  "mutability": "mutable",
                  "name": "_data",
                  "nameLocation": "12456:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1357,
                  "src": "12443:18:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 1303,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "12443:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12366:101:0"
            },
            "returnParameters": {
              "id": 1308,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1307,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1357,
                  "src": "12485:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1306,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "12485:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12484:6:0"
            },
            "scope": 1380,
            "src": "12335:778:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 1367,
              "nodeType": "Block",
              "src": "13789:2:0",
              "statements": []
            },
            "documentation": {
              "id": 1358,
              "nodeType": "StructuredDocumentation",
              "src": "13119:545:0",
              "text": " @dev Hook that is called before any token transfer. This includes minting\n and burning.\n Calling conditions:\n - When `from` and `to` are both non-zero, ``from``'s `tokenId` will be\n transferred to `to`.\n - When `from` is zero, `tokenId` will be minted for `to`.\n - When `to` is zero, ``from``'s `tokenId` will be burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
            },
            "id": 1368,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_beforeTokenTransfer",
            "nameLocation": "13678:20:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1365,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1360,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "13716:4:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1368,
                  "src": "13708:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1359,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "13708:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1362,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "13738:2:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1368,
                  "src": "13730:10:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1361,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "13730:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1364,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "13758:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1368,
                  "src": "13750:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1363,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "13750:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13698:73:0"
            },
            "returnParameters": {
              "id": 1366,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13789:0:0"
            },
            "scope": 1380,
            "src": "13669:122:0",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1378,
              "nodeType": "Block",
              "src": "14282:2:0",
              "statements": []
            },
            "documentation": {
              "id": 1369,
              "nodeType": "StructuredDocumentation",
              "src": "13797:361:0",
              "text": " @dev Hook that is called after any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
            },
            "id": 1379,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_afterTokenTransfer",
            "nameLocation": "14172:19:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1376,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1371,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "14209:4:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1379,
                  "src": "14201:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1370,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "14201:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1373,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "14231:2:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1379,
                  "src": "14223:10:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1372,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "14223:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1375,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "14251:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1379,
                  "src": "14243:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1374,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "14243:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14191:73:0"
            },
            "returnParameters": {
              "id": 1377,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "14282:0:0"
            },
            "scope": 1380,
            "src": "14163:121:0",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          }
        ],
        "scope": 1381,
        "src": "628:13658:0",
        "usedErrors": [],
        "usedEvents": [
          1395,
          1404,
          1413
        ]
      }
    ],
    "src": "107:14180:0"
  },
  "bytecode": "",
  "bytecodeSha1": "7f015343d63502740eeba384923ed5abdc68d204",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.23+commit.f704f362"
  },
  "contractName": "ERC721",
  "coverageMap": {
    "branches": {
      "0": {
        "ERC721._checkOnERC721Received": {
          "61": [
            12779,
            12797,
            false
          ]
        },
        "ERC721._safeTransfer": {
          "60": [
            6747,
            6795,
            true
          ]
        },
        "ERC721._setApprovalForAll": {
          "59": [
            11616,
            11633,
            true
          ]
        },
        "ERC721._transfer": {
          "57": [
            10580,
            10611,
            true
          ],
          "58": [
            10671,
            10687,
            true
          ]
        },
        "ERC721.approve": {
          "50": [
            3675,
            3686,
            true
          ],
          "51": [
            3756,
            3777,
            true
          ],
          "52": [
            3781,
            3818,
            true
          ]
        },
        "ERC721.balanceOf": {
          "54": [
            2028,
            2047,
            true
          ]
        },
        "ERC721.safeTransferFrom": {
          "55": [
            5537,
            5578,
            true
          ]
        },
        "ERC721.tokenURI": {
          "56": [
            3054,
            3079,
            true
          ]
        },
        "ERC721.transferFrom": {
          "53": [
            4916,
            4957,
            true
          ]
        }
      },
      "1": {},
      "10": {},
      "2": {},
      "4": {},
      "5": {},
      "6": {},
      "8": {
        "Strings.toString": {
          "62": [
            601,
            611,
            false
          ]
        }
      },
      "9": {}
    },
    "statements": {
      "0": {
        "ERC721._approve": {
          "24": [
            11243,
            11272
          ],
          "25": [
            11282,
            11333
          ]
        },
        "ERC721._baseURI": {
          "21": [
            3465,
            3474
          ]
        },
        "ERC721._checkOnERC721Received": {
          "47": [
            12821,
            12881
          ],
          "48": [
            12655,
            12713
          ],
          "49": [
            13085,
            13096
          ]
        },
        "ERC721._exists": {
          "3": [
            7241,
            7278
          ]
        },
        "ERC721._isApprovedOrOwner": {
          "26": [
            7552,
            7625
          ],
          "27": [
            7684,
            7780
          ]
        },
        "ERC721._safeTransfer": {
          "38": [
            6701,
            6729
          ],
          "39": [
            6739,
            6850
          ]
        },
        "ERC721._setApprovalForAll": {
          "35": [
            11608,
            11663
          ],
          "36": [
            11673,
            11719
          ],
          "37": [
            11729,
            11775
          ]
        },
        "ERC721._transfer": {
          "28": [
            10572,
            10653
          ],
          "29": [
            10663,
            10728
          ],
          "30": [
            10840,
            10869
          ],
          "31": [
            10880,
            10900
          ],
          "32": [
            10910,
            10928
          ],
          "33": [
            10938,
            10959
          ],
          "34": [
            10970,
            11002
          ]
        },
        "ERC721.approve": {
          "6": [
            3667,
            3724
          ],
          "8": [
            3735,
            3900
          ],
          "9": [
            3911,
            3932
          ]
        },
        "ERC721.balanceOf": {
          "14": [
            2020,
            2094
          ],
          "15": [
            2104,
            2127
          ]
        },
        "ERC721.getApproved": {
          "4": [
            4095,
            4168
          ],
          "5": [
            4179,
            4210
          ]
        },
        "ERC721.isApprovedForAll": {
          "23": [
            4616,
            4658
          ]
        },
        "ERC721.name": {
          "2": [
            2567,
            2579
          ]
        },
        "ERC721.ownerOf": {
          "13": [
            2324,
            2397
          ]
        },
        "ERC721.safeTransferFrom": {
          "12": [
            5256,
            5295
          ],
          "18": [
            5529,
            5632
          ],
          "19": [
            5642,
            5681
          ]
        },
        "ERC721.setApprovalForAll": {
          "17": [
            4378,
            4430
          ]
        },
        "ERC721.supportsInterface": {
          "0": [
            1688,
            1863
          ]
        },
        "ERC721.symbol": {
          "16": [
            2731,
            2745
          ]
        },
        "ERC721.tokenURI": {
          "20": [
            2916,
            2992
          ],
          "22": [
            3047,
            3140
          ]
        },
        "ERC721.transferFrom": {
          "10": [
            4908,
            5011
          ],
          "11": [
            5022,
            5050
          ]
        }
      },
      "1": {},
      "10": {},
      "2": {},
      "4": {},
      "5": {
        "Address.isContract": {
          "46": [
            1458,
            1488
          ]
        }
      },
      "6": {
        "Context._msgSender": {
          "7": [
            712,
            729
          ]
        }
      },
      "8": {
        "Strings.toString": {
          "40": [
            627,
            637
          ],
          "41": [
            743,
            751
          ],
          "42": [
            765,
            775
          ],
          "43": [
            877,
            888
          ],
          "44": [
            902,
            958
          ],
          "45": [
            972,
            983
          ]
        }
      },
      "9": {
        "ERC165.supportsInterface": {
          "1": [
            930,
            977
          ]
        }
      }
    }
  },
  "dependencies": [
    "OpenZeppelin/openzeppelin-contracts@4.6.0/Address",
    "OpenZeppelin/openzeppelin-contracts@4.6.0/Context",
    "OpenZeppelin/openzeppelin-contracts@4.6.0/ERC165",
    "OpenZeppelin/openzeppelin-contracts@4.6.0/IERC165",
    "OpenZeppelin/openzeppelin-contracts@4.6.0/IERC721",
    "OpenZeppelin/openzeppelin-contracts@4.6.0/IERC721Metadata",
    "OpenZeppelin/openzeppelin-contracts@4.6.0/IERC721Receiver",
    "OpenZeppelin/openzeppelin-contracts@4.6.0/Strings"
  ],
  "deployedBytecode": "608060405234801561001057600080fd5b50600436106100cf5760003560e01c80636352211e1161008c578063a22cb46511610066578063a22cb465146101b3578063b88d4fde146101c6578063c87b56dd146101d9578063e985e9c5146101ec57600080fd5b80636352211e1461017757806370a082311461018a57806395d89b41146101ab57600080fd5b806301ffc9a7146100d457806306fdde03146100fc578063081812fc14610111578063095ea7b31461013c57806323b872dd1461015157806342842e0e14610164575b600080fd5b6100e76100e2366004610d45565b6101ff565b60405190151581526020015b60405180910390f35b610104610251565b6040516100f39190610db2565b61012461011f366004610dc5565b6102e3565b6040516001600160a01b0390911681526020016100f3565b61014f61014a366004610dfa565b61037d565b005b61014f61015f366004610e24565b610492565b61014f610172366004610e24565b6104c3565b610124610185366004610dc5565b6104de565b61019d610198366004610e60565b610555565b6040519081526020016100f3565b6101046105dc565b61014f6101c1366004610e7b565b6105eb565b61014f6101d4366004610ecd565b6105fa565b6101046101e7366004610dc5565b610632565b6100e76101fa366004610fa9565b61071a565b60006001600160e01b031982166380ac58cd60e01b148061023057506001600160e01b03198216635b5e139f60e01b145b8061024b57506301ffc9a760e01b6001600160e01b03198316145b92915050565b60606000805461026090610fdc565b80601f016020809104026020016040519081016040528092919081815260200182805461028c90610fdc565b80156102d95780601f106102ae576101008083540402835291602001916102d9565b820191906000526020600020905b8154815290600101906020018083116102bc57829003601f168201915b5050505050905090565b6000818152600260205260408120546001600160a01b03166103615760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084015b60405180910390fd5b506000908152600460205260409020546001600160a01b031690565b6000610388826104de565b9050806001600160a01b0316836001600160a01b0316036103f55760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b6064820152608401610358565b336001600160a01b03821614806104115750610411813361071a565b6104835760405162461bcd60e51b815260206004820152603860248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760448201527f6e6572206e6f7220617070726f76656420666f7220616c6c00000000000000006064820152608401610358565b61048d8383610748565b505050565b61049c33826107b6565b6104b85760405162461bcd60e51b815260040161035890611016565b61048d83838361088d565b61048d838383604051806020016040528060008152506105fa565b6000818152600260205260408120546001600160a01b03168061024b5760405162461bcd60e51b815260206004820152602960248201527f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460448201526832b73a103a37b5b2b760b91b6064820152608401610358565b60006001600160a01b0382166105c05760405162461bcd60e51b815260206004820152602a60248201527f4552433732313a2062616c616e636520717565727920666f7220746865207a65604482015269726f206164647265737360b01b6064820152608401610358565b506001600160a01b031660009081526003602052604090205490565b60606001805461026090610fdc565b6105f6338383610a29565b5050565b61060433836107b6565b6106205760405162461bcd60e51b815260040161035890611016565b61062c84848484610af7565b50505050565b6000818152600260205260409020546060906001600160a01b03166106b15760405162461bcd60e51b815260206004820152602f60248201527f4552433732314d657461646174613a2055524920717565727920666f72206e6f60448201526e3732bc34b9ba32b73a103a37b5b2b760891b6064820152608401610358565b60006106c860408051602081019091526000815290565b905060008151116106e85760405180602001604052806000815250610713565b806106f284610b2a565b604051602001610703929190611067565b6040516020818303038152906040525b9392505050565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b600081815260046020526040902080546001600160a01b0319166001600160a01b038416908117909155819061077d826104de565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6000818152600260205260408120546001600160a01b031661082f5760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b6064820152608401610358565b600061083a836104de565b9050806001600160a01b0316846001600160a01b031614806108615750610861818561071a565b806108855750836001600160a01b031661087a846102e3565b6001600160a01b0316145b949350505050565b826001600160a01b03166108a0826104de565b6001600160a01b0316146109045760405162461bcd60e51b815260206004820152602560248201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060448201526437bbb732b960d91b6064820152608401610358565b6001600160a01b0382166109665760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b6064820152608401610358565b610971600082610748565b6001600160a01b038316600090815260036020526040812080546001929061099a9084906110ac565b90915550506001600160a01b03821660009081526003602052604081208054600192906109c89084906110bf565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b816001600160a01b0316836001600160a01b031603610a8a5760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c6572000000000000006044820152606401610358565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b610b0284848461088d565b610b0e84848484610c2b565b61062c5760405162461bcd60e51b8152600401610358906110d2565b606081600003610b515750506040805180820190915260018152600360fc1b602082015290565b8160005b8115610b7b5780610b6581611124565b9150610b749050600a83611153565b9150610b55565b60008167ffffffffffffffff811115610b9657610b96610eb7565b6040519080825280601f01601f191660200182016040528015610bc0576020820181803683370190505b5090505b841561088557610bd56001836110ac565b9150610be2600a86611167565b610bed9060306110bf565b60f81b818381518110610c0257610c0261117b565b60200101906001600160f81b031916908160001a905350610c24600a86611153565b9450610bc4565b60006001600160a01b0384163b15610d2157604051630a85bd0160e11b81526001600160a01b0385169063150b7a0290610c6f903390899088908890600401611191565b6020604051808303816000875af1925050508015610caa575060408051601f3d908101601f19168201909252610ca7918101906111ce565b60015b610d07573d808015610cd8576040519150601f19603f3d011682016040523d82523d6000602084013e610cdd565b606091505b508051600003610cff5760405162461bcd60e51b8152600401610358906110d2565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050610885565b506001949350505050565b6001600160e01b031981168114610d4257600080fd5b50565b600060208284031215610d5757600080fd5b813561071381610d2c565b60005b83811015610d7d578181015183820152602001610d65565b50506000910152565b60008151808452610d9e816020860160208601610d62565b601f01601f19169290920160200192915050565b6020815260006107136020830184610d86565b600060208284031215610dd757600080fd5b5035919050565b80356001600160a01b0381168114610df557600080fd5b919050565b60008060408385031215610e0d57600080fd5b610e1683610dde565b946020939093013593505050565b600080600060608486031215610e3957600080fd5b610e4284610dde565b9250610e5060208501610dde565b9150604084013590509250925092565b600060208284031215610e7257600080fd5b61071382610dde565b60008060408385031215610e8e57600080fd5b610e9783610dde565b915060208301358015158114610eac57600080fd5b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b60008060008060808587031215610ee357600080fd5b610eec85610dde565b9350610efa60208601610dde565b925060408501359150606085013567ffffffffffffffff80821115610f1e57600080fd5b818701915087601f830112610f3257600080fd5b813581811115610f4457610f44610eb7565b604051601f8201601f19908116603f01168101908382118183101715610f6c57610f6c610eb7565b816040528281528a6020848701011115610f8557600080fd5b82602086016020830137600060208483010152809550505050505092959194509250565b60008060408385031215610fbc57600080fd5b610fc583610dde565b9150610fd360208401610dde565b90509250929050565b600181811c90821680610ff057607f821691505b60208210810361101057634e487b7160e01b600052602260045260246000fd5b50919050565b60208082526031908201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f6040820152701ddb995c881b9bdc88185c1c1c9bdd9959607a1b606082015260800190565b60008351611079818460208801610d62565b83519083019061108d818360208801610d62565b01949350505050565b634e487b7160e01b600052601160045260246000fd5b8181038181111561024b5761024b611096565b8082018082111561024b5761024b611096565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b60006001820161113657611136611096565b5060010190565b634e487b7160e01b600052601260045260246000fd5b6000826111625761116261113d565b500490565b6000826111765761117661113d565b500690565b634e487b7160e01b600052603260045260246000fd5b6001600160a01b03858116825284166020820152604081018390526080606082018190526000906111c490830184610d86565b9695505050505050565b6000602082840312156111e057600080fd5b815161071381610d2c56fea26469706673582212209e5869852ade61f7f94a2a6e6e161df5332d01d1c81466c0b7c9fc88d1569a8864736f6c63430008170033",
  "deployedSourceMap": "628:13658:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1570:300;;;;;;:::i;:::-;;:::i;:::-;;;565:14:13;;558:22;540:41;;528:2;513:18;1570:300:0;;;;;;;;2488:98;;;:::i;:::-;;;;;;;:::i;4000:217::-;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;1697:32:13;;;1679:51;;1667:2;1652:18;4000:217:0;1533:203:13;3538:401:0;;;;;;:::i;:::-;;:::i;:::-;;4727:330;;;;;;:::i;:::-;;:::i;5123:179::-;;;;;;:::i;:::-;;:::i;2191:235::-;;;;;;:::i;:::-;;:::i;1929:205::-;;;;;;:::i;:::-;;:::i;:::-;;;2848:25:13;;;2836:2;2821:18;1929:205:0;2702:177:13;2650:102:0;;;:::i;4284:153::-;;;;;;:::i;:::-;;:::i;5368:320::-;;;;;;:::i;:::-;;:::i;2818:329::-;;;;;;:::i;:::-;;:::i;4503:162::-;;;;;;:::i;:::-;;:::i;1570:300::-;1672:4;-1:-1:-1;;;;;;1707:40:0;;-1:-1:-1;;;1707:40:0;;:104;;-1:-1:-1;;;;;;;1763:48:0;;-1:-1:-1;;;1763:48:0;1707:104;:156;;;-1:-1:-1;;;;;;;;;;937:40:9;;;1827:36:0;1688:175;1570:300;-1:-1:-1;;1570:300:0:o;2488:98::-;2542:13;2574:5;2567:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2488:98;:::o;4000:217::-;4076:7;7248:16;;;:7;:16;;;;;;-1:-1:-1;;;;;7248:16:0;4095:73;;;;-1:-1:-1;;;4095:73:0;;5363:2:13;4095:73:0;;;5345:21:13;5402:2;5382:18;;;5375:30;5441:34;5421:18;;;5414:62;-1:-1:-1;;;5492:18:13;;;5485:42;5544:19;;4095:73:0;;;;;;;;;-1:-1:-1;4186:24:0;;;;:15;:24;;;;;;-1:-1:-1;;;;;4186:24:0;;4000:217::o;3538:401::-;3618:13;3634:23;3649:7;3634:14;:23::i;:::-;3618:39;;3681:5;-1:-1:-1;;;;;3675:11:0;:2;-1:-1:-1;;;;;3675:11:0;;3667:57;;;;-1:-1:-1;;;3667:57:0;;5776:2:13;3667:57:0;;;5758:21:13;5815:2;5795:18;;;5788:30;5854:34;5834:18;;;5827:62;-1:-1:-1;;;5905:18:13;;;5898:31;5946:19;;3667:57:0;5574:397:13;3667:57:0;719:10:6;-1:-1:-1;;;;;3756:21:0;;;;:62;;-1:-1:-1;3781:37:0;3798:5;719:10:6;4503:162:0;:::i;3781:37::-;3735:165;;;;-1:-1:-1;;;3735:165:0;;6178:2:13;3735:165:0;;;6160:21:13;6217:2;6197:18;;;6190:30;6256:34;6236:18;;;6229:62;6327:26;6307:18;;;6300:54;6371:19;;3735:165:0;5976:420:13;3735:165:0;3911:21;3920:2;3924:7;3911:8;:21::i;:::-;3608:331;3538:401;;:::o;4727:330::-;4916:41;719:10:6;4949:7:0;4916:18;:41::i;:::-;4908:103;;;;-1:-1:-1;;;4908:103:0;;;;;;;:::i;:::-;5022:28;5032:4;5038:2;5042:7;5022:9;:28::i;5123:179::-;5256:39;5273:4;5279:2;5283:7;5256:39;;;;;;;;;;;;:16;:39::i;2191:235::-;2263:7;2298:16;;;:7;:16;;;;;;-1:-1:-1;;;;;2298:16:0;;2324:73;;;;-1:-1:-1;;;2324:73:0;;7021:2:13;2324:73:0;;;7003:21:13;7060:2;7040:18;;;7033:30;7099:34;7079:18;;;7072:62;-1:-1:-1;;;7150:18:13;;;7143:39;7199:19;;2324:73:0;6819:405:13;1929:205:0;2001:7;-1:-1:-1;;;;;2028:19:0;;2020:74;;;;-1:-1:-1;;;2020:74:0;;7431:2:13;2020:74:0;;;7413:21:13;7470:2;7450:18;;;7443:30;7509:34;7489:18;;;7482:62;-1:-1:-1;;;7560:18:13;;;7553:40;7610:19;;2020:74:0;7229:406:13;2020:74:0;-1:-1:-1;;;;;;2111:16:0;;;;;:9;:16;;;;;;;1929:205::o;2650:102::-;2706:13;2738:7;2731:14;;;;;:::i;4284:153::-;4378:52;719:10:6;4411:8:0;4421;4378:18;:52::i;:::-;4284:153;;:::o;5368:320::-;5537:41;719:10:6;5570:7:0;5537:18;:41::i;:::-;5529:103;;;;-1:-1:-1;;;5529:103:0;;;;;;;:::i;:::-;5642:39;5656:4;5662:2;5666:7;5675:5;5642:13;:39::i;:::-;5368:320;;;;:::o;2818:329::-;7225:4;7248:16;;;:7;:16;;;;;;2891:13;;-1:-1:-1;;;;;7248:16:0;2916:76;;;;-1:-1:-1;;;2916:76:0;;7842:2:13;2916:76:0;;;7824:21:13;7881:2;7861:18;;;7854:30;7920:34;7900:18;;;7893:62;-1:-1:-1;;;7971:18:13;;;7964:45;8026:19;;2916:76:0;7640:411:13;2916:76:0;3003:21;3027:10;3465:9;;;;;;;;;-1:-1:-1;3465:9:0;;;3389:92;3027:10;3003:34;;3078:1;3060:7;3054:21;:25;:86;;;;;;;;;;;;;;;;;3106:7;3115:18;:7;:16;:18::i;:::-;3089:45;;;;;;;;;:::i;:::-;;;;;;;;;;;;;3054:86;3047:93;2818:329;-1:-1:-1;;;2818:329:0:o;4503:162::-;-1:-1:-1;;;;;4623:25:0;;;4600:4;4623:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;;;4503:162::o;11169:171::-;11243:24;;;;:15;:24;;;;;:29;;-1:-1:-1;;;;;;11243:29:0;-1:-1:-1;;;;;11243:29:0;;;;;;;;:24;;11296:23;11243:24;11296:14;:23::i;:::-;-1:-1:-1;;;;;11287:46:0;;;;;;;;;;;11169:171;;:::o;7443:344::-;7536:4;7248:16;;;:7;:16;;;;;;-1:-1:-1;;;;;7248:16:0;7552:73;;;;-1:-1:-1;;;7552:73:0;;8759:2:13;7552:73:0;;;8741:21:13;8798:2;8778:18;;;8771:30;8837:34;8817:18;;;8810:62;-1:-1:-1;;;8888:18:13;;;8881:42;8940:19;;7552:73:0;8557:408:13;7552:73:0;7635:13;7651:23;7666:7;7651:14;:23::i;:::-;7635:39;;7703:5;-1:-1:-1;;;;;7692:16:0;:7;-1:-1:-1;;;;;7692:16:0;;:52;;;;7712:32;7729:5;7736:7;7712:16;:32::i;:::-;7692:87;;;;7772:7;-1:-1:-1;;;;;7748:31:0;:20;7760:7;7748:11;:20::i;:::-;-1:-1:-1;;;;;7748:31:0;;7692:87;7684:96;7443:344;-1:-1:-1;;;;7443:344:0:o;10453:605::-;10607:4;-1:-1:-1;;;;;10580:31:0;:23;10595:7;10580:14;:23::i;:::-;-1:-1:-1;;;;;10580:31:0;;10572:81;;;;-1:-1:-1;;;10572:81:0;;9172:2:13;10572:81:0;;;9154:21:13;9211:2;9191:18;;;9184:30;9250:34;9230:18;;;9223:62;-1:-1:-1;;;9301:18:13;;;9294:35;9346:19;;10572:81:0;8970:401:13;10572:81:0;-1:-1:-1;;;;;10671:16:0;;10663:65;;;;-1:-1:-1;;;10663:65:0;;9578:2:13;10663:65:0;;;9560:21:13;9617:2;9597:18;;;9590:30;9656:34;9636:18;;;9629:62;-1:-1:-1;;;9707:18:13;;;9700:34;9751:19;;10663:65:0;9376:400:13;10663:65:0;10840:29;10857:1;10861:7;10840:8;:29::i;:::-;-1:-1:-1;;;;;10880:15:0;;;;;;:9;:15;;;;;:20;;10899:1;;10880:15;:20;;10899:1;;10880:20;:::i;:::-;;;;-1:-1:-1;;;;;;;10910:13:0;;;;;;:9;:13;;;;;:18;;10927:1;;10910:13;:18;;10927:1;;10910:18;:::i;:::-;;;;-1:-1:-1;;10938:16:0;;;;:7;:16;;;;;;:21;;-1:-1:-1;;;;;;10938:21:0;-1:-1:-1;;;;;10938:21:0;;;;;;;;;10975:27;;10938:16;;10975:27;;;;;;;3608:331;3538:401;;:::o;11475:307::-;11625:8;-1:-1:-1;;;;;11616:17:0;:5;-1:-1:-1;;;;;11616:17:0;;11608:55;;;;-1:-1:-1;;;11608:55:0;;10378:2:13;11608:55:0;;;10360:21:13;10417:2;10397:18;;;10390:30;10456:27;10436:18;;;10429:55;10501:18;;11608:55:0;10176:349:13;11608:55:0;-1:-1:-1;;;;;11673:25:0;;;;;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;:46;;-1:-1:-1;;11673:46:0;;;;;;;;;;11734:41;;540::13;;;11734::0;;513:18:13;11734:41:0;;;;;;;11475:307;;;:::o;6550:::-;6701:28;6711:4;6717:2;6721:7;6701:9;:28::i;:::-;6747:48;6770:4;6776:2;6780:7;6789:5;6747:22;:48::i;:::-;6739:111;;;;-1:-1:-1;;;6739:111:0;;;;;;;:::i;328:703:8:-;384:13;601:5;610:1;601:10;597:51;;-1:-1:-1;;627:10:8;;;;;;;;;;;;-1:-1:-1;;;627:10:8;;;;;328:703::o;597:51::-;672:5;657:12;711:75;718:9;;711:75;;743:8;;;;:::i;:::-;;-1:-1:-1;765:10:8;;-1:-1:-1;773:2:8;765:10;;:::i;:::-;;;711:75;;;795:19;827:6;817:17;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;817:17:8;;795:39;;844:150;851:10;;844:150;;877:11;887:1;877:11;;:::i;:::-;;-1:-1:-1;945:10:8;953:2;945:5;:10;:::i;:::-;932:24;;:2;:24;:::i;:::-;919:39;;902:6;909;902:14;;;;;;;;:::i;:::-;;;;:56;-1:-1:-1;;;;;902:56:8;;;;;;;;-1:-1:-1;972:11:8;981:2;972:11;;:::i;:::-;;;844:150;;12335:778:0;12485:4;-1:-1:-1;;;;;12505:13:0;;1465:19:5;:23;12501:606:0;;12540:72;;-1:-1:-1;;;12540:72:0;;-1:-1:-1;;;;;12540:36:0;;;;;:72;;719:10:6;;12591:4:0;;12597:7;;12606:5;;12540:72;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;12540:72:0;;;;;;;;-1:-1:-1;;12540:72:0;;;;;;;;;;;;:::i;:::-;;;12536:519;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12779:6;:13;12796:1;12779:18;12775:266;;12821:60;;-1:-1:-1;;;12821:60:0;;;;;;;:::i;12775:266::-;12993:6;12987:13;12978:6;12974:2;12970:15;12963:38;12536:519;-1:-1:-1;;;;;;12662:51:0;-1:-1:-1;;;12662:51:0;;-1:-1:-1;12655:58:0;;12501:606;-1:-1:-1;13092:4:0;12335:778;;;;;;:::o;14:131:13:-;-1:-1:-1;;;;;;88:32:13;;78:43;;68:71;;135:1;132;125:12;68:71;14:131;:::o;150:245::-;208:6;261:2;249:9;240:7;236:23;232:32;229:52;;;277:1;274;267:12;229:52;316:9;303:23;335:30;359:5;335:30;:::i;592:250::-;677:1;687:113;701:6;698:1;695:13;687:113;;;777:11;;;771:18;758:11;;;751:39;723:2;716:10;687:113;;;-1:-1:-1;;834:1:13;816:16;;809:27;592:250::o;847:271::-;889:3;927:5;921:12;954:6;949:3;942:19;970:76;1039:6;1032:4;1027:3;1023:14;1016:4;1009:5;1005:16;970:76;:::i;:::-;1100:2;1079:15;-1:-1:-1;;1075:29:13;1066:39;;;;1107:4;1062:50;;847:271;-1:-1:-1;;847:271:13:o;1123:220::-;1272:2;1261:9;1254:21;1235:4;1292:45;1333:2;1322:9;1318:18;1310:6;1292:45;:::i;1348:180::-;1407:6;1460:2;1448:9;1439:7;1435:23;1431:32;1428:52;;;1476:1;1473;1466:12;1428:52;-1:-1:-1;1499:23:13;;1348:180;-1:-1:-1;1348:180:13:o;1741:173::-;1809:20;;-1:-1:-1;;;;;1858:31:13;;1848:42;;1838:70;;1904:1;1901;1894:12;1838:70;1741:173;;;:::o;1919:254::-;1987:6;1995;2048:2;2036:9;2027:7;2023:23;2019:32;2016:52;;;2064:1;2061;2054:12;2016:52;2087:29;2106:9;2087:29;:::i;:::-;2077:39;2163:2;2148:18;;;;2135:32;;-1:-1:-1;;;1919:254:13:o;2178:328::-;2255:6;2263;2271;2324:2;2312:9;2303:7;2299:23;2295:32;2292:52;;;2340:1;2337;2330:12;2292:52;2363:29;2382:9;2363:29;:::i;:::-;2353:39;;2411:38;2445:2;2434:9;2430:18;2411:38;:::i;:::-;2401:48;;2496:2;2485:9;2481:18;2468:32;2458:42;;2178:328;;;;;:::o;2511:186::-;2570:6;2623:2;2611:9;2602:7;2598:23;2594:32;2591:52;;;2639:1;2636;2629:12;2591:52;2662:29;2681:9;2662:29;:::i;2884:347::-;2949:6;2957;3010:2;2998:9;2989:7;2985:23;2981:32;2978:52;;;3026:1;3023;3016:12;2978:52;3049:29;3068:9;3049:29;:::i;:::-;3039:39;;3128:2;3117:9;3113:18;3100:32;3175:5;3168:13;3161:21;3154:5;3151:32;3141:60;;3197:1;3194;3187:12;3141:60;3220:5;3210:15;;;2884:347;;;;;:::o;3236:127::-;3297:10;3292:3;3288:20;3285:1;3278:31;3328:4;3325:1;3318:15;3352:4;3349:1;3342:15;3368:1138;3463:6;3471;3479;3487;3540:3;3528:9;3519:7;3515:23;3511:33;3508:53;;;3557:1;3554;3547:12;3508:53;3580:29;3599:9;3580:29;:::i;:::-;3570:39;;3628:38;3662:2;3651:9;3647:18;3628:38;:::i;:::-;3618:48;;3713:2;3702:9;3698:18;3685:32;3675:42;;3768:2;3757:9;3753:18;3740:32;3791:18;3832:2;3824:6;3821:14;3818:34;;;3848:1;3845;3838:12;3818:34;3886:6;3875:9;3871:22;3861:32;;3931:7;3924:4;3920:2;3916:13;3912:27;3902:55;;3953:1;3950;3943:12;3902:55;3989:2;3976:16;4011:2;4007;4004:10;4001:36;;;4017:18;;:::i;:::-;4092:2;4086:9;4060:2;4146:13;;-1:-1:-1;;4142:22:13;;;4166:2;4138:31;4134:40;4122:53;;;4190:18;;;4210:22;;;4187:46;4184:72;;;4236:18;;:::i;:::-;4276:10;4272:2;4265:22;4311:2;4303:6;4296:18;4351:7;4346:2;4341;4337;4333:11;4329:20;4326:33;4323:53;;;4372:1;4369;4362:12;4323:53;4428:2;4423;4419;4415:11;4410:2;4402:6;4398:15;4385:46;4473:1;4468:2;4463;4455:6;4451:15;4447:24;4440:35;4494:6;4484:16;;;;;;;3368:1138;;;;;;;:::o;4511:260::-;4579:6;4587;4640:2;4628:9;4619:7;4615:23;4611:32;4608:52;;;4656:1;4653;4646:12;4608:52;4679:29;4698:9;4679:29;:::i;:::-;4669:39;;4727:38;4761:2;4750:9;4746:18;4727:38;:::i;:::-;4717:48;;4511:260;;;;;:::o;4776:380::-;4855:1;4851:12;;;;4898;;;4919:61;;4973:4;4965:6;4961:17;4951:27;;4919:61;5026:2;5018:6;5015:14;4995:18;4992:38;4989:161;;5072:10;5067:3;5063:20;5060:1;5053:31;5107:4;5104:1;5097:15;5135:4;5132:1;5125:15;4989:161;;4776:380;;;:::o;6401:413::-;6603:2;6585:21;;;6642:2;6622:18;;;6615:30;6681:34;6676:2;6661:18;;6654:62;-1:-1:-1;;;6747:2:13;6732:18;;6725:47;6804:3;6789:19;;6401:413::o;8056:496::-;8235:3;8273:6;8267:13;8289:66;8348:6;8343:3;8336:4;8328:6;8324:17;8289:66;:::i;:::-;8418:13;;8377:16;;;;8440:70;8418:13;8377:16;8487:4;8475:17;;8440:70;:::i;:::-;8526:20;;8056:496;-1:-1:-1;;;;8056:496:13:o;9781:127::-;9842:10;9837:3;9833:20;9830:1;9823:31;9873:4;9870:1;9863:15;9897:4;9894:1;9887:15;9913:128;9980:9;;;10001:11;;;9998:37;;;10015:18;;:::i;10046:125::-;10111:9;;;10132:10;;;10129:36;;;10145:18;;:::i;10530:414::-;10732:2;10714:21;;;10771:2;10751:18;;;10744:30;10810:34;10805:2;10790:18;;10783:62;-1:-1:-1;;;10876:2:13;10861:18;;10854:48;10934:3;10919:19;;10530:414::o;10949:135::-;10988:3;11009:17;;;11006:43;;11029:18;;:::i;:::-;-1:-1:-1;11076:1:13;11065:13;;10949:135::o;11089:127::-;11150:10;11145:3;11141:20;11138:1;11131:31;11181:4;11178:1;11171:15;11205:4;11202:1;11195:15;11221:120;11261:1;11287;11277:35;;11292:18;;:::i;:::-;-1:-1:-1;11326:9:13;;11221:120::o;11346:112::-;11378:1;11404;11394:35;;11409:18;;:::i;:::-;-1:-1:-1;11443:9:13;;11346:112::o;11463:127::-;11524:10;11519:3;11515:20;11512:1;11505:31;11555:4;11552:1;11545:15;11579:4;11576:1;11569:15;11595:489;-1:-1:-1;;;;;11864:15:13;;;11846:34;;11916:15;;11911:2;11896:18;;11889:43;11963:2;11948:18;;11941:34;;;12011:3;12006:2;11991:18;;11984:31;;;11789:4;;12032:46;;12058:19;;12050:6;12032:46;:::i;:::-;12024:54;11595:489;-1:-1:-1;;;;;;11595:489:13:o;12089:249::-;12158:6;12211:2;12199:9;12190:7;12186:23;12182:32;12179:52;;;12227:1;12224;12217:12;12179:52;12259:9;12253:16;12278:30;12302:5;12278:30;:::i",
  "language": "Solidity",
  "natspec": {
    "details": "Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including the Metadata extension, but not including the Enumerable extension, which is available separately as {ERC721Enumerable}.",
    "events": {
      "Approval(address,address,uint256)": {
        "details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
      },
      "ApprovalForAll(address,address,bool)": {
        "details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
      },
      "Transfer(address,address,uint256)": {
        "details": "Emitted when `tokenId` token is transferred from `from` to `to`."
      }
    },
    "kind": "dev",
    "methods": {
      "approve(address,uint256)": {
        "details": "See {IERC721-approve}."
      },
      "balanceOf(address)": {
        "details": "See {IERC721-balanceOf}."
      },
      "constructor": {
        "details": "Initializes the contract by setting a `name` and a `symbol` to the token collection."
      },
      "getApproved(uint256)": {
        "details": "See {IERC721-getApproved}."
      },
      "isApprovedForAll(address,address)": {
        "details": "See {IERC721-isApprovedForAll}."
      },
      "name()": {
        "details": "See {IERC721Metadata-name}."
      },
      "ownerOf(uint256)": {
        "details": "See {IERC721-ownerOf}."
      },
      "safeTransferFrom(address,address,uint256)": {
        "details": "See {IERC721-safeTransferFrom}."
      },
      "safeTransferFrom(address,address,uint256,bytes)": {
        "details": "See {IERC721-safeTransferFrom}."
      },
      "setApprovalForAll(address,bool)": {
        "details": "See {IERC721-setApprovalForAll}."
      },
      "supportsInterface(bytes4)": {
        "details": "See {IERC165-supportsInterface}."
      },
      "symbol()": {
        "details": "See {IERC721Metadata-symbol}."
      },
      "tokenURI(uint256)": {
        "details": "See {IERC721Metadata-tokenURI}."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IERC721-transferFrom}."
      }
    },
    "version": 1
  },
  "offset": [
    628,
    14286
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xCF JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6352211E GT PUSH2 0x8C JUMPI DUP1 PUSH4 0xA22CB465 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x1B3 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x1C6 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x1D9 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x1EC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6352211E EQ PUSH2 0x177 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x18A JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1AB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xD4 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xFC JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x111 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x13C JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x151 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x164 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE7 PUSH2 0xE2 CALLDATASIZE PUSH1 0x4 PUSH2 0xD45 JUMP JUMPDEST PUSH2 0x1FF JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x104 PUSH2 0x251 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF3 SWAP2 SWAP1 PUSH2 0xDB2 JUMP JUMPDEST PUSH2 0x124 PUSH2 0x11F CALLDATASIZE PUSH1 0x4 PUSH2 0xDC5 JUMP JUMPDEST PUSH2 0x2E3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xF3 JUMP JUMPDEST PUSH2 0x14F PUSH2 0x14A CALLDATASIZE PUSH1 0x4 PUSH2 0xDFA JUMP JUMPDEST PUSH2 0x37D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x14F PUSH2 0x15F CALLDATASIZE PUSH1 0x4 PUSH2 0xE24 JUMP JUMPDEST PUSH2 0x492 JUMP JUMPDEST PUSH2 0x14F PUSH2 0x172 CALLDATASIZE PUSH1 0x4 PUSH2 0xE24 JUMP JUMPDEST PUSH2 0x4C3 JUMP JUMPDEST PUSH2 0x124 PUSH2 0x185 CALLDATASIZE PUSH1 0x4 PUSH2 0xDC5 JUMP JUMPDEST PUSH2 0x4DE JUMP JUMPDEST PUSH2 0x19D PUSH2 0x198 CALLDATASIZE PUSH1 0x4 PUSH2 0xE60 JUMP JUMPDEST PUSH2 0x555 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xF3 JUMP JUMPDEST PUSH2 0x104 PUSH2 0x5DC JUMP JUMPDEST PUSH2 0x14F PUSH2 0x1C1 CALLDATASIZE PUSH1 0x4 PUSH2 0xE7B JUMP JUMPDEST PUSH2 0x5EB JUMP JUMPDEST PUSH2 0x14F PUSH2 0x1D4 CALLDATASIZE PUSH1 0x4 PUSH2 0xECD JUMP JUMPDEST PUSH2 0x5FA JUMP JUMPDEST PUSH2 0x104 PUSH2 0x1E7 CALLDATASIZE PUSH1 0x4 PUSH2 0xDC5 JUMP JUMPDEST PUSH2 0x632 JUMP JUMPDEST PUSH2 0xE7 PUSH2 0x1FA CALLDATASIZE PUSH1 0x4 PUSH2 0xFA9 JUMP JUMPDEST PUSH2 0x71A JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x80AC58CD PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x230 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x5B5E139F PUSH1 0xE0 SHL EQ JUMPDEST DUP1 PUSH2 0x24B JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 SLOAD PUSH2 0x260 SWAP1 PUSH2 0xFDC JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x28C SWAP1 PUSH2 0xFDC JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2D9 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2AE JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2D9 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2BC JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x361 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76656420717565727920666F72206E6F6E6578 PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x34B9BA32B73A103A37B5B2B7 PUSH1 0xA1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x388 DUP3 PUSH2 0x4DE JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x3F5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76616C20746F2063757272656E74206F776E65 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x39 PUSH1 0xF9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x358 JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ DUP1 PUSH2 0x411 JUMPI POP PUSH2 0x411 DUP2 CALLER PUSH2 0x71A JUMP JUMPDEST PUSH2 0x483 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x38 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76652063616C6C6572206973206E6F74206F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6E6572206E6F7220617070726F76656420666F7220616C6C0000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x358 JUMP JUMPDEST PUSH2 0x48D DUP4 DUP4 PUSH2 0x748 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x49C CALLER DUP3 PUSH2 0x7B6 JUMP JUMPDEST PUSH2 0x4B8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x358 SWAP1 PUSH2 0x1016 JUMP JUMPDEST PUSH2 0x48D DUP4 DUP4 DUP4 PUSH2 0x88D JUMP JUMPDEST PUSH2 0x48D DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x5FA JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 PUSH2 0x24B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A206F776E657220717565727920666F72206E6F6E6578697374 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x32B73A103A37B5B2B7 PUSH1 0xB9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x358 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x5C0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A2062616C616E636520717565727920666F7220746865207A65 PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x726F2061646472657373 PUSH1 0xB0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x358 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x260 SWAP1 PUSH2 0xFDC JUMP JUMPDEST PUSH2 0x5F6 CALLER DUP4 DUP4 PUSH2 0xA29 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x604 CALLER DUP4 PUSH2 0x7B6 JUMP JUMPDEST PUSH2 0x620 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x358 SWAP1 PUSH2 0x1016 JUMP JUMPDEST PUSH2 0x62C DUP5 DUP5 DUP5 DUP5 PUSH2 0xAF7 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x60 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x6B1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732314D657461646174613A2055524920717565727920666F72206E6F PUSH1 0x44 DUP3 ADD MSTORE PUSH15 0x3732BC34B9BA32B73A103A37B5B2B7 PUSH1 0x89 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x358 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6C8 PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP2 MSTORE SWAP1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT PUSH2 0x6E8 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x713 JUMP JUMPDEST DUP1 PUSH2 0x6F2 DUP5 PUSH2 0xB2A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x703 SWAP3 SWAP2 SWAP1 PUSH2 0x1067 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE DUP2 SWAP1 PUSH2 0x77D DUP3 PUSH2 0x4DE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x82F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A206F70657261746F7220717565727920666F72206E6F6E6578 PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x34B9BA32B73A103A37B5B2B7 PUSH1 0xA1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x358 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x83A DUP4 PUSH2 0x4DE JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0x861 JUMPI POP PUSH2 0x861 DUP2 DUP6 PUSH2 0x71A JUMP JUMPDEST DUP1 PUSH2 0x885 JUMPI POP DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x87A DUP5 PUSH2 0x2E3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x8A0 DUP3 PUSH2 0x4DE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x904 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E736665722066726F6D20696E636F727265637420 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x37BBB732B9 PUSH1 0xD9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x358 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x966 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E7366657220746F20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x358 JUMP JUMPDEST PUSH2 0x971 PUSH1 0x0 DUP3 PUSH2 0x748 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP3 SWAP1 PUSH2 0x99A SWAP1 DUP5 SWAP1 PUSH2 0x10AC JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP3 SWAP1 PUSH2 0x9C8 SWAP1 DUP5 SWAP1 PUSH2 0x10BF JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND SWAP2 DUP3 OR SWAP1 SWAP3 SSTORE SWAP2 MLOAD DUP5 SWAP4 SWAP2 DUP8 AND SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 LOG4 POP POP POP JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0xA8A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F766520746F2063616C6C657200000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x358 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP2 MLOAD SWAP2 DUP3 MSTORE PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0xB02 DUP5 DUP5 DUP5 PUSH2 0x88D JUMP JUMPDEST PUSH2 0xB0E DUP5 DUP5 DUP5 DUP5 PUSH2 0xC2B JUMP JUMPDEST PUSH2 0x62C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x358 SWAP1 PUSH2 0x10D2 JUMP JUMPDEST PUSH1 0x60 DUP2 PUSH1 0x0 SUB PUSH2 0xB51 JUMPI POP POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x1 DUP2 MSTORE PUSH1 0x3 PUSH1 0xFC SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x0 JUMPDEST DUP2 ISZERO PUSH2 0xB7B JUMPI DUP1 PUSH2 0xB65 DUP2 PUSH2 0x1124 JUMP JUMPDEST SWAP2 POP PUSH2 0xB74 SWAP1 POP PUSH1 0xA DUP4 PUSH2 0x1153 JUMP JUMPDEST SWAP2 POP PUSH2 0xB55 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xB96 JUMPI PUSH2 0xB96 PUSH2 0xEB7 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xBC0 JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP JUMPDEST DUP5 ISZERO PUSH2 0x885 JUMPI PUSH2 0xBD5 PUSH1 0x1 DUP4 PUSH2 0x10AC JUMP JUMPDEST SWAP2 POP PUSH2 0xBE2 PUSH1 0xA DUP7 PUSH2 0x1167 JUMP JUMPDEST PUSH2 0xBED SWAP1 PUSH1 0x30 PUSH2 0x10BF JUMP JUMPDEST PUSH1 0xF8 SHL DUP2 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0xC02 JUMPI PUSH2 0xC02 PUSH2 0x117B JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH2 0xC24 PUSH1 0xA DUP7 PUSH2 0x1153 JUMP JUMPDEST SWAP5 POP PUSH2 0xBC4 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0xD21 JUMPI PUSH1 0x40 MLOAD PUSH4 0xA85BD01 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0x150B7A02 SWAP1 PUSH2 0xC6F SWAP1 CALLER SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x1191 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xCAA JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0xCA7 SWAP2 DUP2 ADD SWAP1 PUSH2 0x11CE JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xD07 JUMPI RETURNDATASIZE DUP1 DUP1 ISZERO PUSH2 0xCD8 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xCDD JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP DUP1 MLOAD PUSH1 0x0 SUB PUSH2 0xCFF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x358 SWAP1 PUSH2 0x10D2 JUMP JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH4 0xA85BD01 PUSH1 0xE1 SHL EQ SWAP1 POP PUSH2 0x885 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0xD42 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD57 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x713 DUP2 PUSH2 0xD2C JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xD7D JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xD65 JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0xD9E DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0xD62 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x713 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xD86 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xDD7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xDF5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xE0D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE16 DUP4 PUSH2 0xDDE JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xE39 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE42 DUP5 PUSH2 0xDDE JUMP JUMPDEST SWAP3 POP PUSH2 0xE50 PUSH1 0x20 DUP6 ADD PUSH2 0xDDE JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE72 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x713 DUP3 PUSH2 0xDDE JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xE8E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE97 DUP4 PUSH2 0xDDE JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xEAC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0xEE3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xEEC DUP6 PUSH2 0xDDE JUMP JUMPDEST SWAP4 POP PUSH2 0xEFA PUSH1 0x20 DUP7 ADD PUSH2 0xDDE JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xF1E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP8 ADD SWAP2 POP DUP8 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xF32 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0xF44 JUMPI PUSH2 0xF44 PUSH2 0xEB7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0xF6C JUMPI PUSH2 0xF6C PUSH2 0xEB7 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP11 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH2 0xF85 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP5 DUP4 ADD ADD MSTORE DUP1 SWAP6 POP POP POP POP POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xFBC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xFC5 DUP4 PUSH2 0xDDE JUMP JUMPDEST SWAP2 POP PUSH2 0xFD3 PUSH1 0x20 DUP5 ADD PUSH2 0xDDE JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0xFF0 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1010 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x31 SWAP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E736665722063616C6C6572206973206E6F74206F PUSH1 0x40 DUP3 ADD MSTORE PUSH17 0x1DDB995C881B9BDC88185C1C1C9BDD9959 PUSH1 0x7A SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH2 0x1079 DUP2 DUP5 PUSH1 0x20 DUP9 ADD PUSH2 0xD62 JUMP JUMPDEST DUP4 MLOAD SWAP1 DUP4 ADD SWAP1 PUSH2 0x108D DUP2 DUP4 PUSH1 0x20 DUP9 ADD PUSH2 0xD62 JUMP JUMPDEST ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x24B JUMPI PUSH2 0x24B PUSH2 0x1096 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x24B JUMPI PUSH2 0x24B PUSH2 0x1096 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x32 SWAP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E7366657220746F206E6F6E204552433732315265 PUSH1 0x40 DUP3 ADD MSTORE PUSH18 0x31B2B4BB32B91034B6B83632B6B2B73A32B9 PUSH1 0x71 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x1136 JUMPI PUSH2 0x1136 PUSH2 0x1096 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x1162 JUMPI PUSH2 0x1162 PUSH2 0x113D JUMP JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x1176 JUMPI PUSH2 0x1176 PUSH2 0x113D JUMP JUMPDEST POP MOD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND DUP3 MSTORE DUP5 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x80 PUSH1 0x60 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x11C4 SWAP1 DUP4 ADD DUP5 PUSH2 0xD86 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x11E0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x713 DUP2 PUSH2 0xD2C JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP15 PC PUSH10 0x852ADE61F7F94A2A6E6E AND SAR CREATE2 CALLER 0x2D ADD 0xD1 0xC8 EQ PUSH7 0xC0B7C9FC88D156 SWAP11 DUP9 PUSH5 0x736F6C6343 STOP ADDMOD OR STOP CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        628,
        14286
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        628,
        14286
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        628,
        14286
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5": {
      "fn": null,
      "offset": [
        628,
        14286
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "6": {
      "fn": null,
      "offset": [
        628,
        14286
      ],
      "op": "DUP1",
      "path": "0"
    },
    "7": {
      "fn": null,
      "offset": [
        628,
        14286
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "8": {
      "fn": null,
      "offset": [
        628,
        14286
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        628,
        14286
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "12": {
      "fn": null,
      "offset": [
        628,
        14286
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        628,
        14286
      ],
      "op": "DUP1",
      "path": "0"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        628,
        14286
      ],
      "op": "REVERT",
      "path": "0"
    },
    "16": {
      "fn": null,
      "offset": [
        628,
        14286
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "17": {
      "fn": null,
      "offset": [
        628,
        14286
      ],
      "op": "POP",
      "path": "0"
    },
    "18": {
      "fn": null,
      "offset": [
        628,
        14286
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        628,
        14286
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "21": {
      "fn": null,
      "offset": [
        628,
        14286
      ],
      "op": "LT",
      "path": "0"
    },
    "22": {
      "fn": null,
      "offset": [
        628,
        14286
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xCF"
    },
    "25": {
      "fn": null,
      "offset": [
        628,
        14286
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "26": {
      "fn": null,
      "offset": [
        628,
        14286
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        628,
        14286
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "29": {
      "fn": null,
      "offset": [
        628,
        14286
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        628,
        14286
      ],
      "op": "SHR",
      "path": "0"
    },
    "32": {
      "fn": null,
      "offset": [
        628,
        14286
      ],
      "op": "DUP1",
      "path": "0"
    },
    "33": {
      "fn": null,
      "offset": [
        628,
        14286
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x6352211E"
    },
    "38": {
      "fn": null,
      "offset": [
        628,
        14286
      ],
      "op": "GT",
      "path": "0"
    },
    "39": {
      "fn": null,
      "offset": [
        628,
        14286
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x8C"
    },
    "42": {
      "fn": null,
      "offset": [
        628,
        14286
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "43": {
      "fn": null,
      "offset": [
        628,
        14286
      ],
      "op": "DUP1",
      "path": "0"
    },
    "44": {
      "fn": null,
      "offset": [
        628,
        14286
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xA22CB465"
    },
    "49": {
      "fn": null,
      "offset": [
        628,
        14286
      ],
      "op": "GT",
      "path": "0"
    },
    "50": {
      "fn": null,
      "offset": [
        628,
        14286
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x66"
    },
    "53": {
      "fn": null,
      "offset": [
        628,
        14286
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "54": {
      "fn": null,
      "offset": [
        628,
        14286
      ],
      "op": "DUP1",
      "path": "0"
    },
    "55": {
      "fn": null,
      "offset": [
        628,
        14286
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xA22CB465"
    },
    "60": {
      "fn": null,
      "offset": [
        628,
        14286
      ],
      "op": "EQ",
      "path": "0"
    },
    "61": {
      "fn": null,
      "offset": [
        628,
        14286
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1B3"
    },
    "64": {
      "fn": null,
      "offset": [
        628,
        14286
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "65": {
      "fn": null,
      "offset": [
        628,
        14286
      ],
      "op": "DUP1",
      "path": "0"
    },
    "66": {
      "fn": null,
      "offset": [
        628,
        14286
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xB88D4FDE"
    },
    "71": {
      "fn": null,
      "offset": [
        628,
        14286
      ],
      "op": "EQ",
      "path": "0"
    },
    "72": {
      "fn": null,
      "offset": [
        628,
        14286
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1C6"
    },
    "75": {
      "fn": null,
      "offset": [
        628,
        14286
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "76": {
      "fn": null,
      "offset": [
        628,
        14286
      ],
      "op": "DUP1",
      "path": "0"
    },
    "77": {
      "fn": null,
      "offset": [
        628,
        14286
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xC87B56DD"
    },
    "82": {
      "fn": null,
      "offset": [
        628,
        14286
      ],
      "op": "EQ",
      "path": "0"
    },
    "83": {
      "fn": null,
      "offset": [
        628,
        14286
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1D9"
    },
    "86": {
      "fn": null,
      "offset": [
        628,
        14286
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "87": {
      "fn": null,
      "offset": [
        628,
        14286
      ],
      "op": "DUP1",
      "path": "0"
    },
    "88": {
      "fn": null,
      "offset": [
        628,
        14286
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xE985E9C5"
    },
    "93": {
      "fn": null,
      "offset": [
        628,
        14286
      ],
      "op": "EQ",
      "path": "0"
    },
    "94": {
      "fn": null,
      "offset": [
        628,
        14286
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1EC"
    },
    "97": {
      "fn": null,
      "offset": [
        628,
        14286
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "98": {
      "fn": null,
      "offset": [
        628,
        14286
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "100": {
      "fn": null,
      "offset": [
        628,
        14286
      ],
      "op": "DUP1",
      "path": "0"
    },
    "101": {
      "fn": null,
      "offset": [
        628,
        14286
      ],
      "op": "REVERT",
      "path": "0"
    },
    "102": {
      "fn": null,
      "offset": [
        628,
        14286
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "103": {
      "fn": null,
      "offset": [
        628,
        14286
      ],
      "op": "DUP1",
      "path": "0"
    },
    "104": {
      "fn": null,
      "offset": [
        628,
        14286
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x6352211E"
    },
    "109": {
      "fn": null,
      "offset": [
        628,
        14286
      ],
      "op": "EQ",
      "path": "0"
    },
    "110": {
      "fn": null,
      "offset": [
        628,
        14286
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x177"
    },
    "113": {
      "fn": null,
      "offset": [
        628,
        14286
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "114": {
      "fn": null,
      "offset": [
        628,
        14286
      ],
      "op": "DUP1",
      "path": "0"
    },
    "115": {
      "fn": null,
      "offset": [
        628,
        14286
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x70A08231"
    },
    "120": {
      "fn": null,
      "offset": [
        628,
        14286
      ],
      "op": "EQ",
      "path": "0"
    },
    "121": {
      "fn": null,
      "offset": [
        628,
        14286
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x18A"
    },
    "124": {
      "fn": null,
      "offset": [
        628,
        14286
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "125": {
      "fn": null,
      "offset": [
        628,
        14286
      ],
      "op": "DUP1",
      "path": "0"
    },
    "126": {
      "fn": null,
      "offset": [
        628,
        14286
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x95D89B41"
    },
    "131": {
      "fn": null,
      "offset": [
        628,
        14286
      ],
      "op": "EQ",
      "path": "0"
    },
    "132": {
      "fn": null,
      "offset": [
        628,
        14286
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1AB"
    },
    "135": {
      "fn": null,
      "offset": [
        628,
        14286
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "136": {
      "fn": null,
      "offset": [
        628,
        14286
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "138": {
      "fn": null,
      "offset": [
        628,
        14286
      ],
      "op": "DUP1",
      "path": "0"
    },
    "139": {
      "fn": null,
      "offset": [
        628,
        14286
      ],
      "op": "REVERT",
      "path": "0"
    },
    "140": {
      "fn": null,
      "offset": [
        628,
        14286
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "141": {
      "fn": null,
      "offset": [
        628,
        14286
      ],
      "op": "DUP1",
      "path": "0"
    },
    "142": {
      "fn": null,
      "offset": [
        628,
        14286
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x1FFC9A7"
    },
    "147": {
      "fn": null,
      "offset": [
        628,
        14286
      ],
      "op": "EQ",
      "path": "0"
    },
    "148": {
      "fn": null,
      "offset": [
        628,
        14286
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xD4"
    },
    "151": {
      "fn": null,
      "offset": [
        628,
        14286
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "152": {
      "fn": null,
      "offset": [
        628,
        14286
      ],
      "op": "DUP1",
      "path": "0"
    },
    "153": {
      "fn": null,
      "offset": [
        628,
        14286
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x6FDDE03"
    },
    "158": {
      "fn": null,
      "offset": [
        628,
        14286
      ],
      "op": "EQ",
      "path": "0"
    },
    "159": {
      "fn": null,
      "offset": [
        628,
        14286
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xFC"
    },
    "162": {
      "fn": null,
      "offset": [
        628,
        14286
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "163": {
      "fn": null,
      "offset": [
        628,
        14286
      ],
      "op": "DUP1",
      "path": "0"
    },
    "164": {
      "fn": null,
      "offset": [
        628,
        14286
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x81812FC"
    },
    "169": {
      "fn": null,
      "offset": [
        628,
        14286
      ],
      "op": "EQ",
      "path": "0"
    },
    "170": {
      "fn": null,
      "offset": [
        628,
        14286
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x111"
    },
    "173": {
      "fn": null,
      "offset": [
        628,
        14286
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "174": {
      "fn": null,
      "offset": [
        628,
        14286
      ],
      "op": "DUP1",
      "path": "0"
    },
    "175": {
      "fn": null,
      "offset": [
        628,
        14286
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x95EA7B3"
    },
    "180": {
      "fn": null,
      "offset": [
        628,
        14286
      ],
      "op": "EQ",
      "path": "0"
    },
    "181": {
      "fn": null,
      "offset": [
        628,
        14286
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x13C"
    },
    "184": {
      "fn": null,
      "offset": [
        628,
        14286
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "185": {
      "fn": null,
      "offset": [
        628,
        14286
      ],
      "op": "DUP1",
      "path": "0"
    },
    "186": {
      "fn": null,
      "offset": [
        628,
        14286
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x23B872DD"
    },
    "191": {
      "fn": null,
      "offset": [
        628,
        14286
      ],
      "op": "EQ",
      "path": "0"
    },
    "192": {
      "fn": null,
      "offset": [
        628,
        14286
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x151"
    },
    "195": {
      "fn": null,
      "offset": [
        628,
        14286
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "196": {
      "fn": null,
      "offset": [
        628,
        14286
      ],
      "op": "DUP1",
      "path": "0"
    },
    "197": {
      "fn": null,
      "offset": [
        628,
        14286
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x42842E0E"
    },
    "202": {
      "fn": null,
      "offset": [
        628,
        14286
      ],
      "op": "EQ",
      "path": "0"
    },
    "203": {
      "fn": null,
      "offset": [
        628,
        14286
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x164"
    },
    "206": {
      "fn": null,
      "offset": [
        628,
        14286
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "207": {
      "fn": null,
      "offset": [
        628,
        14286
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "208": {
      "fn": null,
      "offset": [
        628,
        14286
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "210": {
      "fn": null,
      "offset": [
        628,
        14286
      ],
      "op": "DUP1",
      "path": "0"
    },
    "211": {
      "first_revert": true,
      "fn": null,
      "offset": [
        628,
        14286
      ],
      "op": "REVERT",
      "path": "0"
    },
    "212": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1570,
        1870
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "213": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1570,
        1870
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xE7"
    },
    "216": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1570,
        1870
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xE2"
    },
    "219": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1570,
        1870
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "220": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1570,
        1870
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "222": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1570,
        1870
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xD45"
    },
    "225": {
      "fn": "ERC721.supportsInterface",
      "jump": "i",
      "offset": [
        1570,
        1870
      ],
      "op": "JUMP",
      "path": "0"
    },
    "226": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1570,
        1870
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "227": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1570,
        1870
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1FF"
    },
    "230": {
      "fn": "ERC721.supportsInterface",
      "jump": "i",
      "offset": [
        1570,
        1870
      ],
      "op": "JUMP",
      "path": "0"
    },
    "231": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1570,
        1870
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "232": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1570,
        1870
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "234": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1570,
        1870
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "235": {
      "op": "SWAP1"
    },
    "236": {
      "op": "ISZERO"
    },
    "237": {
      "op": "ISZERO"
    },
    "238": {
      "op": "DUP2"
    },
    "239": {
      "op": "MSTORE"
    },
    "240": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "242": {
      "op": "ADD"
    },
    "243": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1570,
        1870
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "244": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1570,
        1870
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "246": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1570,
        1870
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "247": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1570,
        1870
      ],
      "op": "DUP1",
      "path": "0"
    },
    "248": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1570,
        1870
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "249": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1570,
        1870
      ],
      "op": "SUB",
      "path": "0"
    },
    "250": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1570,
        1870
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "251": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1570,
        1870
      ],
      "op": "RETURN",
      "path": "0"
    },
    "252": {
      "fn": "ERC721.name",
      "offset": [
        2488,
        2586
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "253": {
      "fn": "ERC721.name",
      "offset": [
        2488,
        2586
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x104"
    },
    "256": {
      "fn": "ERC721.name",
      "offset": [
        2488,
        2586
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x251"
    },
    "259": {
      "fn": "ERC721.name",
      "jump": "i",
      "offset": [
        2488,
        2586
      ],
      "op": "JUMP",
      "path": "0"
    },
    "260": {
      "fn": "ERC721.name",
      "offset": [
        2488,
        2586
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "261": {
      "fn": "ERC721.name",
      "offset": [
        2488,
        2586
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "263": {
      "fn": "ERC721.name",
      "offset": [
        2488,
        2586
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "264": {
      "fn": "ERC721.name",
      "offset": [
        2488,
        2586
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF3"
    },
    "267": {
      "fn": "ERC721.name",
      "offset": [
        2488,
        2586
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "268": {
      "fn": "ERC721.name",
      "offset": [
        2488,
        2586
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "269": {
      "fn": "ERC721.name",
      "offset": [
        2488,
        2586
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xDB2"
    },
    "272": {
      "fn": "ERC721.name",
      "jump": "i",
      "offset": [
        2488,
        2586
      ],
      "op": "JUMP",
      "path": "0"
    },
    "273": {
      "fn": "ERC721.getApproved",
      "offset": [
        4000,
        4217
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "274": {
      "fn": "ERC721.getApproved",
      "offset": [
        4000,
        4217
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x124"
    },
    "277": {
      "fn": "ERC721.getApproved",
      "offset": [
        4000,
        4217
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x11F"
    },
    "280": {
      "fn": "ERC721.getApproved",
      "offset": [
        4000,
        4217
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "281": {
      "fn": "ERC721.getApproved",
      "offset": [
        4000,
        4217
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "283": {
      "fn": "ERC721.getApproved",
      "offset": [
        4000,
        4217
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xDC5"
    },
    "286": {
      "fn": "ERC721.getApproved",
      "jump": "i",
      "offset": [
        4000,
        4217
      ],
      "op": "JUMP",
      "path": "0"
    },
    "287": {
      "fn": "ERC721.getApproved",
      "offset": [
        4000,
        4217
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "288": {
      "fn": "ERC721.getApproved",
      "offset": [
        4000,
        4217
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2E3"
    },
    "291": {
      "fn": "ERC721.getApproved",
      "jump": "i",
      "offset": [
        4000,
        4217
      ],
      "op": "JUMP",
      "path": "0"
    },
    "292": {
      "fn": "ERC721.getApproved",
      "offset": [
        4000,
        4217
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "293": {
      "fn": "ERC721.getApproved",
      "offset": [
        4000,
        4217
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "295": {
      "fn": "ERC721.getApproved",
      "offset": [
        4000,
        4217
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "296": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "298": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "300": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "302": {
      "op": "SHL"
    },
    "303": {
      "op": "SUB"
    },
    "304": {
      "op": "SWAP1"
    },
    "305": {
      "op": "SWAP2"
    },
    "306": {
      "op": "AND"
    },
    "307": {
      "op": "DUP2"
    },
    "308": {
      "op": "MSTORE"
    },
    "309": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "311": {
      "op": "ADD"
    },
    "312": {
      "fn": "ERC721.getApproved",
      "offset": [
        4000,
        4217
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF3"
    },
    "315": {
      "op": "JUMP"
    },
    "316": {
      "fn": "ERC721.approve",
      "offset": [
        3538,
        3939
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "317": {
      "fn": "ERC721.approve",
      "offset": [
        3538,
        3939
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x14F"
    },
    "320": {
      "fn": "ERC721.approve",
      "offset": [
        3538,
        3939
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x14A"
    },
    "323": {
      "fn": "ERC721.approve",
      "offset": [
        3538,
        3939
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "324": {
      "fn": "ERC721.approve",
      "offset": [
        3538,
        3939
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "326": {
      "fn": "ERC721.approve",
      "offset": [
        3538,
        3939
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xDFA"
    },
    "329": {
      "fn": "ERC721.approve",
      "jump": "i",
      "offset": [
        3538,
        3939
      ],
      "op": "JUMP",
      "path": "0"
    },
    "330": {
      "fn": "ERC721.approve",
      "offset": [
        3538,
        3939
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "331": {
      "fn": "ERC721.approve",
      "offset": [
        3538,
        3939
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x37D"
    },
    "334": {
      "fn": "ERC721.approve",
      "jump": "i",
      "offset": [
        3538,
        3939
      ],
      "op": "JUMP",
      "path": "0"
    },
    "335": {
      "fn": "ERC721.approve",
      "offset": [
        3538,
        3939
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "336": {
      "fn": "ERC721.approve",
      "offset": [
        3538,
        3939
      ],
      "op": "STOP",
      "path": "0"
    },
    "337": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4727,
        5057
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "338": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4727,
        5057
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x14F"
    },
    "341": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4727,
        5057
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x15F"
    },
    "344": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4727,
        5057
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "345": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4727,
        5057
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "347": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4727,
        5057
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xE24"
    },
    "350": {
      "fn": "ERC721.transferFrom",
      "jump": "i",
      "offset": [
        4727,
        5057
      ],
      "op": "JUMP",
      "path": "0"
    },
    "351": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4727,
        5057
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "352": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4727,
        5057
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x492"
    },
    "355": {
      "fn": "ERC721.transferFrom",
      "jump": "i",
      "offset": [
        4727,
        5057
      ],
      "op": "JUMP",
      "path": "0"
    },
    "356": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5123,
        5302
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "357": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5123,
        5302
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x14F"
    },
    "360": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5123,
        5302
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x172"
    },
    "363": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5123,
        5302
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "364": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5123,
        5302
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "366": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5123,
        5302
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xE24"
    },
    "369": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        5123,
        5302
      ],
      "op": "JUMP",
      "path": "0"
    },
    "370": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5123,
        5302
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "371": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5123,
        5302
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4C3"
    },
    "374": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        5123,
        5302
      ],
      "op": "JUMP",
      "path": "0"
    },
    "375": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2191,
        2426
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "376": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2191,
        2426
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x124"
    },
    "379": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2191,
        2426
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x185"
    },
    "382": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2191,
        2426
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "383": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2191,
        2426
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "385": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2191,
        2426
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xDC5"
    },
    "388": {
      "fn": "ERC721.ownerOf",
      "jump": "i",
      "offset": [
        2191,
        2426
      ],
      "op": "JUMP",
      "path": "0"
    },
    "389": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2191,
        2426
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "390": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2191,
        2426
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4DE"
    },
    "393": {
      "fn": "ERC721.ownerOf",
      "jump": "i",
      "offset": [
        2191,
        2426
      ],
      "op": "JUMP",
      "path": "0"
    },
    "394": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1929,
        2134
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "395": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1929,
        2134
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x19D"
    },
    "398": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1929,
        2134
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x198"
    },
    "401": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1929,
        2134
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "402": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1929,
        2134
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "404": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1929,
        2134
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xE60"
    },
    "407": {
      "fn": "ERC721.balanceOf",
      "jump": "i",
      "offset": [
        1929,
        2134
      ],
      "op": "JUMP",
      "path": "0"
    },
    "408": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1929,
        2134
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "409": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1929,
        2134
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x555"
    },
    "412": {
      "fn": "ERC721.balanceOf",
      "jump": "i",
      "offset": [
        1929,
        2134
      ],
      "op": "JUMP",
      "path": "0"
    },
    "413": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1929,
        2134
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "414": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1929,
        2134
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "416": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1929,
        2134
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "417": {
      "op": "SWAP1"
    },
    "418": {
      "op": "DUP2"
    },
    "419": {
      "op": "MSTORE"
    },
    "420": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "422": {
      "op": "ADD"
    },
    "423": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1929,
        2134
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF3"
    },
    "426": {
      "op": "JUMP"
    },
    "427": {
      "fn": "ERC721.symbol",
      "offset": [
        2650,
        2752
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "428": {
      "fn": "ERC721.symbol",
      "offset": [
        2650,
        2752
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x104"
    },
    "431": {
      "fn": "ERC721.symbol",
      "offset": [
        2650,
        2752
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x5DC"
    },
    "434": {
      "fn": "ERC721.symbol",
      "jump": "i",
      "offset": [
        2650,
        2752
      ],
      "op": "JUMP",
      "path": "0"
    },
    "435": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4284,
        4437
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "436": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4284,
        4437
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x14F"
    },
    "439": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4284,
        4437
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1C1"
    },
    "442": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4284,
        4437
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "443": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4284,
        4437
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "445": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4284,
        4437
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xE7B"
    },
    "448": {
      "fn": "ERC721.setApprovalForAll",
      "jump": "i",
      "offset": [
        4284,
        4437
      ],
      "op": "JUMP",
      "path": "0"
    },
    "449": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4284,
        4437
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "450": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4284,
        4437
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x5EB"
    },
    "453": {
      "fn": "ERC721.setApprovalForAll",
      "jump": "i",
      "offset": [
        4284,
        4437
      ],
      "op": "JUMP",
      "path": "0"
    },
    "454": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5368,
        5688
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "455": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5368,
        5688
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x14F"
    },
    "458": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5368,
        5688
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1D4"
    },
    "461": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5368,
        5688
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "462": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5368,
        5688
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "464": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5368,
        5688
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xECD"
    },
    "467": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        5368,
        5688
      ],
      "op": "JUMP",
      "path": "0"
    },
    "468": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5368,
        5688
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "469": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5368,
        5688
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x5FA"
    },
    "472": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        5368,
        5688
      ],
      "op": "JUMP",
      "path": "0"
    },
    "473": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2818,
        3147
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "474": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2818,
        3147
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x104"
    },
    "477": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2818,
        3147
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1E7"
    },
    "480": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2818,
        3147
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "481": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2818,
        3147
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "483": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2818,
        3147
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xDC5"
    },
    "486": {
      "fn": "ERC721.tokenURI",
      "jump": "i",
      "offset": [
        2818,
        3147
      ],
      "op": "JUMP",
      "path": "0"
    },
    "487": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2818,
        3147
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "488": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2818,
        3147
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x632"
    },
    "491": {
      "fn": "ERC721.tokenURI",
      "jump": "i",
      "offset": [
        2818,
        3147
      ],
      "op": "JUMP",
      "path": "0"
    },
    "492": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4503,
        4665
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "493": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4503,
        4665
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xE7"
    },
    "496": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4503,
        4665
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1FA"
    },
    "499": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4503,
        4665
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "500": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4503,
        4665
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "502": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4503,
        4665
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xFA9"
    },
    "505": {
      "fn": "ERC721.isApprovedForAll",
      "jump": "i",
      "offset": [
        4503,
        4665
      ],
      "op": "JUMP",
      "path": "0"
    },
    "506": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4503,
        4665
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "507": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4503,
        4665
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x71A"
    },
    "510": {
      "fn": "ERC721.isApprovedForAll",
      "jump": "i",
      "offset": [
        4503,
        4665
      ],
      "op": "JUMP",
      "path": "0"
    },
    "511": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1570,
        1870
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "512": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1672,
        1676
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "514": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "516": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "518": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "520": {
      "op": "SHL"
    },
    "521": {
      "op": "SUB"
    },
    "522": {
      "op": "NOT"
    },
    "523": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1707,
        1747
      ],
      "op": "DUP3",
      "path": "0",
      "statement": 0
    },
    "524": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1707,
        1747
      ],
      "op": "AND",
      "path": "0"
    },
    "525": {
      "op": "PUSH4",
      "value": "0x80AC58CD"
    },
    "530": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "532": {
      "op": "SHL"
    },
    "533": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1707,
        1747
      ],
      "op": "EQ",
      "path": "0"
    },
    "534": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1707,
        1747
      ],
      "op": "DUP1",
      "path": "0"
    },
    "535": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1707,
        1811
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x230"
    },
    "538": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1707,
        1811
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "539": {
      "op": "POP"
    },
    "540": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "542": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "544": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "546": {
      "op": "SHL"
    },
    "547": {
      "op": "SUB"
    },
    "548": {
      "op": "NOT"
    },
    "549": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1763,
        1811
      ],
      "op": "DUP3",
      "path": "0"
    },
    "550": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1763,
        1811
      ],
      "op": "AND",
      "path": "0"
    },
    "551": {
      "op": "PUSH4",
      "value": "0x5B5E139F"
    },
    "556": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "558": {
      "op": "SHL"
    },
    "559": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1763,
        1811
      ],
      "op": "EQ",
      "path": "0"
    },
    "560": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1707,
        1811
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "561": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1707,
        1863
      ],
      "op": "DUP1",
      "path": "0"
    },
    "562": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1707,
        1863
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x24B"
    },
    "565": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1707,
        1863
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "566": {
      "op": "POP"
    },
    "567": {
      "op": "PUSH4",
      "value": "0x1FFC9A7"
    },
    "572": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "574": {
      "op": "SHL"
    },
    "575": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "577": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "579": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "581": {
      "op": "SHL"
    },
    "582": {
      "op": "SUB"
    },
    "583": {
      "op": "NOT"
    },
    "584": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        937,
        977
      ],
      "op": "DUP4",
      "path": "9",
      "statement": 1
    },
    "585": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        937,
        977
      ],
      "op": "AND",
      "path": "9"
    },
    "586": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        937,
        977
      ],
      "op": "EQ",
      "path": "9"
    },
    "587": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1827,
        1863
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "588": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1688,
        1863
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "589": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1570,
        1870
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "590": {
      "op": "POP"
    },
    "591": {
      "op": "POP"
    },
    "592": {
      "fn": "ERC721.supportsInterface",
      "jump": "o",
      "offset": [
        1570,
        1870
      ],
      "op": "JUMP",
      "path": "0"
    },
    "593": {
      "fn": "ERC721.name",
      "offset": [
        2488,
        2586
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "594": {
      "fn": "ERC721.name",
      "offset": [
        2542,
        2555
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x60"
    },
    "596": {
      "fn": "ERC721.name",
      "offset": [
        2574,
        2579
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 2,
      "value": "0x0"
    },
    "598": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "DUP1",
      "path": "0"
    },
    "599": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "600": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x260"
    },
    "603": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "604": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xFDC"
    },
    "607": {
      "fn": "ERC721.name",
      "jump": "i",
      "offset": [
        2567,
        2579
      ],
      "op": "JUMP",
      "path": "0"
    },
    "608": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "609": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "DUP1",
      "path": "0"
    },
    "610": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "612": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "ADD",
      "path": "0"
    },
    "613": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "615": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "DUP1",
      "path": "0"
    },
    "616": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "617": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "DIV",
      "path": "0"
    },
    "618": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "MUL",
      "path": "0"
    },
    "619": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "621": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "ADD",
      "path": "0"
    },
    "622": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "624": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "625": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "626": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "DUP2",
      "path": "0"
    },
    "627": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "ADD",
      "path": "0"
    },
    "628": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "630": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "631": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "DUP1",
      "path": "0"
    },
    "632": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "633": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "634": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "635": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "DUP2",
      "path": "0"
    },
    "636": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "DUP2",
      "path": "0"
    },
    "637": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "638": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "640": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "ADD",
      "path": "0"
    },
    "641": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "DUP3",
      "path": "0"
    },
    "642": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "DUP1",
      "path": "0"
    },
    "643": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "644": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x28C"
    },
    "647": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "648": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xFDC"
    },
    "651": {
      "fn": "ERC721.name",
      "jump": "i",
      "offset": [
        2567,
        2579
      ],
      "op": "JUMP",
      "path": "0"
    },
    "652": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "653": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "DUP1",
      "path": "0"
    },
    "654": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "655": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2D9"
    },
    "658": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "659": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "DUP1",
      "path": "0"
    },
    "660": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "662": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "LT",
      "path": "0"
    },
    "663": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2AE"
    },
    "666": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "667": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "670": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "DUP1",
      "path": "0"
    },
    "671": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "DUP4",
      "path": "0"
    },
    "672": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "673": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "DIV",
      "path": "0"
    },
    "674": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "MUL",
      "path": "0"
    },
    "675": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "DUP4",
      "path": "0"
    },
    "676": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "677": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "678": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "680": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "ADD",
      "path": "0"
    },
    "681": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "682": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2D9"
    },
    "685": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "JUMP",
      "path": "0"
    },
    "686": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "687": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "DUP3",
      "path": "0"
    },
    "688": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "ADD",
      "path": "0"
    },
    "689": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "690": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "691": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "693": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "694": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "696": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "698": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "699": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "700": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "701": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "DUP2",
      "path": "0"
    },
    "702": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "703": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "DUP2",
      "path": "0"
    },
    "704": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "705": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "706": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "708": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "ADD",
      "path": "0"
    },
    "709": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "710": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "712": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "ADD",
      "path": "0"
    },
    "713": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "DUP1",
      "path": "0"
    },
    "714": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "DUP4",
      "path": "0"
    },
    "715": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "GT",
      "path": "0"
    },
    "716": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2BC"
    },
    "719": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "720": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "DUP3",
      "path": "0"
    },
    "721": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "722": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "SUB",
      "path": "0"
    },
    "723": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "725": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "AND",
      "path": "0"
    },
    "726": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "DUP3",
      "path": "0"
    },
    "727": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "ADD",
      "path": "0"
    },
    "728": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "729": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "730": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "POP",
      "path": "0"
    },
    "731": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "POP",
      "path": "0"
    },
    "732": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "POP",
      "path": "0"
    },
    "733": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "POP",
      "path": "0"
    },
    "734": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "POP",
      "path": "0"
    },
    "735": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "736": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "POP",
      "path": "0"
    },
    "737": {
      "fn": "ERC721.name",
      "offset": [
        2488,
        2586
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "738": {
      "fn": "ERC721.name",
      "jump": "o",
      "offset": [
        2488,
        2586
      ],
      "op": "JUMP",
      "path": "0"
    },
    "739": {
      "fn": "ERC721.getApproved",
      "offset": [
        4000,
        4217
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "740": {
      "fn": "ERC721.getApproved",
      "offset": [
        4076,
        4083
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "742": {
      "fn": "ERC721._exists",
      "offset": [
        7248,
        7264
      ],
      "op": "DUP2",
      "path": "0",
      "statement": 3
    },
    "743": {
      "fn": "ERC721._exists",
      "offset": [
        7248,
        7264
      ],
      "op": "DUP2",
      "path": "0"
    },
    "744": {
      "fn": "ERC721._exists",
      "offset": [
        7248,
        7264
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "745": {
      "fn": "ERC721._exists",
      "offset": [
        7248,
        7255
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "747": {
      "fn": "ERC721._exists",
      "offset": [
        7248,
        7264
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "749": {
      "fn": "ERC721._exists",
      "offset": [
        7248,
        7264
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "750": {
      "fn": "ERC721._exists",
      "offset": [
        7248,
        7264
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "752": {
      "fn": "ERC721._exists",
      "offset": [
        7248,
        7264
      ],
      "op": "DUP2",
      "path": "0"
    },
    "753": {
      "fn": "ERC721._exists",
      "offset": [
        7248,
        7264
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "754": {
      "fn": "ERC721._exists",
      "offset": [
        7248,
        7264
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "755": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "757": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "759": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "761": {
      "op": "SHL"
    },
    "762": {
      "op": "SUB"
    },
    "763": {
      "fn": "ERC721._exists",
      "offset": [
        7248,
        7264
      ],
      "op": "AND",
      "path": "0"
    },
    "764": {
      "fn": "ERC721.getApproved",
      "offset": [
        4095,
        4168
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 4,
      "value": "0x361"
    },
    "767": {
      "fn": "ERC721.getApproved",
      "offset": [
        4095,
        4168
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "768": {
      "fn": "ERC721.getApproved",
      "offset": [
        4095,
        4168
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "770": {
      "fn": "ERC721.getApproved",
      "offset": [
        4095,
        4168
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "771": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "775": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "777": {
      "op": "SHL"
    },
    "778": {
      "fn": "ERC721.getApproved",
      "offset": [
        4095,
        4168
      ],
      "op": "DUP2",
      "path": "0"
    },
    "779": {
      "fn": "ERC721.getApproved",
      "offset": [
        4095,
        4168
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "780": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "782": {
      "fn": "ERC721.getApproved",
      "offset": [
        4095,
        4168
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "784": {
      "fn": "ERC721.getApproved",
      "offset": [
        4095,
        4168
      ],
      "op": "DUP3",
      "path": "0"
    },
    "785": {
      "fn": "ERC721.getApproved",
      "offset": [
        4095,
        4168
      ],
      "op": "ADD",
      "path": "0"
    },
    "786": {
      "op": "MSTORE"
    },
    "787": {
      "op": "PUSH1",
      "value": "0x2C"
    },
    "789": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "791": {
      "op": "DUP3"
    },
    "792": {
      "op": "ADD"
    },
    "793": {
      "op": "MSTORE"
    },
    "794": {
      "op": "PUSH32",
      "value": "0x4552433732313A20617070726F76656420717565727920666F72206E6F6E6578"
    },
    "827": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "829": {
      "op": "DUP3"
    },
    "830": {
      "op": "ADD"
    },
    "831": {
      "op": "MSTORE"
    },
    "832": {
      "op": "PUSH12",
      "value": "0x34B9BA32B73A103A37B5B2B7"
    },
    "845": {
      "op": "PUSH1",
      "value": "0xA1"
    },
    "847": {
      "op": "SHL"
    },
    "848": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "850": {
      "op": "DUP3"
    },
    "851": {
      "op": "ADD"
    },
    "852": {
      "op": "MSTORE"
    },
    "853": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "855": {
      "op": "ADD"
    },
    "856": {
      "fn": "ERC721.getApproved",
      "offset": [
        4095,
        4168
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "857": {
      "fn": "ERC721.getApproved",
      "offset": [
        4095,
        4168
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "859": {
      "fn": "ERC721.getApproved",
      "offset": [
        4095,
        4168
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "860": {
      "fn": "ERC721.getApproved",
      "offset": [
        4095,
        4168
      ],
      "op": "DUP1",
      "path": "0"
    },
    "861": {
      "fn": "ERC721.getApproved",
      "offset": [
        4095,
        4168
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "862": {
      "fn": "ERC721.getApproved",
      "offset": [
        4095,
        4168
      ],
      "op": "SUB",
      "path": "0"
    },
    "863": {
      "fn": "ERC721.getApproved",
      "offset": [
        4095,
        4168
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "864": {
      "fn": "ERC721.getApproved",
      "offset": [
        4095,
        4168
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "0"
    },
    "865": {
      "fn": "ERC721.getApproved",
      "offset": [
        4095,
        4168
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "866": {
      "op": "POP"
    },
    "867": {
      "fn": "ERC721.getApproved",
      "offset": [
        4186,
        4210
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 5,
      "value": "0x0"
    },
    "869": {
      "fn": "ERC721.getApproved",
      "offset": [
        4186,
        4210
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "870": {
      "fn": "ERC721.getApproved",
      "offset": [
        4186,
        4210
      ],
      "op": "DUP2",
      "path": "0"
    },
    "871": {
      "fn": "ERC721.getApproved",
      "offset": [
        4186,
        4210
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "872": {
      "fn": "ERC721.getApproved",
      "offset": [
        4186,
        4201
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "874": {
      "fn": "ERC721.getApproved",
      "offset": [
        4186,
        4210
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "876": {
      "fn": "ERC721.getApproved",
      "offset": [
        4186,
        4210
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "877": {
      "fn": "ERC721.getApproved",
      "offset": [
        4186,
        4210
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "879": {
      "fn": "ERC721.getApproved",
      "offset": [
        4186,
        4210
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "880": {
      "fn": "ERC721.getApproved",
      "offset": [
        4186,
        4210
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "881": {
      "fn": "ERC721.getApproved",
      "offset": [
        4186,
        4210
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "882": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "884": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "886": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "888": {
      "op": "SHL"
    },
    "889": {
      "op": "SUB"
    },
    "890": {
      "fn": "ERC721.getApproved",
      "offset": [
        4186,
        4210
      ],
      "op": "AND",
      "path": "0"
    },
    "891": {
      "fn": "ERC721.getApproved",
      "offset": [
        4186,
        4210
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "892": {
      "fn": "ERC721.getApproved",
      "jump": "o",
      "offset": [
        4000,
        4217
      ],
      "op": "JUMP",
      "path": "0"
    },
    "893": {
      "fn": "ERC721.approve",
      "offset": [
        3538,
        3939
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "894": {
      "fn": "ERC721.approve",
      "offset": [
        3618,
        3631
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "896": {
      "fn": "ERC721.approve",
      "offset": [
        3634,
        3657
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x388"
    },
    "899": {
      "fn": "ERC721.approve",
      "offset": [
        3649,
        3656
      ],
      "op": "DUP3",
      "path": "0"
    },
    "900": {
      "fn": "ERC721.approve",
      "offset": [
        3634,
        3648
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4DE"
    },
    "903": {
      "fn": "ERC721.approve",
      "jump": "i",
      "offset": [
        3634,
        3657
      ],
      "op": "JUMP",
      "path": "0"
    },
    "904": {
      "fn": "ERC721.approve",
      "offset": [
        3634,
        3657
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "905": {
      "fn": "ERC721.approve",
      "offset": [
        3618,
        3657
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "906": {
      "fn": "ERC721.approve",
      "offset": [
        3618,
        3657
      ],
      "op": "POP",
      "path": "0"
    },
    "907": {
      "fn": "ERC721.approve",
      "offset": [
        3681,
        3686
      ],
      "op": "DUP1",
      "path": "0",
      "statement": 6
    },
    "908": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "910": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "912": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "914": {
      "op": "SHL"
    },
    "915": {
      "op": "SUB"
    },
    "916": {
      "fn": "ERC721.approve",
      "offset": [
        3675,
        3686
      ],
      "op": "AND",
      "path": "0"
    },
    "917": {
      "fn": "ERC721.approve",
      "offset": [
        3675,
        3677
      ],
      "op": "DUP4",
      "path": "0"
    },
    "918": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "920": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "922": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "924": {
      "op": "SHL"
    },
    "925": {
      "op": "SUB"
    },
    "926": {
      "fn": "ERC721.approve",
      "offset": [
        3675,
        3686
      ],
      "op": "AND",
      "path": "0"
    },
    "927": {
      "branch": 50,
      "fn": "ERC721.approve",
      "offset": [
        3675,
        3686
      ],
      "op": "SUB",
      "path": "0"
    },
    "928": {
      "fn": "ERC721.approve",
      "offset": [
        3667,
        3724
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3F5"
    },
    "931": {
      "branch": 50,
      "fn": "ERC721.approve",
      "offset": [
        3667,
        3724
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "932": {
      "fn": "ERC721.approve",
      "offset": [
        3667,
        3724
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "934": {
      "fn": "ERC721.approve",
      "offset": [
        3667,
        3724
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "935": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "939": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "941": {
      "op": "SHL"
    },
    "942": {
      "fn": "ERC721.approve",
      "offset": [
        3667,
        3724
      ],
      "op": "DUP2",
      "path": "0"
    },
    "943": {
      "fn": "ERC721.approve",
      "offset": [
        3667,
        3724
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "944": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "946": {
      "fn": "ERC721.approve",
      "offset": [
        3667,
        3724
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "948": {
      "fn": "ERC721.approve",
      "offset": [
        3667,
        3724
      ],
      "op": "DUP3",
      "path": "0"
    },
    "949": {
      "fn": "ERC721.approve",
      "offset": [
        3667,
        3724
      ],
      "op": "ADD",
      "path": "0"
    },
    "950": {
      "op": "MSTORE"
    },
    "951": {
      "op": "PUSH1",
      "value": "0x21"
    },
    "953": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "955": {
      "op": "DUP3"
    },
    "956": {
      "op": "ADD"
    },
    "957": {
      "op": "MSTORE"
    },
    "958": {
      "op": "PUSH32",
      "value": "0x4552433732313A20617070726F76616C20746F2063757272656E74206F776E65"
    },
    "991": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "993": {
      "op": "DUP3"
    },
    "994": {
      "op": "ADD"
    },
    "995": {
      "op": "MSTORE"
    },
    "996": {
      "op": "PUSH1",
      "value": "0x39"
    },
    "998": {
      "op": "PUSH1",
      "value": "0xF9"
    },
    "1000": {
      "op": "SHL"
    },
    "1001": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1003": {
      "op": "DUP3"
    },
    "1004": {
      "op": "ADD"
    },
    "1005": {
      "op": "MSTORE"
    },
    "1006": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1008": {
      "op": "ADD"
    },
    "1009": {
      "fn": "ERC721.approve",
      "offset": [
        3667,
        3724
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x358"
    },
    "1012": {
      "op": "JUMP"
    },
    "1013": {
      "fn": "ERC721.approve",
      "offset": [
        3667,
        3724
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1014": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "6",
      "statement": 7
    },
    "1015": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1017": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1019": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1021": {
      "op": "SHL"
    },
    "1022": {
      "op": "SUB"
    },
    "1023": {
      "fn": "ERC721.approve",
      "offset": [
        3756,
        3777
      ],
      "op": "DUP3",
      "path": "0",
      "statement": 8
    },
    "1024": {
      "fn": "ERC721.approve",
      "offset": [
        3756,
        3777
      ],
      "op": "AND",
      "path": "0"
    },
    "1025": {
      "fn": "ERC721.approve",
      "offset": [
        3756,
        3777
      ],
      "op": "EQ",
      "path": "0"
    },
    "1026": {
      "branch": 51,
      "fn": "ERC721.approve",
      "offset": [
        3756,
        3777
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1027": {
      "fn": "ERC721.approve",
      "offset": [
        3756,
        3818
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x411"
    },
    "1030": {
      "branch": 51,
      "fn": "ERC721.approve",
      "offset": [
        3756,
        3818
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1031": {
      "op": "POP"
    },
    "1032": {
      "fn": "ERC721.approve",
      "offset": [
        3781,
        3818
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x411"
    },
    "1035": {
      "fn": "ERC721.approve",
      "offset": [
        3798,
        3803
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1036": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "6"
    },
    "1037": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4503,
        4665
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x71A"
    },
    "1040": {
      "fn": "ERC721.isApprovedForAll",
      "jump": "i",
      "offset": [
        4503,
        4665
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1041": {
      "branch": 52,
      "fn": "ERC721.approve",
      "offset": [
        3781,
        3818
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1042": {
      "fn": "ERC721.approve",
      "offset": [
        3735,
        3900
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x483"
    },
    "1045": {
      "branch": 52,
      "fn": "ERC721.approve",
      "offset": [
        3735,
        3900
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1046": {
      "fn": "ERC721.approve",
      "offset": [
        3735,
        3900
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1048": {
      "fn": "ERC721.approve",
      "offset": [
        3735,
        3900
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1049": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1053": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1055": {
      "op": "SHL"
    },
    "1056": {
      "fn": "ERC721.approve",
      "offset": [
        3735,
        3900
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1057": {
      "fn": "ERC721.approve",
      "offset": [
        3735,
        3900
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1058": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1060": {
      "fn": "ERC721.approve",
      "offset": [
        3735,
        3900
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1062": {
      "fn": "ERC721.approve",
      "offset": [
        3735,
        3900
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1063": {
      "fn": "ERC721.approve",
      "offset": [
        3735,
        3900
      ],
      "op": "ADD",
      "path": "0"
    },
    "1064": {
      "op": "MSTORE"
    },
    "1065": {
      "op": "PUSH1",
      "value": "0x38"
    },
    "1067": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1069": {
      "op": "DUP3"
    },
    "1070": {
      "op": "ADD"
    },
    "1071": {
      "op": "MSTORE"
    },
    "1072": {
      "op": "PUSH32",
      "value": "0x4552433732313A20617070726F76652063616C6C6572206973206E6F74206F77"
    },
    "1105": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1107": {
      "op": "DUP3"
    },
    "1108": {
      "op": "ADD"
    },
    "1109": {
      "op": "MSTORE"
    },
    "1110": {
      "op": "PUSH32",
      "value": "0x6E6572206E6F7220617070726F76656420666F7220616C6C0000000000000000"
    },
    "1143": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1145": {
      "op": "DUP3"
    },
    "1146": {
      "op": "ADD"
    },
    "1147": {
      "op": "MSTORE"
    },
    "1148": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1150": {
      "op": "ADD"
    },
    "1151": {
      "fn": "ERC721.approve",
      "offset": [
        3735,
        3900
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x358"
    },
    "1154": {
      "op": "JUMP"
    },
    "1155": {
      "fn": "ERC721.approve",
      "offset": [
        3735,
        3900
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1156": {
      "fn": "ERC721.approve",
      "offset": [
        3911,
        3932
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 9,
      "value": "0x48D"
    },
    "1159": {
      "fn": "ERC721.approve",
      "offset": [
        3920,
        3922
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1160": {
      "fn": "ERC721.approve",
      "offset": [
        3924,
        3931
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1161": {
      "fn": "ERC721.approve",
      "offset": [
        3911,
        3919
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x748"
    },
    "1164": {
      "fn": "ERC721.approve",
      "jump": "i",
      "offset": [
        3911,
        3932
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1165": {
      "fn": "ERC721.approve",
      "offset": [
        3911,
        3932
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1166": {
      "fn": "ERC721.approve",
      "offset": [
        3608,
        3939
      ],
      "op": "POP",
      "path": "0"
    },
    "1167": {
      "fn": "ERC721.approve",
      "offset": [
        3538,
        3939
      ],
      "op": "POP",
      "path": "0"
    },
    "1168": {
      "fn": "ERC721.approve",
      "offset": [
        3538,
        3939
      ],
      "op": "POP",
      "path": "0"
    },
    "1169": {
      "fn": "ERC721.approve",
      "jump": "o",
      "offset": [
        3538,
        3939
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1170": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4727,
        5057
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1171": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4916,
        4957
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 10,
      "value": "0x49C"
    },
    "1174": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "6"
    },
    "1175": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4949,
        4956
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1176": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4916,
        4934
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x7B6"
    },
    "1179": {
      "fn": "ERC721.transferFrom",
      "jump": "i",
      "offset": [
        4916,
        4957
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1180": {
      "branch": 53,
      "fn": "ERC721.transferFrom",
      "offset": [
        4916,
        4957
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1181": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4908,
        5011
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4B8"
    },
    "1184": {
      "branch": 53,
      "fn": "ERC721.transferFrom",
      "offset": [
        4908,
        5011
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1185": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4908,
        5011
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1187": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4908,
        5011
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1188": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1192": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1194": {
      "op": "SHL"
    },
    "1195": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4908,
        5011
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1196": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4908,
        5011
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1197": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4908,
        5011
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1199": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4908,
        5011
      ],
      "op": "ADD",
      "path": "0"
    },
    "1200": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4908,
        5011
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x358"
    },
    "1203": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4908,
        5011
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1204": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4908,
        5011
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1016"
    },
    "1207": {
      "fn": "ERC721.transferFrom",
      "jump": "i",
      "offset": [
        4908,
        5011
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1208": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4908,
        5011
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1209": {
      "fn": "ERC721.transferFrom",
      "offset": [
        5022,
        5050
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 11,
      "value": "0x48D"
    },
    "1212": {
      "fn": "ERC721.transferFrom",
      "offset": [
        5032,
        5036
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1213": {
      "fn": "ERC721.transferFrom",
      "offset": [
        5038,
        5040
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1214": {
      "fn": "ERC721.transferFrom",
      "offset": [
        5042,
        5049
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1215": {
      "fn": "ERC721.transferFrom",
      "offset": [
        5022,
        5031
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x88D"
    },
    "1218": {
      "fn": "ERC721.transferFrom",
      "jump": "i",
      "offset": [
        5022,
        5050
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1219": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5123,
        5302
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1220": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5256,
        5295
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 12,
      "value": "0x48D"
    },
    "1223": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5273,
        5277
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1224": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5279,
        5281
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1225": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5283,
        5290
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1226": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5256,
        5295
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1228": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5256,
        5295
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1229": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5256,
        5295
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1230": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5256,
        5295
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1232": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5256,
        5295
      ],
      "op": "ADD",
      "path": "0"
    },
    "1233": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5256,
        5295
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1235": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5256,
        5295
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1236": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5256,
        5295
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1237": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5256,
        5295
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1239": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5256,
        5295
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1240": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5256,
        5295
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1241": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5256,
        5295
      ],
      "op": "POP",
      "path": "0"
    },
    "1242": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5256,
        5272
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x5FA"
    },
    "1245": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        5256,
        5295
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1246": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2191,
        2426
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1247": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2263,
        2270
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1249": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2298,
        2314
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1250": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2298,
        2314
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1251": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2298,
        2314
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1252": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2298,
        2305
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "1254": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2298,
        2314
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1256": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2298,
        2314
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1257": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2298,
        2314
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1259": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2298,
        2314
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1260": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2298,
        2314
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1261": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2298,
        2314
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1262": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1264": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1266": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1268": {
      "op": "SHL"
    },
    "1269": {
      "op": "SUB"
    },
    "1270": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2298,
        2314
      ],
      "op": "AND",
      "path": "0"
    },
    "1271": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2298,
        2314
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1272": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2324,
        2397
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 13,
      "value": "0x24B"
    },
    "1275": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2324,
        2397
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1276": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2324,
        2397
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1278": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2324,
        2397
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1279": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1283": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1285": {
      "op": "SHL"
    },
    "1286": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2324,
        2397
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1287": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2324,
        2397
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1288": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1290": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2324,
        2397
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1292": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2324,
        2397
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1293": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2324,
        2397
      ],
      "op": "ADD",
      "path": "0"
    },
    "1294": {
      "op": "MSTORE"
    },
    "1295": {
      "op": "PUSH1",
      "value": "0x29"
    },
    "1297": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1299": {
      "op": "DUP3"
    },
    "1300": {
      "op": "ADD"
    },
    "1301": {
      "op": "MSTORE"
    },
    "1302": {
      "op": "PUSH32",
      "value": "0x4552433732313A206F776E657220717565727920666F72206E6F6E6578697374"
    },
    "1335": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1337": {
      "op": "DUP3"
    },
    "1338": {
      "op": "ADD"
    },
    "1339": {
      "op": "MSTORE"
    },
    "1340": {
      "op": "PUSH9",
      "value": "0x32B73A103A37B5B2B7"
    },
    "1350": {
      "op": "PUSH1",
      "value": "0xB9"
    },
    "1352": {
      "op": "SHL"
    },
    "1353": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1355": {
      "op": "DUP3"
    },
    "1356": {
      "op": "ADD"
    },
    "1357": {
      "op": "MSTORE"
    },
    "1358": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1360": {
      "op": "ADD"
    },
    "1361": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2324,
        2397
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x358"
    },
    "1364": {
      "op": "JUMP"
    },
    "1365": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1929,
        2134
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1366": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2001,
        2008
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1368": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1370": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1372": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1374": {
      "op": "SHL"
    },
    "1375": {
      "op": "SUB"
    },
    "1376": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2028,
        2047
      ],
      "op": "DUP3",
      "path": "0",
      "statement": 14
    },
    "1377": {
      "branch": 54,
      "fn": "ERC721.balanceOf",
      "offset": [
        2028,
        2047
      ],
      "op": "AND",
      "path": "0"
    },
    "1378": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2020,
        2094
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x5C0"
    },
    "1381": {
      "branch": 54,
      "fn": "ERC721.balanceOf",
      "offset": [
        2020,
        2094
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1382": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2020,
        2094
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1384": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2020,
        2094
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1385": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1389": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1391": {
      "op": "SHL"
    },
    "1392": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2020,
        2094
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1393": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2020,
        2094
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1394": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1396": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2020,
        2094
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1398": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2020,
        2094
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1399": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2020,
        2094
      ],
      "op": "ADD",
      "path": "0"
    },
    "1400": {
      "op": "MSTORE"
    },
    "1401": {
      "op": "PUSH1",
      "value": "0x2A"
    },
    "1403": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1405": {
      "op": "DUP3"
    },
    "1406": {
      "op": "ADD"
    },
    "1407": {
      "op": "MSTORE"
    },
    "1408": {
      "op": "PUSH32",
      "value": "0x4552433732313A2062616C616E636520717565727920666F7220746865207A65"
    },
    "1441": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1443": {
      "op": "DUP3"
    },
    "1444": {
      "op": "ADD"
    },
    "1445": {
      "op": "MSTORE"
    },
    "1446": {
      "op": "PUSH10",
      "value": "0x726F2061646472657373"
    },
    "1457": {
      "op": "PUSH1",
      "value": "0xB0"
    },
    "1459": {
      "op": "SHL"
    },
    "1460": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1462": {
      "op": "DUP3"
    },
    "1463": {
      "op": "ADD"
    },
    "1464": {
      "op": "MSTORE"
    },
    "1465": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1467": {
      "op": "ADD"
    },
    "1468": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2020,
        2094
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x358"
    },
    "1471": {
      "op": "JUMP"
    },
    "1472": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2020,
        2094
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1473": {
      "op": "POP"
    },
    "1474": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1476": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1478": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1480": {
      "op": "SHL"
    },
    "1481": {
      "op": "SUB"
    },
    "1482": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2111,
        2127
      ],
      "op": "AND",
      "path": "0",
      "statement": 15
    },
    "1483": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2111,
        2127
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1485": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2111,
        2127
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1486": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2111,
        2127
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1487": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2111,
        2127
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1488": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2111,
        2120
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "1490": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2111,
        2127
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1492": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2111,
        2127
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1493": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2111,
        2127
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1495": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2111,
        2127
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1496": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2111,
        2127
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1497": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2111,
        2127
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1498": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2111,
        2127
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1499": {
      "fn": "ERC721.balanceOf",
      "jump": "o",
      "offset": [
        1929,
        2134
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1500": {
      "fn": "ERC721.symbol",
      "offset": [
        2650,
        2752
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1501": {
      "fn": "ERC721.symbol",
      "offset": [
        2706,
        2719
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x60"
    },
    "1503": {
      "fn": "ERC721.symbol",
      "offset": [
        2738,
        2745
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 16,
      "value": "0x1"
    },
    "1505": {
      "fn": "ERC721.symbol",
      "offset": [
        2731,
        2745
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1506": {
      "fn": "ERC721.symbol",
      "offset": [
        2731,
        2745
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1507": {
      "fn": "ERC721.symbol",
      "offset": [
        2731,
        2745
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x260"
    },
    "1510": {
      "fn": "ERC721.symbol",
      "offset": [
        2731,
        2745
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1511": {
      "fn": "ERC721.symbol",
      "offset": [
        2731,
        2745
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xFDC"
    },
    "1514": {
      "fn": "ERC721.symbol",
      "jump": "i",
      "offset": [
        2731,
        2745
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1515": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4284,
        4437
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1516": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4378,
        4430
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 17,
      "value": "0x5F6"
    },
    "1519": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "6"
    },
    "1520": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4411,
        4419
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1521": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4421,
        4429
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1522": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4378,
        4396
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA29"
    },
    "1525": {
      "fn": "ERC721.setApprovalForAll",
      "jump": "i",
      "offset": [
        4378,
        4430
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1526": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4378,
        4430
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1527": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4284,
        4437
      ],
      "op": "POP",
      "path": "0"
    },
    "1528": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4284,
        4437
      ],
      "op": "POP",
      "path": "0"
    },
    "1529": {
      "fn": "ERC721.setApprovalForAll",
      "jump": "o",
      "offset": [
        4284,
        4437
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1530": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5368,
        5688
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1531": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5537,
        5578
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 18,
      "value": "0x604"
    },
    "1534": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "6"
    },
    "1535": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5570,
        5577
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1536": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5537,
        5555
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x7B6"
    },
    "1539": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        5537,
        5578
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1540": {
      "branch": 55,
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5537,
        5578
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1541": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5529,
        5632
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x620"
    },
    "1544": {
      "branch": 55,
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5529,
        5632
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1545": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5529,
        5632
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1547": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5529,
        5632
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1548": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1552": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1554": {
      "op": "SHL"
    },
    "1555": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5529,
        5632
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1556": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5529,
        5632
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1557": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5529,
        5632
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1559": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5529,
        5632
      ],
      "op": "ADD",
      "path": "0"
    },
    "1560": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5529,
        5632
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x358"
    },
    "1563": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5529,
        5632
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1564": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5529,
        5632
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1016"
    },
    "1567": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        5529,
        5632
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1568": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5529,
        5632
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1569": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5642,
        5681
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 19,
      "value": "0x62C"
    },
    "1572": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5656,
        5660
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1573": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5662,
        5664
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1574": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5666,
        5673
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1575": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5675,
        5680
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1576": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5642,
        5655
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xAF7"
    },
    "1579": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        5642,
        5681
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1580": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5642,
        5681
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1581": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5368,
        5688
      ],
      "op": "POP",
      "path": "0"
    },
    "1582": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5368,
        5688
      ],
      "op": "POP",
      "path": "0"
    },
    "1583": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5368,
        5688
      ],
      "op": "POP",
      "path": "0"
    },
    "1584": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5368,
        5688
      ],
      "op": "POP",
      "path": "0"
    },
    "1585": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "o",
      "offset": [
        5368,
        5688
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1586": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2818,
        3147
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1587": {
      "fn": "ERC721._exists",
      "offset": [
        7225,
        7229
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1589": {
      "fn": "ERC721._exists",
      "offset": [
        7248,
        7264
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1590": {
      "fn": "ERC721._exists",
      "offset": [
        7248,
        7264
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1591": {
      "fn": "ERC721._exists",
      "offset": [
        7248,
        7264
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1592": {
      "fn": "ERC721._exists",
      "offset": [
        7248,
        7255
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "1594": {
      "fn": "ERC721._exists",
      "offset": [
        7248,
        7264
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1596": {
      "fn": "ERC721._exists",
      "offset": [
        7248,
        7264
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1597": {
      "fn": "ERC721._exists",
      "offset": [
        7248,
        7264
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1599": {
      "fn": "ERC721._exists",
      "offset": [
        7248,
        7264
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1600": {
      "fn": "ERC721._exists",
      "offset": [
        7248,
        7264
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1601": {
      "fn": "ERC721._exists",
      "offset": [
        7248,
        7264
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1602": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2891,
        2904
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x60"
    },
    "1604": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2891,
        2904
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1605": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1607": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1609": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1611": {
      "op": "SHL"
    },
    "1612": {
      "op": "SUB"
    },
    "1613": {
      "fn": "ERC721._exists",
      "offset": [
        7248,
        7264
      ],
      "op": "AND",
      "path": "0"
    },
    "1614": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2916,
        2992
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 20,
      "value": "0x6B1"
    },
    "1617": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2916,
        2992
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1618": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2916,
        2992
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1620": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2916,
        2992
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1621": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1625": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1627": {
      "op": "SHL"
    },
    "1628": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2916,
        2992
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1629": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2916,
        2992
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1630": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1632": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2916,
        2992
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1634": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2916,
        2992
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1635": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2916,
        2992
      ],
      "op": "ADD",
      "path": "0"
    },
    "1636": {
      "op": "MSTORE"
    },
    "1637": {
      "op": "PUSH1",
      "value": "0x2F"
    },
    "1639": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1641": {
      "op": "DUP3"
    },
    "1642": {
      "op": "ADD"
    },
    "1643": {
      "op": "MSTORE"
    },
    "1644": {
      "op": "PUSH32",
      "value": "0x4552433732314D657461646174613A2055524920717565727920666F72206E6F"
    },
    "1677": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1679": {
      "op": "DUP3"
    },
    "1680": {
      "op": "ADD"
    },
    "1681": {
      "op": "MSTORE"
    },
    "1682": {
      "op": "PUSH15",
      "value": "0x3732BC34B9BA32B73A103A37B5B2B7"
    },
    "1698": {
      "op": "PUSH1",
      "value": "0x89"
    },
    "1700": {
      "op": "SHL"
    },
    "1701": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1703": {
      "op": "DUP3"
    },
    "1704": {
      "op": "ADD"
    },
    "1705": {
      "op": "MSTORE"
    },
    "1706": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1708": {
      "op": "ADD"
    },
    "1709": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2916,
        2992
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x358"
    },
    "1712": {
      "op": "JUMP"
    },
    "1713": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2916,
        2992
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1714": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3003,
        3024
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1716": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3027,
        3037
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6C8"
    },
    "1719": {
      "fn": "ERC721._baseURI",
      "offset": [
        3465,
        3474
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 21,
      "value": "0x40"
    },
    "1721": {
      "fn": "ERC721._baseURI",
      "offset": [
        3465,
        3474
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1722": {
      "fn": "ERC721._baseURI",
      "offset": [
        3465,
        3474
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1723": {
      "fn": "ERC721._baseURI",
      "offset": [
        3465,
        3474
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1725": {
      "fn": "ERC721._baseURI",
      "offset": [
        3465,
        3474
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1726": {
      "fn": "ERC721._baseURI",
      "offset": [
        3465,
        3474
      ],
      "op": "ADD",
      "path": "0"
    },
    "1727": {
      "fn": "ERC721._baseURI",
      "offset": [
        3465,
        3474
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1728": {
      "fn": "ERC721._baseURI",
      "offset": [
        3465,
        3474
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1729": {
      "fn": "ERC721._baseURI",
      "offset": [
        3465,
        3474
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1730": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1732": {
      "fn": "ERC721._baseURI",
      "offset": [
        3465,
        3474
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1733": {
      "fn": "ERC721._baseURI",
      "offset": [
        3465,
        3474
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1734": {
      "fn": "ERC721._baseURI",
      "offset": [
        3465,
        3474
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1735": {
      "fn": "ERC721._baseURI",
      "offset": [
        3389,
        3481
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1736": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3027,
        3037
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1737": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3003,
        3037
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1738": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3003,
        3037
      ],
      "op": "POP",
      "path": "0"
    },
    "1739": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3078,
        3079
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 22,
      "value": "0x0"
    },
    "1741": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3060,
        3067
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1742": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3054,
        3075
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1743": {
      "branch": 56,
      "fn": "ERC721.tokenURI",
      "offset": [
        3054,
        3079
      ],
      "op": "GT",
      "path": "0"
    },
    "1744": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3054,
        3140
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6E8"
    },
    "1747": {
      "branch": 56,
      "fn": "ERC721.tokenURI",
      "offset": [
        3054,
        3140
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1748": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3054,
        3140
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1750": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3054,
        3140
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1751": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3054,
        3140
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1752": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3054,
        3140
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1754": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3054,
        3140
      ],
      "op": "ADD",
      "path": "0"
    },
    "1755": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3054,
        3140
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1757": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3054,
        3140
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1758": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3054,
        3140
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1759": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3054,
        3140
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1761": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3054,
        3140
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1762": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3054,
        3140
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1763": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3054,
        3140
      ],
      "op": "POP",
      "path": "0"
    },
    "1764": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3054,
        3140
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x713"
    },
    "1767": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3054,
        3140
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1768": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3054,
        3140
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1769": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3106,
        3113
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1770": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3115,
        3133
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6F2"
    },
    "1773": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3115,
        3122
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1774": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3115,
        3131
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB2A"
    },
    "1777": {
      "fn": "ERC721.tokenURI",
      "jump": "i",
      "offset": [
        3115,
        3133
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1778": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3115,
        3133
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1779": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3089,
        3134
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1781": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3089,
        3134
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1782": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3089,
        3134
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1784": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3089,
        3134
      ],
      "op": "ADD",
      "path": "0"
    },
    "1785": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3089,
        3134
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x703"
    },
    "1788": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3089,
        3134
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1789": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3089,
        3134
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1790": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3089,
        3134
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1791": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3089,
        3134
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1067"
    },
    "1794": {
      "fn": "ERC721.tokenURI",
      "jump": "i",
      "offset": [
        3089,
        3134
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1795": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3089,
        3134
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1796": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3089,
        3134
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1798": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3089,
        3134
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1799": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3089,
        3134
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1801": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3089,
        3134
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1802": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3089,
        3134
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1803": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3089,
        3134
      ],
      "op": "SUB",
      "path": "0"
    },
    "1804": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3089,
        3134
      ],
      "op": "SUB",
      "path": "0"
    },
    "1805": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3089,
        3134
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1806": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3089,
        3134
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1807": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3089,
        3134
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1808": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3089,
        3134
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1810": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3089,
        3134
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1811": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3054,
        3140
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1812": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3047,
        3140
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "1813": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2818,
        3147
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1814": {
      "op": "POP"
    },
    "1815": {
      "op": "POP"
    },
    "1816": {
      "op": "POP"
    },
    "1817": {
      "fn": "ERC721.tokenURI",
      "jump": "o",
      "offset": [
        2818,
        3147
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1818": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4503,
        4665
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1819": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1821": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1823": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1825": {
      "op": "SHL"
    },
    "1826": {
      "op": "SUB"
    },
    "1827": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4623,
        4648
      ],
      "op": "SWAP2",
      "path": "0",
      "statement": 23
    },
    "1828": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4623,
        4648
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1829": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4623,
        4648
      ],
      "op": "AND",
      "path": "0"
    },
    "1830": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4600,
        4604
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1832": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4623,
        4648
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1833": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4623,
        4648
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1834": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4623,
        4648
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1835": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4623,
        4641
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x5"
    },
    "1837": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4623,
        4648
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1839": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4623,
        4648
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1840": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4623,
        4648
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1841": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4623,
        4648
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1842": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4623,
        4648
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1844": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4623,
        4648
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1845": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4623,
        4648
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1846": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4623,
        4648
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1847": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4623,
        4658
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "1848": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4623,
        4658
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1849": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4623,
        4658
      ],
      "op": "SWAP5",
      "path": "0"
    },
    "1850": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4623,
        4658
      ],
      "op": "AND",
      "path": "0"
    },
    "1851": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4623,
        4658
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1852": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4623,
        4658
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1853": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4623,
        4658
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1854": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4623,
        4658
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1855": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4623,
        4658
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1856": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4623,
        4658
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1857": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4623,
        4658
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1858": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4623,
        4658
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1859": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4623,
        4658
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "1861": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4623,
        4658
      ],
      "op": "AND",
      "path": "0"
    },
    "1862": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4623,
        4658
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1863": {
      "fn": "ERC721.isApprovedForAll",
      "jump": "o",
      "offset": [
        4503,
        4665
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1864": {
      "fn": "ERC721._approve",
      "offset": [
        11169,
        11340
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1865": {
      "fn": "ERC721._approve",
      "offset": [
        11243,
        11267
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 24,
      "value": "0x0"
    },
    "1867": {
      "fn": "ERC721._approve",
      "offset": [
        11243,
        11267
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1868": {
      "fn": "ERC721._approve",
      "offset": [
        11243,
        11267
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1869": {
      "fn": "ERC721._approve",
      "offset": [
        11243,
        11267
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1870": {
      "fn": "ERC721._approve",
      "offset": [
        11243,
        11258
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1872": {
      "fn": "ERC721._approve",
      "offset": [
        11243,
        11267
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1874": {
      "fn": "ERC721._approve",
      "offset": [
        11243,
        11267
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1875": {
      "fn": "ERC721._approve",
      "offset": [
        11243,
        11267
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1877": {
      "fn": "ERC721._approve",
      "offset": [
        11243,
        11267
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1878": {
      "fn": "ERC721._approve",
      "offset": [
        11243,
        11267
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1879": {
      "fn": "ERC721._approve",
      "offset": [
        11243,
        11272
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1880": {
      "fn": "ERC721._approve",
      "offset": [
        11243,
        11272
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1881": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1883": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1885": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1887": {
      "op": "SHL"
    },
    "1888": {
      "op": "SUB"
    },
    "1889": {
      "op": "NOT"
    },
    "1890": {
      "fn": "ERC721._approve",
      "offset": [
        11243,
        11272
      ],
      "op": "AND",
      "path": "0"
    },
    "1891": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1893": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1895": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1897": {
      "op": "SHL"
    },
    "1898": {
      "op": "SUB"
    },
    "1899": {
      "fn": "ERC721._approve",
      "offset": [
        11243,
        11272
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1900": {
      "fn": "ERC721._approve",
      "offset": [
        11243,
        11272
      ],
      "op": "AND",
      "path": "0"
    },
    "1901": {
      "fn": "ERC721._approve",
      "offset": [
        11243,
        11272
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1902": {
      "fn": "ERC721._approve",
      "offset": [
        11243,
        11272
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1903": {
      "fn": "ERC721._approve",
      "offset": [
        11243,
        11272
      ],
      "op": "OR",
      "path": "0"
    },
    "1904": {
      "fn": "ERC721._approve",
      "offset": [
        11243,
        11272
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1905": {
      "fn": "ERC721._approve",
      "offset": [
        11243,
        11272
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1906": {
      "fn": "ERC721._approve",
      "offset": [
        11243,
        11272
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "1907": {
      "fn": "ERC721._approve",
      "offset": [
        11243,
        11267
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1908": {
      "fn": "ERC721._approve",
      "offset": [
        11243,
        11267
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1909": {
      "fn": "ERC721._approve",
      "offset": [
        11296,
        11319
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 25,
      "value": "0x77D"
    },
    "1912": {
      "fn": "ERC721._approve",
      "offset": [
        11243,
        11267
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1913": {
      "fn": "ERC721._approve",
      "offset": [
        11296,
        11310
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4DE"
    },
    "1916": {
      "fn": "ERC721._approve",
      "jump": "i",
      "offset": [
        11296,
        11319
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1917": {
      "fn": "ERC721._approve",
      "offset": [
        11296,
        11319
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1918": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1920": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1922": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1924": {
      "op": "SHL"
    },
    "1925": {
      "op": "SUB"
    },
    "1926": {
      "fn": "ERC721._approve",
      "offset": [
        11287,
        11333
      ],
      "op": "AND",
      "path": "0"
    },
    "1927": {
      "fn": "ERC721._approve",
      "offset": [
        11287,
        11333
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
    },
    "1960": {
      "fn": "ERC721._approve",
      "offset": [
        11287,
        11333
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1962": {
      "fn": "ERC721._approve",
      "offset": [
        11287,
        11333
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1963": {
      "fn": "ERC721._approve",
      "offset": [
        11287,
        11333
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1965": {
      "fn": "ERC721._approve",
      "offset": [
        11287,
        11333
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1966": {
      "fn": "ERC721._approve",
      "offset": [
        11287,
        11333
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1967": {
      "fn": "ERC721._approve",
      "offset": [
        11287,
        11333
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1968": {
      "fn": "ERC721._approve",
      "offset": [
        11287,
        11333
      ],
      "op": "SUB",
      "path": "0"
    },
    "1969": {
      "fn": "ERC721._approve",
      "offset": [
        11287,
        11333
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1970": {
      "fn": "ERC721._approve",
      "offset": [
        11287,
        11333
      ],
      "op": "LOG4",
      "path": "0"
    },
    "1971": {
      "fn": "ERC721._approve",
      "offset": [
        11169,
        11340
      ],
      "op": "POP",
      "path": "0"
    },
    "1972": {
      "fn": "ERC721._approve",
      "offset": [
        11169,
        11340
      ],
      "op": "POP",
      "path": "0"
    },
    "1973": {
      "fn": "ERC721._approve",
      "jump": "o",
      "offset": [
        11169,
        11340
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1974": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7443,
        7787
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1975": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7536,
        7540
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1977": {
      "fn": "ERC721._exists",
      "offset": [
        7248,
        7264
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1978": {
      "fn": "ERC721._exists",
      "offset": [
        7248,
        7264
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1979": {
      "fn": "ERC721._exists",
      "offset": [
        7248,
        7264
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1980": {
      "fn": "ERC721._exists",
      "offset": [
        7248,
        7255
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "1982": {
      "fn": "ERC721._exists",
      "offset": [
        7248,
        7264
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1984": {
      "fn": "ERC721._exists",
      "offset": [
        7248,
        7264
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1985": {
      "fn": "ERC721._exists",
      "offset": [
        7248,
        7264
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1987": {
      "fn": "ERC721._exists",
      "offset": [
        7248,
        7264
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1988": {
      "fn": "ERC721._exists",
      "offset": [
        7248,
        7264
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1989": {
      "fn": "ERC721._exists",
      "offset": [
        7248,
        7264
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1990": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1992": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1994": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1996": {
      "op": "SHL"
    },
    "1997": {
      "op": "SUB"
    },
    "1998": {
      "fn": "ERC721._exists",
      "offset": [
        7248,
        7264
      ],
      "op": "AND",
      "path": "0"
    },
    "1999": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7552,
        7625
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 26,
      "value": "0x82F"
    },
    "2002": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7552,
        7625
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2003": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7552,
        7625
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2005": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7552,
        7625
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2006": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2010": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2012": {
      "op": "SHL"
    },
    "2013": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7552,
        7625
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2014": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7552,
        7625
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2015": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2017": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7552,
        7625
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2019": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7552,
        7625
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2020": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7552,
        7625
      ],
      "op": "ADD",
      "path": "0"
    },
    "2021": {
      "op": "MSTORE"
    },
    "2022": {
      "op": "PUSH1",
      "value": "0x2C"
    },
    "2024": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2026": {
      "op": "DUP3"
    },
    "2027": {
      "op": "ADD"
    },
    "2028": {
      "op": "MSTORE"
    },
    "2029": {
      "op": "PUSH32",
      "value": "0x4552433732313A206F70657261746F7220717565727920666F72206E6F6E6578"
    },
    "2062": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2064": {
      "op": "DUP3"
    },
    "2065": {
      "op": "ADD"
    },
    "2066": {
      "op": "MSTORE"
    },
    "2067": {
      "op": "PUSH12",
      "value": "0x34B9BA32B73A103A37B5B2B7"
    },
    "2080": {
      "op": "PUSH1",
      "value": "0xA1"
    },
    "2082": {
      "op": "SHL"
    },
    "2083": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2085": {
      "op": "DUP3"
    },
    "2086": {
      "op": "ADD"
    },
    "2087": {
      "op": "MSTORE"
    },
    "2088": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "2090": {
      "op": "ADD"
    },
    "2091": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7552,
        7625
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x358"
    },
    "2094": {
      "op": "JUMP"
    },
    "2095": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7552,
        7625
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2096": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7635,
        7648
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2098": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7651,
        7674
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x83A"
    },
    "2101": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7666,
        7673
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2102": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7651,
        7665
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4DE"
    },
    "2105": {
      "fn": "ERC721._isApprovedOrOwner",
      "jump": "i",
      "offset": [
        7651,
        7674
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2106": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7651,
        7674
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2107": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7635,
        7674
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2108": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7635,
        7674
      ],
      "op": "POP",
      "path": "0"
    },
    "2109": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7703,
        7708
      ],
      "op": "DUP1",
      "path": "0",
      "statement": 27
    },
    "2110": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2112": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2114": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2116": {
      "op": "SHL"
    },
    "2117": {
      "op": "SUB"
    },
    "2118": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7692,
        7708
      ],
      "op": "AND",
      "path": "0"
    },
    "2119": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7692,
        7699
      ],
      "op": "DUP5",
      "path": "0"
    },
    "2120": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2122": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2124": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2126": {
      "op": "SHL"
    },
    "2127": {
      "op": "SUB"
    },
    "2128": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7692,
        7708
      ],
      "op": "AND",
      "path": "0"
    },
    "2129": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7692,
        7708
      ],
      "op": "EQ",
      "path": "0"
    },
    "2130": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7692,
        7744
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2131": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7692,
        7744
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x861"
    },
    "2134": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7692,
        7744
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2135": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7692,
        7744
      ],
      "op": "POP",
      "path": "0"
    },
    "2136": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7712,
        7744
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x861"
    },
    "2139": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7729,
        7734
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2140": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7736,
        7743
      ],
      "op": "DUP6",
      "path": "0"
    },
    "2141": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7712,
        7728
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x71A"
    },
    "2144": {
      "fn": "ERC721._isApprovedOrOwner",
      "jump": "i",
      "offset": [
        7712,
        7744
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2145": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7712,
        7744
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2146": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7692,
        7779
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2147": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7692,
        7779
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x885"
    },
    "2150": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7692,
        7779
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2151": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7692,
        7779
      ],
      "op": "POP",
      "path": "0"
    },
    "2152": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7772,
        7779
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2153": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2155": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2157": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2159": {
      "op": "SHL"
    },
    "2160": {
      "op": "SUB"
    },
    "2161": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7748,
        7779
      ],
      "op": "AND",
      "path": "0"
    },
    "2162": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7748,
        7768
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x87A"
    },
    "2165": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7760,
        7767
      ],
      "op": "DUP5",
      "path": "0"
    },
    "2166": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7748,
        7759
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2E3"
    },
    "2169": {
      "fn": "ERC721._isApprovedOrOwner",
      "jump": "i",
      "offset": [
        7748,
        7768
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2170": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7748,
        7768
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2171": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2173": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2175": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2177": {
      "op": "SHL"
    },
    "2178": {
      "op": "SUB"
    },
    "2179": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7748,
        7779
      ],
      "op": "AND",
      "path": "0"
    },
    "2180": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7748,
        7779
      ],
      "op": "EQ",
      "path": "0"
    },
    "2181": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7692,
        7779
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2182": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7684,
        7780
      ],
      "op": "SWAP5",
      "path": "0"
    },
    "2183": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7443,
        7787
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "2184": {
      "op": "POP"
    },
    "2185": {
      "op": "POP"
    },
    "2186": {
      "op": "POP"
    },
    "2187": {
      "op": "POP"
    },
    "2188": {
      "fn": "ERC721._isApprovedOrOwner",
      "jump": "o",
      "offset": [
        7443,
        7787
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2189": {
      "fn": "ERC721._transfer",
      "offset": [
        10453,
        11058
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2190": {
      "fn": "ERC721._transfer",
      "offset": [
        10607,
        10611
      ],
      "op": "DUP3",
      "path": "0",
      "statement": 28
    },
    "2191": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2193": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2195": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2197": {
      "op": "SHL"
    },
    "2198": {
      "op": "SUB"
    },
    "2199": {
      "fn": "ERC721._transfer",
      "offset": [
        10580,
        10611
      ],
      "op": "AND",
      "path": "0"
    },
    "2200": {
      "fn": "ERC721._transfer",
      "offset": [
        10580,
        10603
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x8A0"
    },
    "2203": {
      "fn": "ERC721._transfer",
      "offset": [
        10595,
        10602
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2204": {
      "fn": "ERC721._transfer",
      "offset": [
        10580,
        10594
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4DE"
    },
    "2207": {
      "fn": "ERC721._transfer",
      "jump": "i",
      "offset": [
        10580,
        10603
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2208": {
      "fn": "ERC721._transfer",
      "offset": [
        10580,
        10603
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2209": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2211": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2213": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2215": {
      "op": "SHL"
    },
    "2216": {
      "op": "SUB"
    },
    "2217": {
      "fn": "ERC721._transfer",
      "offset": [
        10580,
        10611
      ],
      "op": "AND",
      "path": "0"
    },
    "2218": {
      "branch": 57,
      "fn": "ERC721._transfer",
      "offset": [
        10580,
        10611
      ],
      "op": "EQ",
      "path": "0"
    },
    "2219": {
      "fn": "ERC721._transfer",
      "offset": [
        10572,
        10653
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x904"
    },
    "2222": {
      "branch": 57,
      "fn": "ERC721._transfer",
      "offset": [
        10572,
        10653
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2223": {
      "fn": "ERC721._transfer",
      "offset": [
        10572,
        10653
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2225": {
      "fn": "ERC721._transfer",
      "offset": [
        10572,
        10653
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2226": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2230": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2232": {
      "op": "SHL"
    },
    "2233": {
      "fn": "ERC721._transfer",
      "offset": [
        10572,
        10653
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2234": {
      "fn": "ERC721._transfer",
      "offset": [
        10572,
        10653
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2235": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2237": {
      "fn": "ERC721._transfer",
      "offset": [
        10572,
        10653
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2239": {
      "fn": "ERC721._transfer",
      "offset": [
        10572,
        10653
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2240": {
      "fn": "ERC721._transfer",
      "offset": [
        10572,
        10653
      ],
      "op": "ADD",
      "path": "0"
    },
    "2241": {
      "op": "MSTORE"
    },
    "2242": {
      "op": "PUSH1",
      "value": "0x25"
    },
    "2244": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2246": {
      "op": "DUP3"
    },
    "2247": {
      "op": "ADD"
    },
    "2248": {
      "op": "MSTORE"
    },
    "2249": {
      "op": "PUSH32",
      "value": "0x4552433732313A207472616E736665722066726F6D20696E636F727265637420"
    },
    "2282": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2284": {
      "op": "DUP3"
    },
    "2285": {
      "op": "ADD"
    },
    "2286": {
      "op": "MSTORE"
    },
    "2287": {
      "op": "PUSH5",
      "value": "0x37BBB732B9"
    },
    "2293": {
      "op": "PUSH1",
      "value": "0xD9"
    },
    "2295": {
      "op": "SHL"
    },
    "2296": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2298": {
      "op": "DUP3"
    },
    "2299": {
      "op": "ADD"
    },
    "2300": {
      "op": "MSTORE"
    },
    "2301": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "2303": {
      "op": "ADD"
    },
    "2304": {
      "fn": "ERC721._transfer",
      "offset": [
        10572,
        10653
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x358"
    },
    "2307": {
      "op": "JUMP"
    },
    "2308": {
      "fn": "ERC721._transfer",
      "offset": [
        10572,
        10653
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2309": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2311": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2313": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2315": {
      "op": "SHL"
    },
    "2316": {
      "op": "SUB"
    },
    "2317": {
      "fn": "ERC721._transfer",
      "offset": [
        10671,
        10687
      ],
      "op": "DUP3",
      "path": "0",
      "statement": 29
    },
    "2318": {
      "branch": 58,
      "fn": "ERC721._transfer",
      "offset": [
        10671,
        10687
      ],
      "op": "AND",
      "path": "0"
    },
    "2319": {
      "fn": "ERC721._transfer",
      "offset": [
        10663,
        10728
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x966"
    },
    "2322": {
      "branch": 58,
      "fn": "ERC721._transfer",
      "offset": [
        10663,
        10728
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2323": {
      "fn": "ERC721._transfer",
      "offset": [
        10663,
        10728
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2325": {
      "fn": "ERC721._transfer",
      "offset": [
        10663,
        10728
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2326": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2330": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2332": {
      "op": "SHL"
    },
    "2333": {
      "fn": "ERC721._transfer",
      "offset": [
        10663,
        10728
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2334": {
      "fn": "ERC721._transfer",
      "offset": [
        10663,
        10728
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2335": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2337": {
      "fn": "ERC721._transfer",
      "offset": [
        10663,
        10728
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2339": {
      "fn": "ERC721._transfer",
      "offset": [
        10663,
        10728
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2340": {
      "fn": "ERC721._transfer",
      "offset": [
        10663,
        10728
      ],
      "op": "ADD",
      "path": "0"
    },
    "2341": {
      "op": "MSTORE"
    },
    "2342": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2344": {
      "op": "DUP1"
    },
    "2345": {
      "op": "DUP3"
    },
    "2346": {
      "op": "ADD"
    },
    "2347": {
      "op": "MSTORE"
    },
    "2348": {
      "op": "PUSH32",
      "value": "0x4552433732313A207472616E7366657220746F20746865207A65726F20616464"
    },
    "2381": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2383": {
      "op": "DUP3"
    },
    "2384": {
      "op": "ADD"
    },
    "2385": {
      "op": "MSTORE"
    },
    "2386": {
      "op": "PUSH4",
      "value": "0x72657373"
    },
    "2391": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2393": {
      "op": "SHL"
    },
    "2394": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2396": {
      "op": "DUP3"
    },
    "2397": {
      "op": "ADD"
    },
    "2398": {
      "op": "MSTORE"
    },
    "2399": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "2401": {
      "op": "ADD"
    },
    "2402": {
      "fn": "ERC721._transfer",
      "offset": [
        10663,
        10728
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x358"
    },
    "2405": {
      "op": "JUMP"
    },
    "2406": {
      "fn": "ERC721._transfer",
      "offset": [
        10663,
        10728
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2407": {
      "fn": "ERC721._transfer",
      "offset": [
        10840,
        10869
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 30,
      "value": "0x971"
    },
    "2410": {
      "fn": "ERC721._transfer",
      "offset": [
        10857,
        10858
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2412": {
      "fn": "ERC721._transfer",
      "offset": [
        10861,
        10868
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2413": {
      "fn": "ERC721._transfer",
      "offset": [
        10840,
        10848
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x748"
    },
    "2416": {
      "fn": "ERC721._transfer",
      "jump": "i",
      "offset": [
        10840,
        10869
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2417": {
      "fn": "ERC721._transfer",
      "offset": [
        10840,
        10869
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2418": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2420": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2422": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2424": {
      "op": "SHL"
    },
    "2425": {
      "op": "SUB"
    },
    "2426": {
      "fn": "ERC721._transfer",
      "offset": [
        10880,
        10895
      ],
      "op": "DUP4",
      "path": "0",
      "statement": 31
    },
    "2427": {
      "fn": "ERC721._transfer",
      "offset": [
        10880,
        10895
      ],
      "op": "AND",
      "path": "0"
    },
    "2428": {
      "fn": "ERC721._transfer",
      "offset": [
        10880,
        10895
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2430": {
      "fn": "ERC721._transfer",
      "offset": [
        10880,
        10895
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2431": {
      "fn": "ERC721._transfer",
      "offset": [
        10880,
        10895
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2432": {
      "fn": "ERC721._transfer",
      "offset": [
        10880,
        10895
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2433": {
      "fn": "ERC721._transfer",
      "offset": [
        10880,
        10889
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "2435": {
      "fn": "ERC721._transfer",
      "offset": [
        10880,
        10895
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2437": {
      "fn": "ERC721._transfer",
      "offset": [
        10880,
        10895
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2438": {
      "fn": "ERC721._transfer",
      "offset": [
        10880,
        10895
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2440": {
      "fn": "ERC721._transfer",
      "offset": [
        10880,
        10895
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2441": {
      "fn": "ERC721._transfer",
      "offset": [
        10880,
        10895
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "2442": {
      "fn": "ERC721._transfer",
      "offset": [
        10880,
        10900
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2443": {
      "fn": "ERC721._transfer",
      "offset": [
        10880,
        10900
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2444": {
      "fn": "ERC721._transfer",
      "offset": [
        10899,
        10900
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "2446": {
      "fn": "ERC721._transfer",
      "offset": [
        10899,
        10900
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "2447": {
      "fn": "ERC721._transfer",
      "offset": [
        10880,
        10895
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2448": {
      "fn": "ERC721._transfer",
      "offset": [
        10880,
        10900
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x99A"
    },
    "2451": {
      "fn": "ERC721._transfer",
      "offset": [
        10880,
        10900
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2452": {
      "fn": "ERC721._transfer",
      "offset": [
        10899,
        10900
      ],
      "op": "DUP5",
      "path": "0"
    },
    "2453": {
      "fn": "ERC721._transfer",
      "offset": [
        10899,
        10900
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2454": {
      "fn": "ERC721._transfer",
      "offset": [
        10880,
        10900
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x10AC"
    },
    "2457": {
      "fn": "ERC721._transfer",
      "jump": "i",
      "offset": [
        10880,
        10900
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2458": {
      "fn": "ERC721._transfer",
      "offset": [
        10880,
        10900
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2459": {
      "fn": "ERC721._transfer",
      "offset": [
        10880,
        10900
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2460": {
      "fn": "ERC721._transfer",
      "offset": [
        10880,
        10900
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2461": {
      "fn": "ERC721._transfer",
      "offset": [
        10880,
        10900
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "2462": {
      "op": "POP"
    },
    "2463": {
      "op": "POP"
    },
    "2464": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2466": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2468": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2470": {
      "op": "SHL"
    },
    "2471": {
      "op": "SUB"
    },
    "2472": {
      "fn": "ERC721._transfer",
      "offset": [
        10910,
        10923
      ],
      "op": "DUP3",
      "path": "0",
      "statement": 32
    },
    "2473": {
      "fn": "ERC721._transfer",
      "offset": [
        10910,
        10923
      ],
      "op": "AND",
      "path": "0"
    },
    "2474": {
      "fn": "ERC721._transfer",
      "offset": [
        10910,
        10923
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2476": {
      "fn": "ERC721._transfer",
      "offset": [
        10910,
        10923
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2477": {
      "fn": "ERC721._transfer",
      "offset": [
        10910,
        10923
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2478": {
      "fn": "ERC721._transfer",
      "offset": [
        10910,
        10923
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2479": {
      "fn": "ERC721._transfer",
      "offset": [
        10910,
        10919
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "2481": {
      "fn": "ERC721._transfer",
      "offset": [
        10910,
        10923
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2483": {
      "fn": "ERC721._transfer",
      "offset": [
        10910,
        10923
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2484": {
      "fn": "ERC721._transfer",
      "offset": [
        10910,
        10923
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2486": {
      "fn": "ERC721._transfer",
      "offset": [
        10910,
        10923
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2487": {
      "fn": "ERC721._transfer",
      "offset": [
        10910,
        10923
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "2488": {
      "fn": "ERC721._transfer",
      "offset": [
        10910,
        10928
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2489": {
      "fn": "ERC721._transfer",
      "offset": [
        10910,
        10928
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2490": {
      "fn": "ERC721._transfer",
      "offset": [
        10927,
        10928
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "2492": {
      "fn": "ERC721._transfer",
      "offset": [
        10927,
        10928
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "2493": {
      "fn": "ERC721._transfer",
      "offset": [
        10910,
        10923
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2494": {
      "fn": "ERC721._transfer",
      "offset": [
        10910,
        10928
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x9C8"
    },
    "2497": {
      "fn": "ERC721._transfer",
      "offset": [
        10910,
        10928
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2498": {
      "fn": "ERC721._transfer",
      "offset": [
        10927,
        10928
      ],
      "op": "DUP5",
      "path": "0"
    },
    "2499": {
      "fn": "ERC721._transfer",
      "offset": [
        10927,
        10928
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2500": {
      "fn": "ERC721._transfer",
      "offset": [
        10910,
        10928
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x10BF"
    },
    "2503": {
      "fn": "ERC721._transfer",
      "jump": "i",
      "offset": [
        10910,
        10928
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2504": {
      "fn": "ERC721._transfer",
      "offset": [
        10910,
        10928
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2505": {
      "fn": "ERC721._transfer",
      "offset": [
        10910,
        10928
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2506": {
      "fn": "ERC721._transfer",
      "offset": [
        10910,
        10928
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2507": {
      "fn": "ERC721._transfer",
      "offset": [
        10910,
        10928
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "2508": {
      "op": "POP"
    },
    "2509": {
      "op": "POP"
    },
    "2510": {
      "fn": "ERC721._transfer",
      "offset": [
        10938,
        10954
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 33,
      "value": "0x0"
    },
    "2512": {
      "fn": "ERC721._transfer",
      "offset": [
        10938,
        10954
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2513": {
      "fn": "ERC721._transfer",
      "offset": [
        10938,
        10954
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2514": {
      "fn": "ERC721._transfer",
      "offset": [
        10938,
        10954
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2515": {
      "fn": "ERC721._transfer",
      "offset": [
        10938,
        10945
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "2517": {
      "fn": "ERC721._transfer",
      "offset": [
        10938,
        10954
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2519": {
      "fn": "ERC721._transfer",
      "offset": [
        10938,
        10954
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2520": {
      "fn": "ERC721._transfer",
      "offset": [
        10938,
        10954
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2522": {
      "fn": "ERC721._transfer",
      "offset": [
        10938,
        10954
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2523": {
      "fn": "ERC721._transfer",
      "offset": [
        10938,
        10954
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2524": {
      "fn": "ERC721._transfer",
      "offset": [
        10938,
        10954
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "2525": {
      "fn": "ERC721._transfer",
      "offset": [
        10938,
        10959
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2526": {
      "fn": "ERC721._transfer",
      "offset": [
        10938,
        10959
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2527": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2529": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2531": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2533": {
      "op": "SHL"
    },
    "2534": {
      "op": "SUB"
    },
    "2535": {
      "op": "NOT"
    },
    "2536": {
      "fn": "ERC721._transfer",
      "offset": [
        10938,
        10959
      ],
      "op": "AND",
      "path": "0"
    },
    "2537": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2539": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2541": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2543": {
      "op": "SHL"
    },
    "2544": {
      "op": "SUB"
    },
    "2545": {
      "fn": "ERC721._transfer",
      "offset": [
        10938,
        10959
      ],
      "op": "DUP7",
      "path": "0"
    },
    "2546": {
      "fn": "ERC721._transfer",
      "offset": [
        10938,
        10959
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2547": {
      "fn": "ERC721._transfer",
      "offset": [
        10938,
        10959
      ],
      "op": "AND",
      "path": "0"
    },
    "2548": {
      "fn": "ERC721._transfer",
      "offset": [
        10938,
        10959
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2549": {
      "fn": "ERC721._transfer",
      "offset": [
        10938,
        10959
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2550": {
      "fn": "ERC721._transfer",
      "offset": [
        10938,
        10959
      ],
      "op": "OR",
      "path": "0"
    },
    "2551": {
      "fn": "ERC721._transfer",
      "offset": [
        10938,
        10959
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2552": {
      "fn": "ERC721._transfer",
      "offset": [
        10938,
        10959
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "2553": {
      "fn": "ERC721._transfer",
      "offset": [
        10938,
        10959
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "2554": {
      "fn": "ERC721._transfer",
      "offset": [
        10975,
        11002
      ],
      "op": "SWAP2",
      "path": "0",
      "statement": 34
    },
    "2555": {
      "fn": "ERC721._transfer",
      "offset": [
        10975,
        11002
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2556": {
      "fn": "ERC721._transfer",
      "offset": [
        10938,
        10954
      ],
      "op": "DUP5",
      "path": "0"
    },
    "2557": {
      "fn": "ERC721._transfer",
      "offset": [
        10938,
        10954
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "2558": {
      "fn": "ERC721._transfer",
      "offset": [
        10975,
        11002
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2559": {
      "fn": "ERC721._transfer",
      "offset": [
        10975,
        11002
      ],
      "op": "DUP8",
      "path": "0"
    },
    "2560": {
      "fn": "ERC721._transfer",
      "offset": [
        10975,
        11002
      ],
      "op": "AND",
      "path": "0"
    },
    "2561": {
      "fn": "ERC721._transfer",
      "offset": [
        10975,
        11002
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2562": {
      "fn": "ERC721._transfer",
      "offset": [
        10975,
        11002
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
    },
    "2595": {
      "fn": "ERC721._transfer",
      "offset": [
        10975,
        11002
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2596": {
      "fn": "ERC721._transfer",
      "offset": [
        10975,
        11002
      ],
      "op": "LOG4",
      "path": "0"
    },
    "2597": {
      "fn": "ERC721.approve",
      "offset": [
        3608,
        3939
      ],
      "op": "POP",
      "path": "0"
    },
    "2598": {
      "fn": "ERC721.approve",
      "offset": [
        3538,
        3939
      ],
      "op": "POP",
      "path": "0"
    },
    "2599": {
      "fn": "ERC721.approve",
      "offset": [
        3538,
        3939
      ],
      "op": "POP",
      "path": "0"
    },
    "2600": {
      "fn": "ERC721.approve",
      "jump": "o",
      "offset": [
        3538,
        3939
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2601": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11475,
        11782
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2602": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11625,
        11633
      ],
      "op": "DUP2",
      "path": "0",
      "statement": 35
    },
    "2603": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2605": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2607": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2609": {
      "op": "SHL"
    },
    "2610": {
      "op": "SUB"
    },
    "2611": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11616,
        11633
      ],
      "op": "AND",
      "path": "0"
    },
    "2612": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11616,
        11621
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2613": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2615": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2617": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2619": {
      "op": "SHL"
    },
    "2620": {
      "op": "SUB"
    },
    "2621": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11616,
        11633
      ],
      "op": "AND",
      "path": "0"
    },
    "2622": {
      "branch": 59,
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11616,
        11633
      ],
      "op": "SUB",
      "path": "0"
    },
    "2623": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11608,
        11663
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA8A"
    },
    "2626": {
      "branch": 59,
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11608,
        11663
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2627": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11608,
        11663
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2629": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11608,
        11663
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2630": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2634": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2636": {
      "op": "SHL"
    },
    "2637": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11608,
        11663
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2638": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11608,
        11663
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2639": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2641": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11608,
        11663
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2643": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11608,
        11663
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2644": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11608,
        11663
      ],
      "op": "ADD",
      "path": "0"
    },
    "2645": {
      "op": "MSTORE"
    },
    "2646": {
      "op": "PUSH1",
      "value": "0x19"
    },
    "2648": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2650": {
      "op": "DUP3"
    },
    "2651": {
      "op": "ADD"
    },
    "2652": {
      "op": "MSTORE"
    },
    "2653": {
      "op": "PUSH32",
      "value": "0x4552433732313A20617070726F766520746F2063616C6C657200000000000000"
    },
    "2686": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2688": {
      "op": "DUP3"
    },
    "2689": {
      "op": "ADD"
    },
    "2690": {
      "op": "MSTORE"
    },
    "2691": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2693": {
      "op": "ADD"
    },
    "2694": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11608,
        11663
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x358"
    },
    "2697": {
      "op": "JUMP"
    },
    "2698": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11608,
        11663
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2699": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2701": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2703": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2705": {
      "op": "SHL"
    },
    "2706": {
      "op": "SUB"
    },
    "2707": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11673,
        11698
      ],
      "op": "DUP4",
      "path": "0",
      "statement": 36
    },
    "2708": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11673,
        11698
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2709": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11673,
        11698
      ],
      "op": "AND",
      "path": "0"
    },
    "2710": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11673,
        11698
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2712": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11673,
        11698
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2713": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11673,
        11698
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2714": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11673,
        11698
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2715": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11673,
        11691
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x5"
    },
    "2717": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11673,
        11698
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2719": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11673,
        11698
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2720": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11673,
        11698
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2721": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11673,
        11698
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2722": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11673,
        11698
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2724": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11673,
        11698
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2725": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11673,
        11698
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2726": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11673,
        11698
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "2727": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11673,
        11708
      ],
      "op": "SWAP5",
      "path": "0"
    },
    "2728": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11673,
        11708
      ],
      "op": "DUP8",
      "path": "0"
    },
    "2729": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11673,
        11708
      ],
      "op": "AND",
      "path": "0"
    },
    "2730": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11673,
        11708
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2731": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11673,
        11708
      ],
      "op": "DUP5",
      "path": "0"
    },
    "2732": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11673,
        11708
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2733": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11673,
        11708
      ],
      "op": "SWAP5",
      "path": "0"
    },
    "2734": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11673,
        11708
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2735": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11673,
        11708
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2736": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11673,
        11708
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2737": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11673,
        11708
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2738": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11673,
        11708
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2739": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11673,
        11708
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "2740": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11673,
        11719
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2741": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11673,
        11719
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2742": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "2744": {
      "op": "NOT"
    },
    "2745": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11673,
        11719
      ],
      "op": "AND",
      "path": "0"
    },
    "2746": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11673,
        11719
      ],
      "op": "DUP7",
      "path": "0"
    },
    "2747": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11673,
        11719
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2748": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11673,
        11719
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2749": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11673,
        11719
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2750": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11673,
        11719
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2751": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11673,
        11719
      ],
      "op": "OR",
      "path": "0"
    },
    "2752": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11673,
        11719
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2753": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11673,
        11719
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2754": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11673,
        11719
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "2755": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11734,
        11775
      ],
      "op": "SWAP2",
      "path": "0",
      "statement": 37
    },
    "2756": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11734,
        11775
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2757": {
      "op": "SWAP2"
    },
    "2758": {
      "op": "DUP3"
    },
    "2759": {
      "op": "MSTORE"
    },
    "2760": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11734,
        11775
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31"
    },
    "2793": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11734,
        11775
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2794": {
      "op": "ADD"
    },
    "2795": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11734,
        11775
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2797": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11734,
        11775
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2798": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11734,
        11775
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2799": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11734,
        11775
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2800": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11734,
        11775
      ],
      "op": "SUB",
      "path": "0"
    },
    "2801": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11734,
        11775
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2802": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11734,
        11775
      ],
      "op": "LOG3",
      "path": "0"
    },
    "2803": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11475,
        11782
      ],
      "op": "POP",
      "path": "0"
    },
    "2804": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11475,
        11782
      ],
      "op": "POP",
      "path": "0"
    },
    "2805": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11475,
        11782
      ],
      "op": "POP",
      "path": "0"
    },
    "2806": {
      "fn": "ERC721._setApprovalForAll",
      "jump": "o",
      "offset": [
        11475,
        11782
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2807": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6550,
        6857
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2808": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6701,
        6729
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 38,
      "value": "0xB02"
    },
    "2811": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6711,
        6715
      ],
      "op": "DUP5",
      "path": "0"
    },
    "2812": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6717,
        6719
      ],
      "op": "DUP5",
      "path": "0"
    },
    "2813": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6721,
        6728
      ],
      "op": "DUP5",
      "path": "0"
    },
    "2814": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6701,
        6710
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x88D"
    },
    "2817": {
      "fn": "ERC721._safeTransfer",
      "jump": "i",
      "offset": [
        6701,
        6729
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2818": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6701,
        6729
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2819": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6747,
        6795
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 39,
      "value": "0xB0E"
    },
    "2822": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6770,
        6774
      ],
      "op": "DUP5",
      "path": "0"
    },
    "2823": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6776,
        6778
      ],
      "op": "DUP5",
      "path": "0"
    },
    "2824": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6780,
        6787
      ],
      "op": "DUP5",
      "path": "0"
    },
    "2825": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6789,
        6794
      ],
      "op": "DUP5",
      "path": "0"
    },
    "2826": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6747,
        6769
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC2B"
    },
    "2829": {
      "fn": "ERC721._safeTransfer",
      "jump": "i",
      "offset": [
        6747,
        6795
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2830": {
      "branch": 60,
      "fn": "ERC721._safeTransfer",
      "offset": [
        6747,
        6795
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2831": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6739,
        6850
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x62C"
    },
    "2834": {
      "branch": 60,
      "fn": "ERC721._safeTransfer",
      "offset": [
        6739,
        6850
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2835": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6739,
        6850
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2837": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6739,
        6850
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2838": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2842": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2844": {
      "op": "SHL"
    },
    "2845": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6739,
        6850
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2846": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6739,
        6850
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2847": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6739,
        6850
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2849": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6739,
        6850
      ],
      "op": "ADD",
      "path": "0"
    },
    "2850": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6739,
        6850
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x358"
    },
    "2853": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6739,
        6850
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2854": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6739,
        6850
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x10D2"
    },
    "2857": {
      "fn": "ERC721._safeTransfer",
      "jump": "i",
      "offset": [
        6739,
        6850
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2858": {
      "fn": "Strings.toString",
      "offset": [
        328,
        1031
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "2859": {
      "fn": "Strings.toString",
      "offset": [
        384,
        397
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x60"
    },
    "2861": {
      "fn": "Strings.toString",
      "offset": [
        601,
        606
      ],
      "op": "DUP2",
      "path": "8"
    },
    "2862": {
      "fn": "Strings.toString",
      "offset": [
        610,
        611
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "2864": {
      "branch": 62,
      "fn": "Strings.toString",
      "offset": [
        601,
        611
      ],
      "op": "SUB",
      "path": "8"
    },
    "2865": {
      "fn": "Strings.toString",
      "offset": [
        597,
        648
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xB51"
    },
    "2868": {
      "branch": 62,
      "fn": "Strings.toString",
      "offset": [
        597,
        648
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "2869": {
      "op": "POP"
    },
    "2870": {
      "op": "POP"
    },
    "2871": {
      "fn": "Strings.toString",
      "offset": [
        627,
        637
      ],
      "op": "PUSH1",
      "path": "8",
      "statement": 40,
      "value": "0x40"
    },
    "2873": {
      "fn": "Strings.toString",
      "offset": [
        627,
        637
      ],
      "op": "DUP1",
      "path": "8"
    },
    "2874": {
      "fn": "Strings.toString",
      "offset": [
        627,
        637
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "2875": {
      "fn": "Strings.toString",
      "offset": [
        627,
        637
      ],
      "op": "DUP1",
      "path": "8"
    },
    "2876": {
      "fn": "Strings.toString",
      "offset": [
        627,
        637
      ],
      "op": "DUP3",
      "path": "8"
    },
    "2877": {
      "fn": "Strings.toString",
      "offset": [
        627,
        637
      ],
      "op": "ADD",
      "path": "8"
    },
    "2878": {
      "fn": "Strings.toString",
      "offset": [
        627,
        637
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "2879": {
      "fn": "Strings.toString",
      "offset": [
        627,
        637
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "2880": {
      "fn": "Strings.toString",
      "offset": [
        627,
        637
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "2881": {
      "fn": "Strings.toString",
      "offset": [
        627,
        637
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x1"
    },
    "2883": {
      "fn": "Strings.toString",
      "offset": [
        627,
        637
      ],
      "op": "DUP2",
      "path": "8"
    },
    "2884": {
      "fn": "Strings.toString",
      "offset": [
        627,
        637
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "2885": {
      "op": "PUSH1",
      "value": "0x3"
    },
    "2887": {
      "op": "PUSH1",
      "value": "0xFC"
    },
    "2889": {
      "op": "SHL"
    },
    "2890": {
      "fn": "Strings.toString",
      "offset": [
        627,
        637
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "2892": {
      "fn": "Strings.toString",
      "offset": [
        627,
        637
      ],
      "op": "DUP3",
      "path": "8"
    },
    "2893": {
      "fn": "Strings.toString",
      "offset": [
        627,
        637
      ],
      "op": "ADD",
      "path": "8"
    },
    "2894": {
      "fn": "Strings.toString",
      "offset": [
        627,
        637
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "2895": {
      "fn": "Strings.toString",
      "offset": [
        627,
        637
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "2896": {
      "fn": "Strings.toString",
      "jump": "o",
      "offset": [
        328,
        1031
      ],
      "op": "JUMP",
      "path": "8"
    },
    "2897": {
      "fn": "Strings.toString",
      "offset": [
        597,
        648
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "2898": {
      "fn": "Strings.toString",
      "offset": [
        672,
        677
      ],
      "op": "DUP2",
      "path": "8"
    },
    "2899": {
      "fn": "Strings.toString",
      "offset": [
        657,
        669
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "2901": {
      "fn": "Strings.toString",
      "offset": [
        711,
        786
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "2902": {
      "fn": "Strings.toString",
      "offset": [
        718,
        727
      ],
      "op": "DUP2",
      "path": "8"
    },
    "2903": {
      "fn": "Strings.toString",
      "offset": [
        718,
        727
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "2904": {
      "fn": "Strings.toString",
      "offset": [
        711,
        786
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xB7B"
    },
    "2907": {
      "fn": "Strings.toString",
      "offset": [
        711,
        786
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "2908": {
      "fn": "Strings.toString",
      "offset": [
        743,
        751
      ],
      "op": "DUP1",
      "path": "8",
      "statement": 41
    },
    "2909": {
      "fn": "Strings.toString",
      "offset": [
        743,
        751
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xB65"
    },
    "2912": {
      "fn": "Strings.toString",
      "offset": [
        743,
        751
      ],
      "op": "DUP2",
      "path": "8"
    },
    "2913": {
      "fn": "Strings.toString",
      "offset": [
        743,
        751
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1124"
    },
    "2916": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [
        743,
        751
      ],
      "op": "JUMP",
      "path": "8"
    },
    "2917": {
      "fn": "Strings.toString",
      "offset": [
        743,
        751
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "2918": {
      "fn": "Strings.toString",
      "offset": [
        743,
        751
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "2919": {
      "op": "POP"
    },
    "2920": {
      "fn": "Strings.toString",
      "offset": [
        765,
        775
      ],
      "op": "PUSH2",
      "path": "8",
      "statement": 42,
      "value": "0xB74"
    },
    "2923": {
      "fn": "Strings.toString",
      "offset": [
        765,
        775
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "2924": {
      "op": "POP"
    },
    "2925": {
      "fn": "Strings.toString",
      "offset": [
        773,
        775
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0xA"
    },
    "2927": {
      "fn": "Strings.toString",
      "offset": [
        765,
        775
      ],
      "op": "DUP4",
      "path": "8"
    },
    "2928": {
      "fn": "Strings.toString",
      "offset": [
        765,
        775
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1153"
    },
    "2931": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [
        765,
        775
      ],
      "op": "JUMP",
      "path": "8"
    },
    "2932": {
      "fn": "Strings.toString",
      "offset": [
        765,
        775
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "2933": {
      "fn": "Strings.toString",
      "offset": [
        765,
        775
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "2934": {
      "fn": "Strings.toString",
      "offset": [
        765,
        775
      ],
      "op": "POP",
      "path": "8"
    },
    "2935": {
      "fn": "Strings.toString",
      "offset": [
        711,
        786
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xB55"
    },
    "2938": {
      "fn": "Strings.toString",
      "offset": [
        711,
        786
      ],
      "op": "JUMP",
      "path": "8"
    },
    "2939": {
      "fn": "Strings.toString",
      "offset": [
        711,
        786
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "2940": {
      "fn": "Strings.toString",
      "offset": [
        795,
        814
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "2942": {
      "fn": "Strings.toString",
      "offset": [
        827,
        833
      ],
      "op": "DUP2",
      "path": "8"
    },
    "2943": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "PUSH8",
      "path": "8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "2952": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "DUP2",
      "path": "8"
    },
    "2953": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "GT",
      "path": "8"
    },
    "2954": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "2955": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xB96"
    },
    "2958": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "2959": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xB96"
    },
    "2962": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xEB7"
    },
    "2965": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [
        817,
        834
      ],
      "op": "JUMP",
      "path": "8"
    },
    "2966": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "2967": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "2969": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "2970": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "2971": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "DUP1",
      "path": "8"
    },
    "2972": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "DUP3",
      "path": "8"
    },
    "2973": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "2974": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "DUP1",
      "path": "8"
    },
    "2975": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x1F"
    },
    "2977": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "ADD",
      "path": "8"
    },
    "2978": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x1F"
    },
    "2980": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "NOT",
      "path": "8"
    },
    "2981": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "AND",
      "path": "8"
    },
    "2982": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "2984": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "ADD",
      "path": "8"
    },
    "2985": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "DUP3",
      "path": "8"
    },
    "2986": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "ADD",
      "path": "8"
    },
    "2987": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "2989": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "2990": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "DUP1",
      "path": "8"
    },
    "2991": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "2992": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xBC0"
    },
    "2995": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "2996": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "2998": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "DUP3",
      "path": "8"
    },
    "2999": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "ADD",
      "path": "8"
    },
    "3000": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "DUP2",
      "path": "8"
    },
    "3001": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "DUP1",
      "path": "8"
    },
    "3002": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "CALLDATASIZE",
      "path": "8"
    },
    "3003": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "DUP4",
      "path": "8"
    },
    "3004": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "CALLDATACOPY",
      "path": "8"
    },
    "3005": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "ADD",
      "path": "8"
    },
    "3006": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "3007": {
      "op": "POP"
    },
    "3008": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "3009": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "POP",
      "path": "8"
    },
    "3010": {
      "fn": "Strings.toString",
      "offset": [
        795,
        834
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "3011": {
      "fn": "Strings.toString",
      "offset": [
        795,
        834
      ],
      "op": "POP",
      "path": "8"
    },
    "3012": {
      "fn": "Strings.toString",
      "offset": [
        844,
        994
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "3013": {
      "fn": "Strings.toString",
      "offset": [
        851,
        861
      ],
      "op": "DUP5",
      "path": "8"
    },
    "3014": {
      "fn": "Strings.toString",
      "offset": [
        851,
        861
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "3015": {
      "fn": "Strings.toString",
      "offset": [
        844,
        994
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x885"
    },
    "3018": {
      "fn": "Strings.toString",
      "offset": [
        844,
        994
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "3019": {
      "fn": "Strings.toString",
      "offset": [
        877,
        888
      ],
      "op": "PUSH2",
      "path": "8",
      "statement": 43,
      "value": "0xBD5"
    },
    "3022": {
      "fn": "Strings.toString",
      "offset": [
        887,
        888
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x1"
    },
    "3024": {
      "fn": "Strings.toString",
      "offset": [
        877,
        888
      ],
      "op": "DUP4",
      "path": "8"
    },
    "3025": {
      "fn": "Strings.toString",
      "offset": [
        877,
        888
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x10AC"
    },
    "3028": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [
        877,
        888
      ],
      "op": "JUMP",
      "path": "8"
    },
    "3029": {
      "fn": "Strings.toString",
      "offset": [
        877,
        888
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "3030": {
      "fn": "Strings.toString",
      "offset": [
        877,
        888
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "3031": {
      "op": "POP"
    },
    "3032": {
      "fn": "Strings.toString",
      "offset": [
        945,
        955
      ],
      "op": "PUSH2",
      "path": "8",
      "statement": 44,
      "value": "0xBE2"
    },
    "3035": {
      "fn": "Strings.toString",
      "offset": [
        953,
        955
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0xA"
    },
    "3037": {
      "fn": "Strings.toString",
      "offset": [
        945,
        950
      ],
      "op": "DUP7",
      "path": "8"
    },
    "3038": {
      "fn": "Strings.toString",
      "offset": [
        945,
        955
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1167"
    },
    "3041": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [
        945,
        955
      ],
      "op": "JUMP",
      "path": "8"
    },
    "3042": {
      "fn": "Strings.toString",
      "offset": [
        945,
        955
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "3043": {
      "fn": "Strings.toString",
      "offset": [
        932,
        956
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xBED"
    },
    "3046": {
      "fn": "Strings.toString",
      "offset": [
        932,
        956
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "3047": {
      "fn": "Strings.toString",
      "offset": [
        932,
        934
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x30"
    },
    "3049": {
      "fn": "Strings.toString",
      "offset": [
        932,
        956
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x10BF"
    },
    "3052": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [
        932,
        956
      ],
      "op": "JUMP",
      "path": "8"
    },
    "3053": {
      "fn": "Strings.toString",
      "offset": [
        932,
        956
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "3054": {
      "fn": "Strings.toString",
      "offset": [
        919,
        958
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0xF8"
    },
    "3056": {
      "fn": "Strings.toString",
      "offset": [
        919,
        958
      ],
      "op": "SHL",
      "path": "8"
    },
    "3057": {
      "fn": "Strings.toString",
      "offset": [
        902,
        908
      ],
      "op": "DUP2",
      "path": "8"
    },
    "3058": {
      "fn": "Strings.toString",
      "offset": [
        909,
        915
      ],
      "op": "DUP4",
      "path": "8"
    },
    "3059": {
      "fn": "Strings.toString",
      "offset": [
        902,
        916
      ],
      "op": "DUP2",
      "path": "8"
    },
    "3060": {
      "fn": "Strings.toString",
      "offset": [
        902,
        916
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "3061": {
      "fn": "Strings.toString",
      "offset": [
        902,
        916
      ],
      "op": "DUP2",
      "path": "8"
    },
    "3062": {
      "fn": "Strings.toString",
      "offset": [
        902,
        916
      ],
      "op": "LT",
      "path": "8"
    },
    "3063": {
      "fn": "Strings.toString",
      "offset": [
        902,
        916
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xC02"
    },
    "3066": {
      "fn": "Strings.toString",
      "offset": [
        902,
        916
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "3067": {
      "fn": "Strings.toString",
      "offset": [
        902,
        916
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xC02"
    },
    "3070": {
      "fn": "Strings.toString",
      "offset": [
        902,
        916
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x117B"
    },
    "3073": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [
        902,
        916
      ],
      "op": "JUMP",
      "path": "8"
    },
    "3074": {
      "fn": "Strings.toString",
      "offset": [
        902,
        916
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "3075": {
      "fn": "Strings.toString",
      "offset": [
        902,
        916
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "3077": {
      "fn": "Strings.toString",
      "offset": [
        902,
        916
      ],
      "op": "ADD",
      "path": "8"
    },
    "3078": {
      "fn": "Strings.toString",
      "offset": [
        902,
        916
      ],
      "op": "ADD",
      "path": "8"
    },
    "3079": {
      "fn": "Strings.toString",
      "offset": [
        902,
        958
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "3080": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3082": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3084": {
      "op": "PUSH1",
      "value": "0xF8"
    },
    "3086": {
      "op": "SHL"
    },
    "3087": {
      "op": "SUB"
    },
    "3088": {
      "fn": "Strings.toString",
      "offset": [
        902,
        958
      ],
      "op": "NOT",
      "path": "8"
    },
    "3089": {
      "fn": "Strings.toString",
      "offset": [
        902,
        958
      ],
      "op": "AND",
      "path": "8"
    },
    "3090": {
      "fn": "Strings.toString",
      "offset": [
        902,
        958
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "3091": {
      "fn": "Strings.toString",
      "offset": [
        902,
        958
      ],
      "op": "DUP2",
      "path": "8"
    },
    "3092": {
      "fn": "Strings.toString",
      "offset": [
        902,
        958
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "3094": {
      "fn": "Strings.toString",
      "offset": [
        902,
        958
      ],
      "op": "BYTE",
      "path": "8"
    },
    "3095": {
      "fn": "Strings.toString",
      "offset": [
        902,
        958
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "3096": {
      "fn": "Strings.toString",
      "offset": [
        902,
        958
      ],
      "op": "MSTORE8",
      "path": "8"
    },
    "3097": {
      "op": "POP"
    },
    "3098": {
      "fn": "Strings.toString",
      "offset": [
        972,
        983
      ],
      "op": "PUSH2",
      "path": "8",
      "statement": 45,
      "value": "0xC24"
    },
    "3101": {
      "fn": "Strings.toString",
      "offset": [
        981,
        983
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0xA"
    },
    "3103": {
      "fn": "Strings.toString",
      "offset": [
        972,
        983
      ],
      "op": "DUP7",
      "path": "8"
    },
    "3104": {
      "fn": "Strings.toString",
      "offset": [
        972,
        983
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1153"
    },
    "3107": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [
        972,
        983
      ],
      "op": "JUMP",
      "path": "8"
    },
    "3108": {
      "fn": "Strings.toString",
      "offset": [
        972,
        983
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "3109": {
      "fn": "Strings.toString",
      "offset": [
        972,
        983
      ],
      "op": "SWAP5",
      "path": "8"
    },
    "3110": {
      "fn": "Strings.toString",
      "offset": [
        972,
        983
      ],
      "op": "POP",
      "path": "8"
    },
    "3111": {
      "fn": "Strings.toString",
      "offset": [
        844,
        994
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xBC4"
    },
    "3114": {
      "fn": "Strings.toString",
      "offset": [
        844,
        994
      ],
      "op": "JUMP",
      "path": "8"
    },
    "3115": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12335,
        13113
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3116": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12485,
        12489
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3118": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3120": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3122": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3124": {
      "op": "SHL"
    },
    "3125": {
      "op": "SUB"
    },
    "3126": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12505,
        12518
      ],
      "op": "DUP5",
      "path": "0"
    },
    "3127": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12505,
        12518
      ],
      "op": "AND",
      "path": "0"
    },
    "3128": {
      "fn": "Address.isContract",
      "offset": [
        1465,
        1484
      ],
      "op": "EXTCODESIZE",
      "path": "5",
      "statement": 46
    },
    "3129": {
      "fn": "Address.isContract",
      "offset": [
        1465,
        1488
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "3130": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12501,
        13107
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xD21"
    },
    "3133": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12501,
        13107
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3134": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12540,
        12612
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3136": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12540,
        12612
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3137": {
      "op": "PUSH4",
      "value": "0xA85BD01"
    },
    "3142": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "3144": {
      "op": "SHL"
    },
    "3145": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12540,
        12612
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3146": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12540,
        12612
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3147": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3149": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3151": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3153": {
      "op": "SHL"
    },
    "3154": {
      "op": "SUB"
    },
    "3155": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12540,
        12576
      ],
      "op": "DUP6",
      "path": "0"
    },
    "3156": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12540,
        12576
      ],
      "op": "AND",
      "path": "0"
    },
    "3157": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12540,
        12576
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3158": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12540,
        12576
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x150B7A02"
    },
    "3163": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12540,
        12576
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3164": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12540,
        12612
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC6F"
    },
    "3167": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12540,
        12612
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3168": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "6"
    },
    "3169": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3170": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12591,
        12595
      ],
      "op": "DUP10",
      "path": "0"
    },
    "3171": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12591,
        12595
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3172": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12597,
        12604
      ],
      "op": "DUP9",
      "path": "0"
    },
    "3173": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12597,
        12604
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3174": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12606,
        12611
      ],
      "op": "DUP9",
      "path": "0"
    },
    "3175": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12606,
        12611
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3176": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12540,
        12612
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "3178": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12540,
        12612
      ],
      "op": "ADD",
      "path": "0"
    },
    "3179": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12540,
        12612
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1191"
    },
    "3182": {
      "fn": "ERC721._checkOnERC721Received",
      "jump": "i",
      "offset": [
        12540,
        12612
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3183": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12540,
        12612
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3184": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12540,
        12612
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3186": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12540,
        12612
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3188": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12540,
        12612
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3189": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12540,
        12612
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3190": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12540,
        12612
      ],
      "op": "DUP4",
      "path": "0"
    },
    "3191": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12540,
        12612
      ],
      "op": "SUB",
      "path": "0"
    },
    "3192": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12540,
        12612
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3193": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12540,
        12612
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3195": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12540,
        12612
      ],
      "op": "DUP8",
      "path": "0"
    },
    "3196": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12540,
        12612
      ],
      "op": "GAS",
      "path": "0"
    },
    "3197": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12540,
        12612
      ],
      "op": "CALL",
      "path": "0"
    },
    "3198": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12540,
        12612
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "3199": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12540,
        12612
      ],
      "op": "POP",
      "path": "0"
    },
    "3200": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12540,
        12612
      ],
      "op": "POP",
      "path": "0"
    },
    "3201": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12540,
        12612
      ],
      "op": "POP",
      "path": "0"
    },
    "3202": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12540,
        12612
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3203": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12540,
        12612
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "3204": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12540,
        12612
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xCAA"
    },
    "3207": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12540,
        12612
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3208": {
      "op": "POP"
    },
    "3209": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12540,
        12612
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3211": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12540,
        12612
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3212": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12540,
        12612
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3213": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12540,
        12612
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "3215": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12540,
        12612
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "3216": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12540,
        12612
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3217": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12540,
        12612
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3218": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12540,
        12612
      ],
      "op": "ADD",
      "path": "0"
    },
    "3219": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3221": {
      "op": "NOT"
    },
    "3222": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12540,
        12612
      ],
      "op": "AND",
      "path": "0"
    },
    "3223": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12540,
        12612
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3224": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12540,
        12612
      ],
      "op": "ADD",
      "path": "0"
    },
    "3225": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12540,
        12612
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3226": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12540,
        12612
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "3227": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12540,
        12612
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3228": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12540,
        12612
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xCA7"
    },
    "3231": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12540,
        12612
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3232": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12540,
        12612
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3233": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12540,
        12612
      ],
      "op": "ADD",
      "path": "0"
    },
    "3234": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12540,
        12612
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3235": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12540,
        12612
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x11CE"
    },
    "3238": {
      "fn": "ERC721._checkOnERC721Received",
      "jump": "i",
      "offset": [
        12540,
        12612
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3239": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12540,
        12612
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3240": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12540,
        12612
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "3242": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12540,
        12612
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3243": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12536,
        13055
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xD07"
    },
    "3246": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12536,
        13055
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3247": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12536,
        13055
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "3248": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12536,
        13055
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3249": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12536,
        13055
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3250": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12536,
        13055
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "3251": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12536,
        13055
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xCD8"
    },
    "3254": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12536,
        13055
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3255": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12536,
        13055
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3257": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12536,
        13055
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3258": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12536,
        13055
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3259": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12536,
        13055
      ],
      "op": "POP",
      "path": "0"
    },
    "3260": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12536,
        13055
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "3262": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12536,
        13055
      ],
      "op": "NOT",
      "path": "0"
    },
    "3263": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12536,
        13055
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3F"
    },
    "3265": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12536,
        13055
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "3266": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12536,
        13055
      ],
      "op": "ADD",
      "path": "0"
    },
    "3267": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12536,
        13055
      ],
      "op": "AND",
      "path": "0"
    },
    "3268": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12536,
        13055
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3269": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12536,
        13055
      ],
      "op": "ADD",
      "path": "0"
    },
    "3270": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12536,
        13055
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3272": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12536,
        13055
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3273": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12536,
        13055
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "3274": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12536,
        13055
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3275": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12536,
        13055
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3276": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12536,
        13055
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "3277": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12536,
        13055
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3279": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12536,
        13055
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3281": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12536,
        13055
      ],
      "op": "DUP5",
      "path": "0"
    },
    "3282": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12536,
        13055
      ],
      "op": "ADD",
      "path": "0"
    },
    "3283": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12536,
        13055
      ],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "3284": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12536,
        13055
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xCDD"
    },
    "3287": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12536,
        13055
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3288": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12536,
        13055
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3289": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12536,
        13055
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x60"
    },
    "3291": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12536,
        13055
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3292": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12536,
        13055
      ],
      "op": "POP",
      "path": "0"
    },
    "3293": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12536,
        13055
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3294": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12536,
        13055
      ],
      "op": "POP",
      "path": "0"
    },
    "3295": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12779,
        12785
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3296": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12779,
        12792
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3297": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12796,
        12797
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3299": {
      "branch": 61,
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12779,
        12797
      ],
      "op": "SUB",
      "path": "0"
    },
    "3300": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12775,
        13041
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xCFF"
    },
    "3303": {
      "branch": 61,
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12775,
        13041
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3304": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12821,
        12881
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 47,
      "value": "0x40"
    },
    "3306": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12821,
        12881
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3307": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3311": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3313": {
      "op": "SHL"
    },
    "3314": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12821,
        12881
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3315": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12821,
        12881
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3316": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12821,
        12881
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "3318": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12821,
        12881
      ],
      "op": "ADD",
      "path": "0"
    },
    "3319": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12821,
        12881
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x358"
    },
    "3322": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12821,
        12881
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3323": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12821,
        12881
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x10D2"
    },
    "3326": {
      "fn": "ERC721._checkOnERC721Received",
      "jump": "i",
      "offset": [
        12821,
        12881
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3327": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12775,
        13041
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3328": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12993,
        12999
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3329": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12987,
        13000
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3330": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12978,
        12984
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3331": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12974,
        12976
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3333": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12970,
        12985
      ],
      "op": "ADD",
      "path": "0"
    },
    "3334": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12963,
        13001
      ],
      "op": "REVERT",
      "path": "0"
    },
    "3335": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12536,
        13055
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3336": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3338": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3340": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3342": {
      "op": "SHL"
    },
    "3343": {
      "op": "SUB"
    },
    "3344": {
      "op": "NOT"
    },
    "3345": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12662,
        12713
      ],
      "op": "AND",
      "path": "0",
      "statement": 48
    },
    "3346": {
      "op": "PUSH4",
      "value": "0xA85BD01"
    },
    "3351": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "3353": {
      "op": "SHL"
    },
    "3354": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12662,
        12713
      ],
      "op": "EQ",
      "path": "0"
    },
    "3355": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12662,
        12713
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3356": {
      "op": "POP"
    },
    "3357": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12655,
        12713
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x885"
    },
    "3360": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12655,
        12713
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3361": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12501,
        13107
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3362": {
      "op": "POP"
    },
    "3363": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        13092,
        13096
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 49,
      "value": "0x1"
    },
    "3365": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12335,
        13113
      ],
      "op": "SWAP5",
      "path": "0"
    },
    "3366": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12335,
        13113
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "3367": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12335,
        13113
      ],
      "op": "POP",
      "path": "0"
    },
    "3368": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12335,
        13113
      ],
      "op": "POP",
      "path": "0"
    },
    "3369": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12335,
        13113
      ],
      "op": "POP",
      "path": "0"
    },
    "3370": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12335,
        13113
      ],
      "op": "POP",
      "path": "0"
    },
    "3371": {
      "fn": "ERC721._checkOnERC721Received",
      "jump": "o",
      "offset": [
        12335,
        13113
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3372": {
      "op": "JUMPDEST"
    },
    "3373": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3375": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3377": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3379": {
      "op": "SHL"
    },
    "3380": {
      "op": "SUB"
    },
    "3381": {
      "op": "NOT"
    },
    "3382": {
      "op": "DUP2"
    },
    "3383": {
      "op": "AND"
    },
    "3384": {
      "op": "DUP2"
    },
    "3385": {
      "op": "EQ"
    },
    "3386": {
      "op": "PUSH2",
      "value": "0xD42"
    },
    "3389": {
      "op": "JUMPI"
    },
    "3390": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3392": {
      "op": "DUP1"
    },
    "3393": {
      "op": "REVERT"
    },
    "3394": {
      "op": "JUMPDEST"
    },
    "3395": {
      "op": "POP"
    },
    "3396": {
      "jump": "o",
      "op": "JUMP"
    },
    "3397": {
      "op": "JUMPDEST"
    },
    "3398": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3400": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3402": {
      "op": "DUP3"
    },
    "3403": {
      "op": "DUP5"
    },
    "3404": {
      "op": "SUB"
    },
    "3405": {
      "op": "SLT"
    },
    "3406": {
      "op": "ISZERO"
    },
    "3407": {
      "op": "PUSH2",
      "value": "0xD57"
    },
    "3410": {
      "op": "JUMPI"
    },
    "3411": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3413": {
      "op": "DUP1"
    },
    "3414": {
      "op": "REVERT"
    },
    "3415": {
      "op": "JUMPDEST"
    },
    "3416": {
      "op": "DUP2"
    },
    "3417": {
      "op": "CALLDATALOAD"
    },
    "3418": {
      "op": "PUSH2",
      "value": "0x713"
    },
    "3421": {
      "op": "DUP2"
    },
    "3422": {
      "op": "PUSH2",
      "value": "0xD2C"
    },
    "3425": {
      "jump": "i",
      "op": "JUMP"
    },
    "3426": {
      "op": "JUMPDEST"
    },
    "3427": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3429": {
      "op": "JUMPDEST"
    },
    "3430": {
      "op": "DUP4"
    },
    "3431": {
      "op": "DUP2"
    },
    "3432": {
      "op": "LT"
    },
    "3433": {
      "op": "ISZERO"
    },
    "3434": {
      "op": "PUSH2",
      "value": "0xD7D"
    },
    "3437": {
      "op": "JUMPI"
    },
    "3438": {
      "op": "DUP2"
    },
    "3439": {
      "op": "DUP2"
    },
    "3440": {
      "op": "ADD"
    },
    "3441": {
      "op": "MLOAD"
    },
    "3442": {
      "op": "DUP4"
    },
    "3443": {
      "op": "DUP3"
    },
    "3444": {
      "op": "ADD"
    },
    "3445": {
      "op": "MSTORE"
    },
    "3446": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3448": {
      "op": "ADD"
    },
    "3449": {
      "op": "PUSH2",
      "value": "0xD65"
    },
    "3452": {
      "op": "JUMP"
    },
    "3453": {
      "op": "JUMPDEST"
    },
    "3454": {
      "op": "POP"
    },
    "3455": {
      "op": "POP"
    },
    "3456": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3458": {
      "op": "SWAP2"
    },
    "3459": {
      "op": "ADD"
    },
    "3460": {
      "op": "MSTORE"
    },
    "3461": {
      "jump": "o",
      "op": "JUMP"
    },
    "3462": {
      "op": "JUMPDEST"
    },
    "3463": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3465": {
      "op": "DUP2"
    },
    "3466": {
      "op": "MLOAD"
    },
    "3467": {
      "op": "DUP1"
    },
    "3468": {
      "op": "DUP5"
    },
    "3469": {
      "op": "MSTORE"
    },
    "3470": {
      "op": "PUSH2",
      "value": "0xD9E"
    },
    "3473": {
      "op": "DUP2"
    },
    "3474": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3476": {
      "op": "DUP7"
    },
    "3477": {
      "op": "ADD"
    },
    "3478": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3480": {
      "op": "DUP7"
    },
    "3481": {
      "op": "ADD"
    },
    "3482": {
      "op": "PUSH2",
      "value": "0xD62"
    },
    "3485": {
      "jump": "i",
      "op": "JUMP"
    },
    "3486": {
      "op": "JUMPDEST"
    },
    "3487": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3489": {
      "op": "ADD"
    },
    "3490": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3492": {
      "op": "NOT"
    },
    "3493": {
      "op": "AND"
    },
    "3494": {
      "op": "SWAP3"
    },
    "3495": {
      "op": "SWAP1"
    },
    "3496": {
      "op": "SWAP3"
    },
    "3497": {
      "op": "ADD"
    },
    "3498": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3500": {
      "op": "ADD"
    },
    "3501": {
      "op": "SWAP3"
    },
    "3502": {
      "op": "SWAP2"
    },
    "3503": {
      "op": "POP"
    },
    "3504": {
      "op": "POP"
    },
    "3505": {
      "jump": "o",
      "op": "JUMP"
    },
    "3506": {
      "op": "JUMPDEST"
    },
    "3507": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3509": {
      "op": "DUP2"
    },
    "3510": {
      "op": "MSTORE"
    },
    "3511": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3513": {
      "op": "PUSH2",
      "value": "0x713"
    },
    "3516": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3518": {
      "op": "DUP4"
    },
    "3519": {
      "op": "ADD"
    },
    "3520": {
      "op": "DUP5"
    },
    "3521": {
      "op": "PUSH2",
      "value": "0xD86"
    },
    "3524": {
      "jump": "i",
      "op": "JUMP"
    },
    "3525": {
      "op": "JUMPDEST"
    },
    "3526": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3528": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3530": {
      "op": "DUP3"
    },
    "3531": {
      "op": "DUP5"
    },
    "3532": {
      "op": "SUB"
    },
    "3533": {
      "op": "SLT"
    },
    "3534": {
      "op": "ISZERO"
    },
    "3535": {
      "op": "PUSH2",
      "value": "0xDD7"
    },
    "3538": {
      "op": "JUMPI"
    },
    "3539": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3541": {
      "op": "DUP1"
    },
    "3542": {
      "op": "REVERT"
    },
    "3543": {
      "op": "JUMPDEST"
    },
    "3544": {
      "op": "POP"
    },
    "3545": {
      "op": "CALLDATALOAD"
    },
    "3546": {
      "op": "SWAP2"
    },
    "3547": {
      "op": "SWAP1"
    },
    "3548": {
      "op": "POP"
    },
    "3549": {
      "jump": "o",
      "op": "JUMP"
    },
    "3550": {
      "op": "JUMPDEST"
    },
    "3551": {
      "op": "DUP1"
    },
    "3552": {
      "op": "CALLDATALOAD"
    },
    "3553": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3555": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3557": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3559": {
      "op": "SHL"
    },
    "3560": {
      "op": "SUB"
    },
    "3561": {
      "op": "DUP2"
    },
    "3562": {
      "op": "AND"
    },
    "3563": {
      "op": "DUP2"
    },
    "3564": {
      "op": "EQ"
    },
    "3565": {
      "op": "PUSH2",
      "value": "0xDF5"
    },
    "3568": {
      "op": "JUMPI"
    },
    "3569": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3571": {
      "op": "DUP1"
    },
    "3572": {
      "op": "REVERT"
    },
    "3573": {
      "op": "JUMPDEST"
    },
    "3574": {
      "op": "SWAP2"
    },
    "3575": {
      "op": "SWAP1"
    },
    "3576": {
      "op": "POP"
    },
    "3577": {
      "jump": "o",
      "op": "JUMP"
    },
    "3578": {
      "op": "JUMPDEST"
    },
    "3579": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3581": {
      "op": "DUP1"
    },
    "3582": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3584": {
      "op": "DUP4"
    },
    "3585": {
      "op": "DUP6"
    },
    "3586": {
      "op": "SUB"
    },
    "3587": {
      "op": "SLT"
    },
    "3588": {
      "op": "ISZERO"
    },
    "3589": {
      "op": "PUSH2",
      "value": "0xE0D"
    },
    "3592": {
      "op": "JUMPI"
    },
    "3593": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3595": {
      "op": "DUP1"
    },
    "3596": {
      "op": "REVERT"
    },
    "3597": {
      "op": "JUMPDEST"
    },
    "3598": {
      "op": "PUSH2",
      "value": "0xE16"
    },
    "3601": {
      "op": "DUP4"
    },
    "3602": {
      "op": "PUSH2",
      "value": "0xDDE"
    },
    "3605": {
      "jump": "i",
      "op": "JUMP"
    },
    "3606": {
      "op": "JUMPDEST"
    },
    "3607": {
      "op": "SWAP5"
    },
    "3608": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3610": {
      "op": "SWAP4"
    },
    "3611": {
      "op": "SWAP1"
    },
    "3612": {
      "op": "SWAP4"
    },
    "3613": {
      "op": "ADD"
    },
    "3614": {
      "op": "CALLDATALOAD"
    },
    "3615": {
      "op": "SWAP4"
    },
    "3616": {
      "op": "POP"
    },
    "3617": {
      "op": "POP"
    },
    "3618": {
      "op": "POP"
    },
    "3619": {
      "jump": "o",
      "op": "JUMP"
    },
    "3620": {
      "op": "JUMPDEST"
    },
    "3621": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3623": {
      "op": "DUP1"
    },
    "3624": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3626": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "3628": {
      "op": "DUP5"
    },
    "3629": {
      "op": "DUP7"
    },
    "3630": {
      "op": "SUB"
    },
    "3631": {
      "op": "SLT"
    },
    "3632": {
      "op": "ISZERO"
    },
    "3633": {
      "op": "PUSH2",
      "value": "0xE39"
    },
    "3636": {
      "op": "JUMPI"
    },
    "3637": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3639": {
      "op": "DUP1"
    },
    "3640": {
      "op": "REVERT"
    },
    "3641": {
      "op": "JUMPDEST"
    },
    "3642": {
      "op": "PUSH2",
      "value": "0xE42"
    },
    "3645": {
      "op": "DUP5"
    },
    "3646": {
      "op": "PUSH2",
      "value": "0xDDE"
    },
    "3649": {
      "jump": "i",
      "op": "JUMP"
    },
    "3650": {
      "op": "JUMPDEST"
    },
    "3651": {
      "op": "SWAP3"
    },
    "3652": {
      "op": "POP"
    },
    "3653": {
      "op": "PUSH2",
      "value": "0xE50"
    },
    "3656": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3658": {
      "op": "DUP6"
    },
    "3659": {
      "op": "ADD"
    },
    "3660": {
      "op": "PUSH2",
      "value": "0xDDE"
    },
    "3663": {
      "jump": "i",
      "op": "JUMP"
    },
    "3664": {
      "op": "JUMPDEST"
    },
    "3665": {
      "op": "SWAP2"
    },
    "3666": {
      "op": "POP"
    },
    "3667": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3669": {
      "op": "DUP5"
    },
    "3670": {
      "op": "ADD"
    },
    "3671": {
      "op": "CALLDATALOAD"
    },
    "3672": {
      "op": "SWAP1"
    },
    "3673": {
      "op": "POP"
    },
    "3674": {
      "op": "SWAP3"
    },
    "3675": {
      "op": "POP"
    },
    "3676": {
      "op": "SWAP3"
    },
    "3677": {
      "op": "POP"
    },
    "3678": {
      "op": "SWAP3"
    },
    "3679": {
      "jump": "o",
      "op": "JUMP"
    },
    "3680": {
      "op": "JUMPDEST"
    },
    "3681": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3683": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3685": {
      "op": "DUP3"
    },
    "3686": {
      "op": "DUP5"
    },
    "3687": {
      "op": "SUB"
    },
    "3688": {
      "op": "SLT"
    },
    "3689": {
      "op": "ISZERO"
    },
    "3690": {
      "op": "PUSH2",
      "value": "0xE72"
    },
    "3693": {
      "op": "JUMPI"
    },
    "3694": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3696": {
      "op": "DUP1"
    },
    "3697": {
      "op": "REVERT"
    },
    "3698": {
      "op": "JUMPDEST"
    },
    "3699": {
      "op": "PUSH2",
      "value": "0x713"
    },
    "3702": {
      "op": "DUP3"
    },
    "3703": {
      "op": "PUSH2",
      "value": "0xDDE"
    },
    "3706": {
      "jump": "i",
      "op": "JUMP"
    },
    "3707": {
      "op": "JUMPDEST"
    },
    "3708": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3710": {
      "op": "DUP1"
    },
    "3711": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3713": {
      "op": "DUP4"
    },
    "3714": {
      "op": "DUP6"
    },
    "3715": {
      "op": "SUB"
    },
    "3716": {
      "op": "SLT"
    },
    "3717": {
      "op": "ISZERO"
    },
    "3718": {
      "op": "PUSH2",
      "value": "0xE8E"
    },
    "3721": {
      "op": "JUMPI"
    },
    "3722": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3724": {
      "op": "DUP1"
    },
    "3725": {
      "op": "REVERT"
    },
    "3726": {
      "op": "JUMPDEST"
    },
    "3727": {
      "op": "PUSH2",
      "value": "0xE97"
    },
    "3730": {
      "op": "DUP4"
    },
    "3731": {
      "op": "PUSH2",
      "value": "0xDDE"
    },
    "3734": {
      "jump": "i",
      "op": "JUMP"
    },
    "3735": {
      "op": "JUMPDEST"
    },
    "3736": {
      "op": "SWAP2"
    },
    "3737": {
      "op": "POP"
    },
    "3738": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3740": {
      "op": "DUP4"
    },
    "3741": {
      "op": "ADD"
    },
    "3742": {
      "op": "CALLDATALOAD"
    },
    "3743": {
      "op": "DUP1"
    },
    "3744": {
      "op": "ISZERO"
    },
    "3745": {
      "op": "ISZERO"
    },
    "3746": {
      "op": "DUP2"
    },
    "3747": {
      "op": "EQ"
    },
    "3748": {
      "op": "PUSH2",
      "value": "0xEAC"
    },
    "3751": {
      "op": "JUMPI"
    },
    "3752": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3754": {
      "op": "DUP1"
    },
    "3755": {
      "op": "REVERT"
    },
    "3756": {
      "op": "JUMPDEST"
    },
    "3757": {
      "op": "DUP1"
    },
    "3758": {
      "op": "SWAP2"
    },
    "3759": {
      "op": "POP"
    },
    "3760": {
      "op": "POP"
    },
    "3761": {
      "op": "SWAP3"
    },
    "3762": {
      "op": "POP"
    },
    "3763": {
      "op": "SWAP3"
    },
    "3764": {
      "op": "SWAP1"
    },
    "3765": {
      "op": "POP"
    },
    "3766": {
      "jump": "o",
      "op": "JUMP"
    },
    "3767": {
      "op": "JUMPDEST"
    },
    "3768": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "3773": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3775": {
      "op": "SHL"
    },
    "3776": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3778": {
      "op": "MSTORE"
    },
    "3779": {
      "op": "PUSH1",
      "value": "0x41"
    },
    "3781": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "3783": {
      "op": "MSTORE"
    },
    "3784": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3786": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3788": {
      "op": "REVERT"
    },
    "3789": {
      "op": "JUMPDEST"
    },
    "3790": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3792": {
      "op": "DUP1"
    },
    "3793": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3795": {
      "op": "DUP1"
    },
    "3796": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "3798": {
      "op": "DUP6"
    },
    "3799": {
      "op": "DUP8"
    },
    "3800": {
      "op": "SUB"
    },
    "3801": {
      "op": "SLT"
    },
    "3802": {
      "op": "ISZERO"
    },
    "3803": {
      "op": "PUSH2",
      "value": "0xEE3"
    },
    "3806": {
      "op": "JUMPI"
    },
    "3807": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3809": {
      "op": "DUP1"
    },
    "3810": {
      "op": "REVERT"
    },
    "3811": {
      "op": "JUMPDEST"
    },
    "3812": {
      "op": "PUSH2",
      "value": "0xEEC"
    },
    "3815": {
      "op": "DUP6"
    },
    "3816": {
      "op": "PUSH2",
      "value": "0xDDE"
    },
    "3819": {
      "jump": "i",
      "op": "JUMP"
    },
    "3820": {
      "op": "JUMPDEST"
    },
    "3821": {
      "op": "SWAP4"
    },
    "3822": {
      "op": "POP"
    },
    "3823": {
      "op": "PUSH2",
      "value": "0xEFA"
    },
    "3826": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3828": {
      "op": "DUP7"
    },
    "3829": {
      "op": "ADD"
    },
    "3830": {
      "op": "PUSH2",
      "value": "0xDDE"
    },
    "3833": {
      "jump": "i",
      "op": "JUMP"
    },
    "3834": {
      "op": "JUMPDEST"
    },
    "3835": {
      "op": "SWAP3"
    },
    "3836": {
      "op": "POP"
    },
    "3837": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3839": {
      "op": "DUP6"
    },
    "3840": {
      "op": "ADD"
    },
    "3841": {
      "op": "CALLDATALOAD"
    },
    "3842": {
      "op": "SWAP2"
    },
    "3843": {
      "op": "POP"
    },
    "3844": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "3846": {
      "op": "DUP6"
    },
    "3847": {
      "op": "ADD"
    },
    "3848": {
      "op": "CALLDATALOAD"
    },
    "3849": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "3858": {
      "op": "DUP1"
    },
    "3859": {
      "op": "DUP3"
    },
    "3860": {
      "op": "GT"
    },
    "3861": {
      "op": "ISZERO"
    },
    "3862": {
      "op": "PUSH2",
      "value": "0xF1E"
    },
    "3865": {
      "op": "JUMPI"
    },
    "3866": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3868": {
      "op": "DUP1"
    },
    "3869": {
      "op": "REVERT"
    },
    "3870": {
      "op": "JUMPDEST"
    },
    "3871": {
      "op": "DUP2"
    },
    "3872": {
      "op": "DUP8"
    },
    "3873": {
      "op": "ADD"
    },
    "3874": {
      "op": "SWAP2"
    },
    "3875": {
      "op": "POP"
    },
    "3876": {
      "op": "DUP8"
    },
    "3877": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3879": {
      "op": "DUP4"
    },
    "3880": {
      "op": "ADD"
    },
    "3881": {
      "op": "SLT"
    },
    "3882": {
      "op": "PUSH2",
      "value": "0xF32"
    },
    "3885": {
      "op": "JUMPI"
    },
    "3886": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3888": {
      "op": "DUP1"
    },
    "3889": {
      "op": "REVERT"
    },
    "3890": {
      "op": "JUMPDEST"
    },
    "3891": {
      "op": "DUP2"
    },
    "3892": {
      "op": "CALLDATALOAD"
    },
    "3893": {
      "op": "DUP2"
    },
    "3894": {
      "op": "DUP2"
    },
    "3895": {
      "op": "GT"
    },
    "3896": {
      "op": "ISZERO"
    },
    "3897": {
      "op": "PUSH2",
      "value": "0xF44"
    },
    "3900": {
      "op": "JUMPI"
    },
    "3901": {
      "op": "PUSH2",
      "value": "0xF44"
    },
    "3904": {
      "op": "PUSH2",
      "value": "0xEB7"
    },
    "3907": {
      "jump": "i",
      "op": "JUMP"
    },
    "3908": {
      "op": "JUMPDEST"
    },
    "3909": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3911": {
      "op": "MLOAD"
    },
    "3912": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3914": {
      "op": "DUP3"
    },
    "3915": {
      "op": "ADD"
    },
    "3916": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3918": {
      "op": "NOT"
    },
    "3919": {
      "op": "SWAP1"
    },
    "3920": {
      "op": "DUP2"
    },
    "3921": {
      "op": "AND"
    },
    "3922": {
      "op": "PUSH1",
      "value": "0x3F"
    },
    "3924": {
      "op": "ADD"
    },
    "3925": {
      "op": "AND"
    },
    "3926": {
      "op": "DUP2"
    },
    "3927": {
      "op": "ADD"
    },
    "3928": {
      "op": "SWAP1"
    },
    "3929": {
      "op": "DUP4"
    },
    "3930": {
      "op": "DUP3"
    },
    "3931": {
      "op": "GT"
    },
    "3932": {
      "op": "DUP2"
    },
    "3933": {
      "op": "DUP4"
    },
    "3934": {
      "op": "LT"
    },
    "3935": {
      "op": "OR"
    },
    "3936": {
      "op": "ISZERO"
    },
    "3937": {
      "op": "PUSH2",
      "value": "0xF6C"
    },
    "3940": {
      "op": "JUMPI"
    },
    "3941": {
      "op": "PUSH2",
      "value": "0xF6C"
    },
    "3944": {
      "op": "PUSH2",
      "value": "0xEB7"
    },
    "3947": {
      "jump": "i",
      "op": "JUMP"
    },
    "3948": {
      "op": "JUMPDEST"
    },
    "3949": {
      "op": "DUP2"
    },
    "3950": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3952": {
      "op": "MSTORE"
    },
    "3953": {
      "op": "DUP3"
    },
    "3954": {
      "op": "DUP2"
    },
    "3955": {
      "op": "MSTORE"
    },
    "3956": {
      "op": "DUP11"
    },
    "3957": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3959": {
      "op": "DUP5"
    },
    "3960": {
      "op": "DUP8"
    },
    "3961": {
      "op": "ADD"
    },
    "3962": {
      "op": "ADD"
    },
    "3963": {
      "op": "GT"
    },
    "3964": {
      "op": "ISZERO"
    },
    "3965": {
      "op": "PUSH2",
      "value": "0xF85"
    },
    "3968": {
      "op": "JUMPI"
    },
    "3969": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3971": {
      "op": "DUP1"
    },
    "3972": {
      "op": "REVERT"
    },
    "3973": {
      "op": "JUMPDEST"
    },
    "3974": {
      "op": "DUP3"
    },
    "3975": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3977": {
      "op": "DUP7"
    },
    "3978": {
      "op": "ADD"
    },
    "3979": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3981": {
      "op": "DUP4"
    },
    "3982": {
      "op": "ADD"
    },
    "3983": {
      "op": "CALLDATACOPY"
    },
    "3984": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3986": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3988": {
      "op": "DUP5"
    },
    "3989": {
      "op": "DUP4"
    },
    "3990": {
      "op": "ADD"
    },
    "3991": {
      "op": "ADD"
    },
    "3992": {
      "op": "MSTORE"
    },
    "3993": {
      "op": "DUP1"
    },
    "3994": {
      "op": "SWAP6"
    },
    "3995": {
      "op": "POP"
    },
    "3996": {
      "op": "POP"
    },
    "3997": {
      "op": "POP"
    },
    "3998": {
      "op": "POP"
    },
    "3999": {
      "op": "POP"
    },
    "4000": {
      "op": "POP"
    },
    "4001": {
      "op": "SWAP3"
    },
    "4002": {
      "op": "SWAP6"
    },
    "4003": {
      "op": "SWAP2"
    },
    "4004": {
      "op": "SWAP5"
    },
    "4005": {
      "op": "POP"
    },
    "4006": {
      "op": "SWAP3"
    },
    "4007": {
      "op": "POP"
    },
    "4008": {
      "jump": "o",
      "op": "JUMP"
    },
    "4009": {
      "op": "JUMPDEST"
    },
    "4010": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4012": {
      "op": "DUP1"
    },
    "4013": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4015": {
      "op": "DUP4"
    },
    "4016": {
      "op": "DUP6"
    },
    "4017": {
      "op": "SUB"
    },
    "4018": {
      "op": "SLT"
    },
    "4019": {
      "op": "ISZERO"
    },
    "4020": {
      "op": "PUSH2",
      "value": "0xFBC"
    },
    "4023": {
      "op": "JUMPI"
    },
    "4024": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4026": {
      "op": "DUP1"
    },
    "4027": {
      "op": "REVERT"
    },
    "4028": {
      "op": "JUMPDEST"
    },
    "4029": {
      "op": "PUSH2",
      "value": "0xFC5"
    },
    "4032": {
      "op": "DUP4"
    },
    "4033": {
      "op": "PUSH2",
      "value": "0xDDE"
    },
    "4036": {
      "jump": "i",
      "op": "JUMP"
    },
    "4037": {
      "op": "JUMPDEST"
    },
    "4038": {
      "op": "SWAP2"
    },
    "4039": {
      "op": "POP"
    },
    "4040": {
      "op": "PUSH2",
      "value": "0xFD3"
    },
    "4043": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4045": {
      "op": "DUP5"
    },
    "4046": {
      "op": "ADD"
    },
    "4047": {
      "op": "PUSH2",
      "value": "0xDDE"
    },
    "4050": {
      "jump": "i",
      "op": "JUMP"
    },
    "4051": {
      "op": "JUMPDEST"
    },
    "4052": {
      "op": "SWAP1"
    },
    "4053": {
      "op": "POP"
    },
    "4054": {
      "op": "SWAP3"
    },
    "4055": {
      "op": "POP"
    },
    "4056": {
      "op": "SWAP3"
    },
    "4057": {
      "op": "SWAP1"
    },
    "4058": {
      "op": "POP"
    },
    "4059": {
      "jump": "o",
      "op": "JUMP"
    },
    "4060": {
      "op": "JUMPDEST"
    },
    "4061": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4063": {
      "op": "DUP2"
    },
    "4064": {
      "op": "DUP2"
    },
    "4065": {
      "op": "SHR"
    },
    "4066": {
      "op": "SWAP1"
    },
    "4067": {
      "op": "DUP3"
    },
    "4068": {
      "op": "AND"
    },
    "4069": {
      "op": "DUP1"
    },
    "4070": {
      "op": "PUSH2",
      "value": "0xFF0"
    },
    "4073": {
      "op": "JUMPI"
    },
    "4074": {
      "op": "PUSH1",
      "value": "0x7F"
    },
    "4076": {
      "op": "DUP3"
    },
    "4077": {
      "op": "AND"
    },
    "4078": {
      "op": "SWAP2"
    },
    "4079": {
      "op": "POP"
    },
    "4080": {
      "op": "JUMPDEST"
    },
    "4081": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4083": {
      "op": "DUP3"
    },
    "4084": {
      "op": "LT"
    },
    "4085": {
      "op": "DUP2"
    },
    "4086": {
      "op": "SUB"
    },
    "4087": {
      "op": "PUSH2",
      "value": "0x1010"
    },
    "4090": {
      "op": "JUMPI"
    },
    "4091": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "4096": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4098": {
      "op": "SHL"
    },
    "4099": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4101": {
      "op": "MSTORE"
    },
    "4102": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "4104": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "4106": {
      "op": "MSTORE"
    },
    "4107": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4109": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4111": {
      "op": "REVERT"
    },
    "4112": {
      "op": "JUMPDEST"
    },
    "4113": {
      "op": "POP"
    },
    "4114": {
      "op": "SWAP2"
    },
    "4115": {
      "op": "SWAP1"
    },
    "4116": {
      "op": "POP"
    },
    "4117": {
      "jump": "o",
      "op": "JUMP"
    },
    "4118": {
      "op": "JUMPDEST"
    },
    "4119": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4121": {
      "op": "DUP1"
    },
    "4122": {
      "op": "DUP3"
    },
    "4123": {
      "op": "MSTORE"
    },
    "4124": {
      "op": "PUSH1",
      "value": "0x31"
    },
    "4126": {
      "op": "SWAP1"
    },
    "4127": {
      "op": "DUP3"
    },
    "4128": {
      "op": "ADD"
    },
    "4129": {
      "op": "MSTORE"
    },
    "4130": {
      "op": "PUSH32",
      "value": "0x4552433732313A207472616E736665722063616C6C6572206973206E6F74206F"
    },
    "4163": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4165": {
      "op": "DUP3"
    },
    "4166": {
      "op": "ADD"
    },
    "4167": {
      "op": "MSTORE"
    },
    "4168": {
      "op": "PUSH17",
      "value": "0x1DDB995C881B9BDC88185C1C1C9BDD9959"
    },
    "4186": {
      "op": "PUSH1",
      "value": "0x7A"
    },
    "4188": {
      "op": "SHL"
    },
    "4189": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4191": {
      "op": "DUP3"
    },
    "4192": {
      "op": "ADD"
    },
    "4193": {
      "op": "MSTORE"
    },
    "4194": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4196": {
      "op": "ADD"
    },
    "4197": {
      "op": "SWAP1"
    },
    "4198": {
      "jump": "o",
      "op": "JUMP"
    },
    "4199": {
      "op": "JUMPDEST"
    },
    "4200": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4202": {
      "op": "DUP4"
    },
    "4203": {
      "op": "MLOAD"
    },
    "4204": {
      "op": "PUSH2",
      "value": "0x1079"
    },
    "4207": {
      "op": "DUP2"
    },
    "4208": {
      "op": "DUP5"
    },
    "4209": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4211": {
      "op": "DUP9"
    },
    "4212": {
      "op": "ADD"
    },
    "4213": {
      "op": "PUSH2",
      "value": "0xD62"
    },
    "4216": {
      "jump": "i",
      "op": "JUMP"
    },
    "4217": {
      "op": "JUMPDEST"
    },
    "4218": {
      "op": "DUP4"
    },
    "4219": {
      "op": "MLOAD"
    },
    "4220": {
      "op": "SWAP1"
    },
    "4221": {
      "op": "DUP4"
    },
    "4222": {
      "op": "ADD"
    },
    "4223": {
      "op": "SWAP1"
    },
    "4224": {
      "op": "PUSH2",
      "value": "0x108D"
    },
    "4227": {
      "op": "DUP2"
    },
    "4228": {
      "op": "DUP4"
    },
    "4229": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4231": {
      "op": "DUP9"
    },
    "4232": {
      "op": "ADD"
    },
    "4233": {
      "op": "PUSH2",
      "value": "0xD62"
    },
    "4236": {
      "jump": "i",
      "op": "JUMP"
    },
    "4237": {
      "op": "JUMPDEST"
    },
    "4238": {
      "op": "ADD"
    },
    "4239": {
      "op": "SWAP5"
    },
    "4240": {
      "op": "SWAP4"
    },
    "4241": {
      "op": "POP"
    },
    "4242": {
      "op": "POP"
    },
    "4243": {
      "op": "POP"
    },
    "4244": {
      "op": "POP"
    },
    "4245": {
      "jump": "o",
      "op": "JUMP"
    },
    "4246": {
      "op": "JUMPDEST"
    },
    "4247": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "4252": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4254": {
      "op": "SHL"
    },
    "4255": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4257": {
      "op": "MSTORE"
    },
    "4258": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "4260": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "4262": {
      "op": "MSTORE"
    },
    "4263": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4265": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4267": {
      "op": "REVERT"
    },
    "4268": {
      "op": "JUMPDEST"
    },
    "4269": {
      "op": "DUP2"
    },
    "4270": {
      "op": "DUP2"
    },
    "4271": {
      "op": "SUB"
    },
    "4272": {
      "op": "DUP2"
    },
    "4273": {
      "op": "DUP2"
    },
    "4274": {
      "op": "GT"
    },
    "4275": {
      "op": "ISZERO"
    },
    "4276": {
      "op": "PUSH2",
      "value": "0x24B"
    },
    "4279": {
      "op": "JUMPI"
    },
    "4280": {
      "op": "PUSH2",
      "value": "0x24B"
    },
    "4283": {
      "op": "PUSH2",
      "value": "0x1096"
    },
    "4286": {
      "jump": "i",
      "op": "JUMP"
    },
    "4287": {
      "op": "JUMPDEST"
    },
    "4288": {
      "op": "DUP1"
    },
    "4289": {
      "op": "DUP3"
    },
    "4290": {
      "op": "ADD"
    },
    "4291": {
      "op": "DUP1"
    },
    "4292": {
      "op": "DUP3"
    },
    "4293": {
      "op": "GT"
    },
    "4294": {
      "op": "ISZERO"
    },
    "4295": {
      "op": "PUSH2",
      "value": "0x24B"
    },
    "4298": {
      "op": "JUMPI"
    },
    "4299": {
      "op": "PUSH2",
      "value": "0x24B"
    },
    "4302": {
      "op": "PUSH2",
      "value": "0x1096"
    },
    "4305": {
      "jump": "i",
      "op": "JUMP"
    },
    "4306": {
      "op": "JUMPDEST"
    },
    "4307": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4309": {
      "op": "DUP1"
    },
    "4310": {
      "op": "DUP3"
    },
    "4311": {
      "op": "MSTORE"
    },
    "4312": {
      "op": "PUSH1",
      "value": "0x32"
    },
    "4314": {
      "op": "SWAP1"
    },
    "4315": {
      "op": "DUP3"
    },
    "4316": {
      "op": "ADD"
    },
    "4317": {
      "op": "MSTORE"
    },
    "4318": {
      "op": "PUSH32",
      "value": "0x4552433732313A207472616E7366657220746F206E6F6E204552433732315265"
    },
    "4351": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4353": {
      "op": "DUP3"
    },
    "4354": {
      "op": "ADD"
    },
    "4355": {
      "op": "MSTORE"
    },
    "4356": {
      "op": "PUSH18",
      "value": "0x31B2B4BB32B91034B6B83632B6B2B73A32B9"
    },
    "4375": {
      "op": "PUSH1",
      "value": "0x71"
    },
    "4377": {
      "op": "SHL"
    },
    "4378": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4380": {
      "op": "DUP3"
    },
    "4381": {
      "op": "ADD"
    },
    "4382": {
      "op": "MSTORE"
    },
    "4383": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4385": {
      "op": "ADD"
    },
    "4386": {
      "op": "SWAP1"
    },
    "4387": {
      "jump": "o",
      "op": "JUMP"
    },
    "4388": {
      "op": "JUMPDEST"
    },
    "4389": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4391": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4393": {
      "op": "DUP3"
    },
    "4394": {
      "op": "ADD"
    },
    "4395": {
      "op": "PUSH2",
      "value": "0x1136"
    },
    "4398": {
      "op": "JUMPI"
    },
    "4399": {
      "op": "PUSH2",
      "value": "0x1136"
    },
    "4402": {
      "op": "PUSH2",
      "value": "0x1096"
    },
    "4405": {
      "jump": "i",
      "op": "JUMP"
    },
    "4406": {
      "op": "JUMPDEST"
    },
    "4407": {
      "op": "POP"
    },
    "4408": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4410": {
      "op": "ADD"
    },
    "4411": {
      "op": "SWAP1"
    },
    "4412": {
      "jump": "o",
      "op": "JUMP"
    },
    "4413": {
      "op": "JUMPDEST"
    },
    "4414": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "4419": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4421": {
      "op": "SHL"
    },
    "4422": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4424": {
      "op": "MSTORE"
    },
    "4425": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "4427": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "4429": {
      "op": "MSTORE"
    },
    "4430": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4432": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4434": {
      "op": "REVERT"
    },
    "4435": {
      "op": "JUMPDEST"
    },
    "4436": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4438": {
      "op": "DUP3"
    },
    "4439": {
      "op": "PUSH2",
      "value": "0x1162"
    },
    "4442": {
      "op": "JUMPI"
    },
    "4443": {
      "op": "PUSH2",
      "value": "0x1162"
    },
    "4446": {
      "op": "PUSH2",
      "value": "0x113D"
    },
    "4449": {
      "jump": "i",
      "op": "JUMP"
    },
    "4450": {
      "op": "JUMPDEST"
    },
    "4451": {
      "op": "POP"
    },
    "4452": {
      "op": "DIV"
    },
    "4453": {
      "op": "SWAP1"
    },
    "4454": {
      "jump": "o",
      "op": "JUMP"
    },
    "4455": {
      "op": "JUMPDEST"
    },
    "4456": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4458": {
      "op": "DUP3"
    },
    "4459": {
      "op": "PUSH2",
      "value": "0x1176"
    },
    "4462": {
      "op": "JUMPI"
    },
    "4463": {
      "op": "PUSH2",
      "value": "0x1176"
    },
    "4466": {
      "op": "PUSH2",
      "value": "0x113D"
    },
    "4469": {
      "jump": "i",
      "op": "JUMP"
    },
    "4470": {
      "op": "JUMPDEST"
    },
    "4471": {
      "op": "POP"
    },
    "4472": {
      "op": "MOD"
    },
    "4473": {
      "op": "SWAP1"
    },
    "4474": {
      "jump": "o",
      "op": "JUMP"
    },
    "4475": {
      "op": "JUMPDEST"
    },
    "4476": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "4481": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4483": {
      "op": "SHL"
    },
    "4484": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4486": {
      "op": "MSTORE"
    },
    "4487": {
      "op": "PUSH1",
      "value": "0x32"
    },
    "4489": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "4491": {
      "op": "MSTORE"
    },
    "4492": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4494": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4496": {
      "op": "REVERT"
    },
    "4497": {
      "op": "JUMPDEST"
    },
    "4498": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4500": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4502": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4504": {
      "op": "SHL"
    },
    "4505": {
      "op": "SUB"
    },
    "4506": {
      "op": "DUP6"
    },
    "4507": {
      "op": "DUP2"
    },
    "4508": {
      "op": "AND"
    },
    "4509": {
      "op": "DUP3"
    },
    "4510": {
      "op": "MSTORE"
    },
    "4511": {
      "op": "DUP5"
    },
    "4512": {
      "op": "AND"
    },
    "4513": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4515": {
      "op": "DUP3"
    },
    "4516": {
      "op": "ADD"
    },
    "4517": {
      "op": "MSTORE"
    },
    "4518": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4520": {
      "op": "DUP2"
    },
    "4521": {
      "op": "ADD"
    },
    "4522": {
      "op": "DUP4"
    },
    "4523": {
      "op": "SWAP1"
    },
    "4524": {
      "op": "MSTORE"
    },
    "4525": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4527": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4529": {
      "op": "DUP3"
    },
    "4530": {
      "op": "ADD"
    },
    "4531": {
      "op": "DUP2"
    },
    "4532": {
      "op": "SWAP1"
    },
    "4533": {
      "op": "MSTORE"
    },
    "4534": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4536": {
      "op": "SWAP1"
    },
    "4537": {
      "op": "PUSH2",
      "value": "0x11C4"
    },
    "4540": {
      "op": "SWAP1"
    },
    "4541": {
      "op": "DUP4"
    },
    "4542": {
      "op": "ADD"
    },
    "4543": {
      "op": "DUP5"
    },
    "4544": {
      "op": "PUSH2",
      "value": "0xD86"
    },
    "4547": {
      "jump": "i",
      "op": "JUMP"
    },
    "4548": {
      "op": "JUMPDEST"
    },
    "4549": {
      "op": "SWAP7"
    },
    "4550": {
      "op": "SWAP6"
    },
    "4551": {
      "op": "POP"
    },
    "4552": {
      "op": "POP"
    },
    "4553": {
      "op": "POP"
    },
    "4554": {
      "op": "POP"
    },
    "4555": {
      "op": "POP"
    },
    "4556": {
      "op": "POP"
    },
    "4557": {
      "jump": "o",
      "op": "JUMP"
    },
    "4558": {
      "op": "JUMPDEST"
    },
    "4559": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4561": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4563": {
      "op": "DUP3"
    },
    "4564": {
      "op": "DUP5"
    },
    "4565": {
      "op": "SUB"
    },
    "4566": {
      "op": "SLT"
    },
    "4567": {
      "op": "ISZERO"
    },
    "4568": {
      "op": "PUSH2",
      "value": "0x11E0"
    },
    "4571": {
      "op": "JUMPI"
    },
    "4572": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4574": {
      "op": "DUP1"
    },
    "4575": {
      "op": "REVERT"
    },
    "4576": {
      "op": "JUMPDEST"
    },
    "4577": {
      "op": "DUP2"
    },
    "4578": {
      "op": "MLOAD"
    },
    "4579": {
      "op": "PUSH2",
      "value": "0x713"
    },
    "4582": {
      "op": "DUP2"
    },
    "4583": {
      "op": "PUSH2",
      "value": "0xD2C"
    },
    "4586": {
      "jump": "i",
      "op": "JUMP"
    }
  },
  "sha1": "94040f5f904754bdb4d6186c69a726e43507927c",
  "source": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC721/ERC721.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC721.sol\";\nimport \"./IERC721Receiver.sol\";\nimport \"./extensions/IERC721Metadata.sol\";\nimport \"../../utils/Address.sol\";\nimport \"../../utils/Context.sol\";\nimport \"../../utils/Strings.sol\";\nimport \"../../utils/introspection/ERC165.sol\";\n\n/**\n * @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\n * the Metadata extension, but not including the Enumerable extension, which is available separately as\n * {ERC721Enumerable}.\n */\ncontract ERC721 is Context, ERC165, IERC721, IERC721Metadata {\n    using Address for address;\n    using Strings for uint256;\n\n    // Token name\n    string private _name;\n\n    // Token symbol\n    string private _symbol;\n\n    // Mapping from token ID to owner address\n    mapping(uint256 => address) private _owners;\n\n    // Mapping owner address to token count\n    mapping(address => uint256) private _balances;\n\n    // Mapping from token ID to approved address\n    mapping(uint256 => address) private _tokenApprovals;\n\n    // Mapping from owner to operator approvals\n    mapping(address => mapping(address => bool)) private _operatorApprovals;\n\n    /**\n     * @dev Initializes the contract by setting a `name` and a `symbol` to the token collection.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\n        return\n            interfaceId == type(IERC721).interfaceId ||\n            interfaceId == type(IERC721Metadata).interfaceId ||\n            super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev See {IERC721-balanceOf}.\n     */\n    function balanceOf(address owner) public view virtual override returns (uint256) {\n        require(owner != address(0), \"ERC721: balance query for the zero address\");\n        return _balances[owner];\n    }\n\n    /**\n     * @dev See {IERC721-ownerOf}.\n     */\n    function ownerOf(uint256 tokenId) public view virtual override returns (address) {\n        address owner = _owners[tokenId];\n        require(owner != address(0), \"ERC721: owner query for nonexistent token\");\n        return owner;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-name}.\n     */\n    function name() public view virtual override returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-symbol}.\n     */\n    function symbol() public view virtual override returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-tokenURI}.\n     */\n    function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {\n        require(_exists(tokenId), \"ERC721Metadata: URI query for nonexistent token\");\n\n        string memory baseURI = _baseURI();\n        return bytes(baseURI).length > 0 ? string(abi.encodePacked(baseURI, tokenId.toString())) : \"\";\n    }\n\n    /**\n     * @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n     * token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n     * by default, can be overridden in child contracts.\n     */\n    function _baseURI() internal view virtual returns (string memory) {\n        return \"\";\n    }\n\n    /**\n     * @dev See {IERC721-approve}.\n     */\n    function approve(address to, uint256 tokenId) public virtual override {\n        address owner = ERC721.ownerOf(tokenId);\n        require(to != owner, \"ERC721: approval to current owner\");\n\n        require(\n            _msgSender() == owner || isApprovedForAll(owner, _msgSender()),\n            \"ERC721: approve caller is not owner nor approved for all\"\n        );\n\n        _approve(to, tokenId);\n    }\n\n    /**\n     * @dev See {IERC721-getApproved}.\n     */\n    function getApproved(uint256 tokenId) public view virtual override returns (address) {\n        require(_exists(tokenId), \"ERC721: approved query for nonexistent token\");\n\n        return _tokenApprovals[tokenId];\n    }\n\n    /**\n     * @dev See {IERC721-setApprovalForAll}.\n     */\n    function setApprovalForAll(address operator, bool approved) public virtual override {\n        _setApprovalForAll(_msgSender(), operator, approved);\n    }\n\n    /**\n     * @dev See {IERC721-isApprovedForAll}.\n     */\n    function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {\n        return _operatorApprovals[owner][operator];\n    }\n\n    /**\n     * @dev See {IERC721-transferFrom}.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) public virtual override {\n        //solhint-disable-next-line max-line-length\n        require(_isApprovedOrOwner(_msgSender(), tokenId), \"ERC721: transfer caller is not owner nor approved\");\n\n        _transfer(from, to, tokenId);\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) public virtual override {\n        safeTransferFrom(from, to, tokenId, \"\");\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes memory _data\n    ) public virtual override {\n        require(_isApprovedOrOwner(_msgSender(), tokenId), \"ERC721: transfer caller is not owner nor approved\");\n        _safeTransfer(from, to, tokenId, _data);\n    }\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\n     *\n     * `_data` is additional data, it has no specified format and it is sent in call to `to`.\n     *\n     * This internal function is equivalent to {safeTransferFrom}, and can be used to e.g.\n     * implement alternative mechanisms to perform token transfer, such as signature-based.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeTransfer(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes memory _data\n    ) internal virtual {\n        _transfer(from, to, tokenId);\n        require(_checkOnERC721Received(from, to, tokenId, _data), \"ERC721: transfer to non ERC721Receiver implementer\");\n    }\n\n    /**\n     * @dev Returns whether `tokenId` exists.\n     *\n     * Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\n     *\n     * Tokens start existing when they are minted (`_mint`),\n     * and stop existing when they are burned (`_burn`).\n     */\n    function _exists(uint256 tokenId) internal view virtual returns (bool) {\n        return _owners[tokenId] != address(0);\n    }\n\n    /**\n     * @dev Returns whether `spender` is allowed to manage `tokenId`.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function _isApprovedOrOwner(address spender, uint256 tokenId) internal view virtual returns (bool) {\n        require(_exists(tokenId), \"ERC721: operator query for nonexistent token\");\n        address owner = ERC721.ownerOf(tokenId);\n        return (spender == owner || isApprovedForAll(owner, spender) || getApproved(tokenId) == spender);\n    }\n\n    /**\n     * @dev Safely mints `tokenId` and transfers it to `to`.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeMint(address to, uint256 tokenId) internal virtual {\n        _safeMint(to, tokenId, \"\");\n    }\n\n    /**\n     * @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\n     */\n    function _safeMint(\n        address to,\n        uint256 tokenId,\n        bytes memory _data\n    ) internal virtual {\n        _mint(to, tokenId);\n        require(\n            _checkOnERC721Received(address(0), to, tokenId, _data),\n            \"ERC721: transfer to non ERC721Receiver implementer\"\n        );\n    }\n\n    /**\n     * @dev Mints `tokenId` and transfers it to `to`.\n     *\n     * WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - `to` cannot be the zero address.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _mint(address to, uint256 tokenId) internal virtual {\n        require(to != address(0), \"ERC721: mint to the zero address\");\n        require(!_exists(tokenId), \"ERC721: token already minted\");\n\n        _beforeTokenTransfer(address(0), to, tokenId);\n\n        _balances[to] += 1;\n        _owners[tokenId] = to;\n\n        emit Transfer(address(0), to, tokenId);\n\n        _afterTokenTransfer(address(0), to, tokenId);\n    }\n\n    /**\n     * @dev Destroys `tokenId`.\n     * The approval is cleared when the token is burned.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _burn(uint256 tokenId) internal virtual {\n        address owner = ERC721.ownerOf(tokenId);\n\n        _beforeTokenTransfer(owner, address(0), tokenId);\n\n        // Clear approvals\n        _approve(address(0), tokenId);\n\n        _balances[owner] -= 1;\n        delete _owners[tokenId];\n\n        emit Transfer(owner, address(0), tokenId);\n\n        _afterTokenTransfer(owner, address(0), tokenId);\n    }\n\n    /**\n     * @dev Transfers `tokenId` from `from` to `to`.\n     *  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _transfer(\n        address from,\n        address to,\n        uint256 tokenId\n    ) internal virtual {\n        require(ERC721.ownerOf(tokenId) == from, \"ERC721: transfer from incorrect owner\");\n        require(to != address(0), \"ERC721: transfer to the zero address\");\n\n        _beforeTokenTransfer(from, to, tokenId);\n\n        // Clear approvals from the previous owner\n        _approve(address(0), tokenId);\n\n        _balances[from] -= 1;\n        _balances[to] += 1;\n        _owners[tokenId] = to;\n\n        emit Transfer(from, to, tokenId);\n\n        _afterTokenTransfer(from, to, tokenId);\n    }\n\n    /**\n     * @dev Approve `to` to operate on `tokenId`\n     *\n     * Emits a {Approval} event.\n     */\n    function _approve(address to, uint256 tokenId) internal virtual {\n        _tokenApprovals[tokenId] = to;\n        emit Approval(ERC721.ownerOf(tokenId), to, tokenId);\n    }\n\n    /**\n     * @dev Approve `operator` to operate on all of `owner` tokens\n     *\n     * Emits a {ApprovalForAll} event.\n     */\n    function _setApprovalForAll(\n        address owner,\n        address operator,\n        bool approved\n    ) internal virtual {\n        require(owner != operator, \"ERC721: approve to caller\");\n        _operatorApprovals[owner][operator] = approved;\n        emit ApprovalForAll(owner, operator, approved);\n    }\n\n    /**\n     * @dev Internal function to invoke {IERC721Receiver-onERC721Received} on a target address.\n     * The call is not executed if the target address is not a contract.\n     *\n     * @param from address representing the previous owner of the given token ID\n     * @param to target address that will receive the tokens\n     * @param tokenId uint256 ID of the token to be transferred\n     * @param _data bytes optional data to send along with the call\n     * @return bool whether the call correctly returned the expected magic value\n     */\n    function _checkOnERC721Received(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes memory _data\n    ) private returns (bool) {\n        if (to.isContract()) {\n            try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, _data) returns (bytes4 retval) {\n                return retval == IERC721Receiver.onERC721Received.selector;\n            } catch (bytes memory reason) {\n                if (reason.length == 0) {\n                    revert(\"ERC721: transfer to non ERC721Receiver implementer\");\n                } else {\n                    assembly {\n                        revert(add(32, reason), mload(reason))\n                    }\n                }\n            }\n        } else {\n            return true;\n        }\n    }\n\n    /**\n     * @dev Hook that is called before any token transfer. This includes minting\n     * and burning.\n     *\n     * Calling conditions:\n     *\n     * - When `from` and `to` are both non-zero, ``from``'s `tokenId` will be\n     * transferred to `to`.\n     * - When `from` is zero, `tokenId` will be minted for `to`.\n     * - When `to` is zero, ``from``'s `tokenId` will be burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _beforeTokenTransfer(\n        address from,\n        address to,\n        uint256 tokenId\n    ) internal virtual {}\n\n    /**\n     * @dev Hook that is called after any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _afterTokenTransfer(\n        address from,\n        address to,\n        uint256 tokenId\n    ) internal virtual {}\n}\n",
  "sourceMap": "628:13658:0:-:0;;;1390:113;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1456:5;:13;1464:5;1456;:13;:::i;:::-;-1:-1:-1;1479:7:0;:17;1489:7;1479;:17;:::i;:::-;;1390:113;;628:13658;;14:127:13;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:844;200:5;253:3;246:4;238:6;234:17;230:27;220:55;;271:1;268;261:12;220:55;294:13;;-1:-1:-1;;;;;356:10:13;;;353:36;;;369:18;;:::i;:::-;444:2;438:9;412:2;498:13;;-1:-1:-1;;494:22:13;;;518:2;490:31;486:40;474:53;;;542:18;;;562:22;;;539:46;536:72;;;588:18;;:::i;:::-;628:10;624:2;617:22;663:2;655:6;648:18;685:4;675:14;;732:3;725:4;720:2;712:6;708:15;704:26;701:35;698:55;;;749:1;746;739:12;698:55;771:1;762:10;;781:133;795:2;792:1;789:9;781:133;;;883:14;;;879:23;;873:30;852:14;;;848:23;;841:63;806:10;;;;781:133;;;958:1;951:4;946:2;938:6;934:15;930:26;923:37;978:6;969:15;;;;;;146:844;;;;:::o;995:562::-;1094:6;1102;1155:2;1143:9;1134:7;1130:23;1126:32;1123:52;;;1171:1;1168;1161:12;1123:52;1198:16;;-1:-1:-1;;;;;1263:14:13;;;1260:34;;;1290:1;1287;1280:12;1260:34;1313:61;1366:7;1357:6;1346:9;1342:22;1313:61;:::i;:::-;1303:71;;1420:2;1409:9;1405:18;1399:25;1383:41;;1449:2;1439:8;1436:16;1433:36;;;1465:1;1462;1455:12;1433:36;;1488:63;1543:7;1532:8;1521:9;1517:24;1488:63;:::i;:::-;1478:73;;;995:562;;;;;:::o;1562:380::-;1641:1;1637:12;;;;1684;;;1705:61;;1759:4;1751:6;1747:17;1737:27;;1705:61;1812:2;1804:6;1801:14;1781:18;1778:38;1775:161;;1858:10;1853:3;1849:20;1846:1;1839:31;1893:4;1890:1;1883:15;1921:4;1918:1;1911:15;1775:161;;1562:380;;;:::o;2073:543::-;2175:2;2170:3;2167:11;2164:446;;;2211:1;2235:5;2232:1;2225:16;2279:4;2276:1;2266:18;2349:2;2337:10;2333:19;2330:1;2326:27;2320:4;2316:38;2385:4;2373:10;2370:20;2367:47;;;-1:-1:-1;2408:4:13;2367:47;2463:2;2458:3;2454:12;2451:1;2447:20;2441:4;2437:31;2427:41;;2518:82;2536:2;2529:5;2526:13;2518:82;;;2581:17;;;2562:1;2551:13;2518:82;;;2522:3;;;2164:446;2073:543;;;:::o;2792:1345::-;2912:10;;-1:-1:-1;;;;;2934:30:13;;2931:56;;;2967:18;;:::i;:::-;2996:97;3086:6;3046:38;3078:4;3072:11;3046:38;:::i;:::-;3040:4;2996:97;:::i;:::-;3148:4;;3205:2;3194:14;;3222:1;3217:663;;;;3924:1;3941:6;3938:89;;;-1:-1:-1;3993:19:13;;;3987:26;3938:89;-1:-1:-1;;2749:1:13;2745:11;;;2741:24;2737:29;2727:40;2773:1;2769:11;;;2724:57;4040:81;;3187:944;;3217:663;2020:1;2013:14;;;2057:4;2044:18;;-1:-1:-1;;3253:20:13;;;3371:236;3385:7;3382:1;3379:14;3371:236;;;3474:19;;;3468:26;3453:42;;3566:27;;;;3534:1;3522:14;;;;3401:19;;3371:236;;;3375:3;3635:6;3626:7;3623:19;3620:201;;;3696:19;;;3690:26;-1:-1:-1;;3779:1:13;3775:14;;;3791:3;3771:24;3767:37;3763:42;3748:58;3733:74;;3620:201;-1:-1:-1;;;;;3867:1:13;3851:14;;;3847:22;3834:36;;-1:-1:-1;2792:1345:13:o;:::-;628:13658:0;;;;;;",
  "sourcePath": "/home/john/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.6.0/contracts/token/ERC721/ERC721.sol",
  "type": "contract"
}